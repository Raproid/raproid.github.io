{"/":{"title":"Welcome to Ankr Docs","data":{"":"Find information on Ankr products, SDK documentation, API references, RPC methods, Web3 tutorials, developer guides, codes, and more.This documentation serves as a resource to explore how you can use and integrate Ankr's full suite of decentralized products and services ranging from free public RPC endpoints that developers have come to know and love, alongside new Premium and Enterprise plans packed with advanced developer tools — all powered by a globally distributed and decentralized network of nodes.","app-chains#App Chains":"Transition from Web2 to Web3 seamlessly\nOrder a turnkey dedicated blockchain tailored to you\nChoose separate components your project needs\nBuild a fast and secure blockchain with BNB Sidechain\n\n\nBring your project to Web3↗","ankr-build#Ankr Build":"Access Premium APIs and RPC endpoints with WebSockets\nSeamless interaction with 40+ supported blockchains\nSuitable for Web3 developers and enthusiasts of all skill levels\nMultichain JS SDK\n\n\nUse Ankr infrastructure and access blockchains↗","ankr-staking#Ankr Staking":"Easily stake 5+ tokens on a secure, decentralized network\nEarn rewards on tokens without needing technical knowledge\nConnect staking rewards to DeFi to trade/farm for even higher APY\nIntegrate Ankr Staking into your projects\n\n\nStake, earn, and integrate↗","ankr-gaming#Ankr Gaming":"Take your game to the next level — Web3\nLaunch your Web3 monetization strategy\nIntegrate Web3 wallets easily\nCompatible with Unity and Unreal Engine\n\n\nTake your game to Web3↗","ankr-learn#Ankr Learn":"Learn how to develop Smart Contracts, build dApps, explore tools and frameworks, and more.\nFind getting started tutorials, guide and follow along to ship cool stuff.\nExplore code guide, tools, tutorials and resoures you need to write and deploy smart contracts.\nFind End-to-End tutorials to build and ship full-fledged decentralized applications.\n\n\nLearn and practice Web3↗"}},"/build":{"title":"Introduction","data":{"":"Ankr provides a distributed nodes infrastructure supporting a multi-chain network and providing tools for developers to start building Web3 projects.\nAnkr RPC Service is a major part of Ankr Build and contains various components depending on your Plan:\nPublic Plan: Free and instant access to our range of Public RPC APIs.\nPremium Plan: Sign up to our Pay-as-you-go Premium Plan with a minimum deposit of 1000 ANKR and get access to powerful features.\nAnkr Scan: Ankr Scan is a multi-chain Explorer that allows viewing assets across chains as well as assigned to a specific wallet address.\nNode Services: Full, Archive, and Validator/Staking nodes are available for 50+ chains.","overview#Overview":"Ankr RPC Service is the gateway through which Web3 developers, projects, and protocols connect to the node infrastructure and development tools they need to build Web3 applications.The evolution of Ankr Network includes our free, public RPC endpoints that developers have come to know and love, alongside new Premium and Enterprise plans packed with advanced developer tools — all powered by a globally distributed and decentralized network of nodes. In the new Ankr Network, developers pay-as-they-go for access to on-chain data, independent node providers serve blockchain requests to earn ANKR tokens, and stakers contribute ANKR tokens to full nodes to secure the network and share in the rewards.Public RPCs are available to all and free to use on the Ankr RPC platform. Today, blockchain developers and projects can use these RPC endpoints to access Polygon, Avalanche, Arbitrum, Solana, Celo, Near, Fantom, Ethereum, and many other blockchain networks with no need to input user info or login credentials. Simply visit our RPC Services to start using these endpoints.To access all the advanced features of Ankr RPC, developers can use Premium services with a flexible and affordable pay-as-you-go model denominated in ANKR tokens. Premium features include exclusive multi-chain RPC endpoints, prioritized requests, WebSockets, and Advanced Developer APIs that are designed to make Web3 development an easy task.","public-plan#Public Plan":"Public Plan is central to the Ankr vision of mass adoption in Web3 and crypto economy. Ankr's Public Plan provides a zero-cost and reliable access to RPC API endpoints for growing number of networks:Check out the latest chains on Ankr RPC.","get-started-using-public-plan#Get started using Public plan":"Go to Ankr RPC service.\nIn Sidebar, click Endpoints to open the pane.\nIn the list of blockchains, click the one you'd like to interact with.\nIn the Blockchain opened, select a chain type (Mainnet/Testnet) needed for your project.\nOn the Connection tab, in the URL block, copy the URL into your project's library or config file.","how-it-works#How it works":"The Public Plan's services are being kept stable using a backbone of multiple underlying nodes globally distributed across 200 data centers as well as individual providers' homes.Constant system monitoring ensures that RPC endpoints are synced in real-time to underlying nodes. Whilst, network traffic monitoring uses intelligent caching to optimize speed and automate routing to the best available node at busy times.This architecture is built to meet the requirements for high availability and scalability.","premium-plan#Premium Plan":"Premium Plan provides access to a range of exclusive features that allow you to build on a secure, reliable, ultra-fast multi-chain network. See more info on the Premium Plan's pricing and charging model.","key-features#Key features":"Unique collection of JSON-RPC API endpoints. Read more.\nSecure and private endpoints for HTTPS and WSS. Read more.\nOn-request Hybrid Infrastructure functionality. Read more.","benefits#Benefits":"Premium Plan provides a set of secure and private RPC API endpoints exclusive to you. Those endpoints are designed to have greater reliability by interfacing with a fully distributed, ultra low latency node pool. This node network infrastructure is distinct from the Public Plan's one.Enjoy the following benefits:\nAt times of network congestion, Premium Plan requests are prioritized.\nEstablish a durable, low-latency connection via the websocket endpoint and have data pushed incrementally directly to you as soon as it is available. This makes it ideal for real-time data analytics.\n\n\nThe WebSocket API limits the maximum number of simultaneous connections to provide protection against misuse, such as DDoS attacks, for example. If your Websocket client makes too many connections at the same time, you'll receive an Error message.\nCheck out How to connect to Premium websockets."}},"/build/concepts/pay-as-you-go-general":{"title":"pay-as-you-go-general","data":{"":"Introducing pay-as-you-go, a usage-based pricing that enables Ankr Protocol users to pay for each request they make to blockchain without having to overpay for any annual subscriptions. To get started with the premium features, all you have to do is make a minimum deposit of 1000 ANKR tokens and create Ankr Protocol's premium account.","how-does-it-work#How does it work?":"We have created a system in which each request sent through an endpoint will costs a certain number of units called \"credits.\" Depositing one ANKR token will give you a credit score of 1,000,000. You can always interchange your credits with the ANKR token. For example, if after depositing you decide that you don't want this much of loan, you can always withdraw your tokens back at the same rate.:::danger Warning\nThe withdrawal function is under development, it will be live in the next release.\n:::","how-to-get-started#How to get started?":"Connect your wallet to the Ankr Protocol page\nExplore the Account Details section in sidebar\nTop up the account with the desired amount of ANKR tokens\nWait for our system to generate personal endpoints for you","pricing#Pricing":"At Ankr, we are set to provide developers with pricing that is several times lower than what is being offered in the market - all while accessing a full functionality of geographically distributed load balancer for a fraction of the price.Below you can find the price point for blockchains that support standard EVM methods. For all other methods and blockchains, the default price is set to 100 credits.\nMethod\tAnkr Credits\teth_getLogs\t700\teth_estimateGas\t700\tweb3_clientVersion\t200\tweb3_sha3\t200\teth_getBlockByNumber\t200\teth_getBlockByHash\t200\teth_getTransactionReceipt\t200\teth_getUncleByBlockHashAndIndex\t200\teth_chainId\t200\teth_getBlockTransactionCountByHash\t200\teth_protocolVersion\t200\teth_call\t500\teth_accounts\t200\teth_getCode\t500\teth_sendRawTransaction\t700\teth_sign\t200\teth_gasPrice\t200\teth_getBlockTransactionCountByNumber\t200\teth_getCompilers\t200\teth_getUncleByBlockNumberAndIndex\t200\teth_getTransactionByHash\t200\teth_getUncleCountByBlockNumber\t200\teth_uninstallFilter\t200\teth_compileSolidity\t200\teth_getTransactionByBlockHashAndIndex\t200\teth_getTransactionByBlockNumberAndIndex\t200\teth_subscribe\t200\teth_unsubscribe\t200\teth_getTransactionCount\t200\teth_blockNumber\t200\teth_newBlockFilter\t200\teth_getBalance\t200\teth_getStorageAt\t200","future-development#Future development":"More features are coming soon!Hint: Support for granular usage for developing dApps, statistics, Advanced APIs, notifications, access lists, and much more."}},"/build/concepts/pricing-plans":{"title":"pricing-plans","data":{"":"","public-and-premium-plans-comparison#Public and Premium plans comparison":"Feature\tPublic Plan\tPremium Plan\tFull and Archive Data\t✅\t✅\tAdvanced API\t❌\t✅\tPriority order\tInferior to Premium;Limited during high traffic\tSuperior to Public;Prioritized during high traffic\tRequests per minute\t= 45k / all blockchains — guaranteed;> 45k / all blockchains — possible (depends on overall load)\t= 60k / endpoint — guaranteed;> 60k / endpoint — possible (depends on overall load)\tConnection\tHTTPS\tHTTPS and WebSockets\tSupport\tDiscord Support\tCustom SLA\tTerms\tNo Contract\tBoth Contract and No Contract\tCost\tFREE\tPay-as-you-go","payg-premium-plans-usage-based-pricing#PAYG: Premium plan's usage-based pricing":"Pay-as-you-go (PAYG) is a usage-based pricing model for the Premium Plan services. PAYG means that you commit to no subscriptions but pay for each request you make. To start using the Premium Plan features, you deposit a minimum amount of 1000 ANKR tokens and create an Ankr Premium account.","how-we-charge#How we charge?":"Premium Plan's usage measures in credits. PAYG model charges per method used. Various methods have different credit values per request. A method's credit value calculates based on a method's usage intensity and multiple factors that include using the computational, memory, storage, and network resources.Premium Plan supports two communication protocols:\nHTTPS — this one is used either for individual or batch requests.\nWebSocket — this one is used to establish a communication channel.\n\nWe charge no matter whether a request has been successful or not. In other words, a charge is taken for each request coming to our worker, regardless of a node's response.Here is the summary on PAYG charging:\nCorrect request (charged) — a request uses a supported method and has a valid JSON-RPC structure.\nIncorrect request (not charged) — a request has an invalid JSON-RPC structure or a batch request has the same ID in multiple requests. We can't parse such a request.\nCorrect request + incorrect method (charged default amount) — a request uses an unsupported method though has a valid JSON-RPC structure. We charge default amount of credits for the infrastructure usage.","pricing-calculator#Pricing calculator":"Use our beta pricing calculator for standard EVM methods. For all other methods and blockchains that don't support standard EVM methods, the default price is set to 100 credits.","get-started-with-premium#Get started with Premium":"Go to the RPC Services platform.\nConnect your wallet.\nTop up account balance.\nAdd Premium URLs into your project to interact with a blockchain."}},"/stake/bridge/bridge-mechanics":{"title":"bridge-mechanics","data":{"":"","smart-contracts#Smart contracts":"Smart contracts involved in bridging Liquid Staking tokens are:\nAnkr Ethereum bridge — sends assets to other blockchains and receives assets sent to Ethereum.\nAnkr Polygon bridge — sends assets to other blockchains and receives assets sent to Polygon.\nAnkr Binance bridge — sends assets to other blockchains and receives assets sent to Binance.","briding-workflow#Briding workflow":"The mechanics of what's going on under the hood when a user transfers their funds between network can be described as following:\nThe user has Ankr Liquid Staking tokens on the network where our smart contract minted them for said user.\nThe user wants to transfer them onto another network. They visit Ankr Bridge, choose the amount to be transferred and click Approve.\nThat causes Ankr Bridge to call the approve() function of the bridging smart contract to allow transfer of the assets. From the user side, it looks like they approve the operation in their MetaMask.\nThe user clicks Send on the page, which causes Ankr Bridge to call the deposit() function to transfer the assets to the destination network.\nThis operation is called peg-in.\nThe user's assets are now locked on Ankr Bridge and the user gets the transaction hash.\nThe user sends the transaction hash to Ankr backend for notarization.\nThe user clicks Switch on the page and switches to the destination network.\nThe user clicks Receive, which causes Ankr Bridge to call the withdraw() function (both for ERC-20 or native tokens).\nThis operation is called peg-out.\nThe user sees the transferred assets deposited to their wallet on the destination network.\n\nTo sum up, the flow in any direction is the same: approve() (if necessary) -> deposit() -> notarize -> withdraw()."}},"/stake/bridge/bridge-tokens":{"title":"How to bridge assets","data":{"":"We're going to explain bridging, using aMATICb.","bridge-amaticb#Bridge aMATICb":"Visit Ankr Bridge. aMATICb token is chosen by default.\nEnter the desired aMATICb amount to bridge.\nClick Switch network  to select the correct source and destination networks. Confirm the switch in your wallet.\nClick Approve to allow Ankr Staking to access your aMATICb and confirm it in your wallet.\nClick Send to deposit aMATICb to the destination network and confirm it in your wallet.We recommend choosing the high fee value for faster transaction mining time.\nAnkr Bridge shows you the sending progress. Wait till the cross-chain transaction successfully finishes.:::caution\nStay on the page until sending has completed in order to receive the bridged tokens. Do not navigate away or close the tab. If bridging fails for any reason, see the Finish Bridge section below.\n:::\nTo receive the bridged aMATICb on the destination network, switch to it by clicking Switch to network-name and click Confirm in your wallet.\nReceive aMATICb on the destination network by clicking Receive and confirming it in your wallet. Gas fee applies.You can see the transaction in the explorer by clicking the go-to button next to the transaction hash.","finish-bridge#Finish Bridge":"The Finish Bridge functionality allows you to get back to the bridging process if anything fails.The bridging process may fail due to:\nNavigating away from the Bridge page anytime during the process.\nClosing the page anytime during the process.\nAnkr Bridge failures due to network instability and other possible issues.\n\nIf the process failed anywhere before Step 5 from Bridge aMATICb, no action is needed. Just start bridging again.If the process failed at Step 5 or later:\nOpen your wallet, find and copy the transaction ID from the Deposit operation.\nVisit Ankr Bridge.\nClick Finish Bridge.\nPaste the deposit transaction ID in the form and click Proceed bridge.\nCheck that it brought you to the Sending progress page, then continue from Step 6 from Bridge aMATICb."}},"/stake/bridge":{"title":"What is Ankr Bridge?","data":{"":"","what-is-ankr-bridge#What is Ankr Bridge?":"Ankr Bridge is an Ankr product for bridging assets between networks.It allows you to transfer your Ankr Liquid Staking tokens to a different network where they remain a valid stake and continue to accumulate rewards.You receive Liquid Staking tokens when staking your original assets, in 1:1 ratio.","supported-tokens#Supported tokens":"Currently, Ankr Bridge supports the following native Ankr Liquid Tokens and allows you to transfer them between these networks:\naMATICb\nEthereum-Polygon-Ethereum\nEthereum-Binance-Ethereum\nPolygon-Binance-Polygon.\n\n\naETHb\nEthereum-Binance-Ethereum.\n\n\n\nWe're planning to add support for BNB, FTM, AVAX soon.","audit-details#Audit details":"Ankr Bridge has undergone external audit by Beosin Blockchain Security.\nTo learn more, view the detailed audit report.","why-ankr-bridge#Why Ankr Bridge?":"","user-benefits#User benefits":"Having staked your funds in Ankr Staking, you may find that you need them on the spot for some exciting opportunity you don't want to miss.\nHowever, unstaking may apply different release times for different tokens, and you may miss this opportunity.In this case, you can transfer your Ankr Liquid Staking tokens to any network via Ankr Bridge.\nYou can then use other Ankr Staking tools to earn more crypto by staking, arbitrage trading, liquidity mining, yield farming, and much more.\nYou can also trade the native tokens for your Liquid Staking tokens on a DEX, via Ankr DeFi on ankr.com (DEX fees may apply).","ankr-benefits#Ankr benefits":"Why did we need our own bridge instead of using existing solutions?\nAlmost all bridges are centralized and we'd like to manage our own solution.\nAlmost all bridges support only well-known ERC20 tokens, like the TOP30, and they don't support bridging for other ERC-20 compatible assets.\nThey don’t support NFT standards, such as ERC721.\nThey don’t support Ankr Liquid Staking tokens that feature a dynamic balance change. And when staking, users may want to transfer Ankr Liquid Tokens to other networks to sell them on DEXs.\n\nTypically, a cross-chain bridge uses wrapping or pegging mechanisms for bridging tokens.\nThis requires locking or burning funds on one of the chains as part of Proof-of-Lock of Proof-of-Burn.\nThe basic well-known schemes are lock->mint and burn->unlock that is enough for bridging almost all assets.\nHowever, if we want to bridge existing pegged tokens, like the Ankr token on Ethereum or BNB chain, this scheme is not applicable.\nWe can use the lock->unlock scheme instead of minting and burning. However, it also requires us to rebalance assets between two networks on our own.\nSince we’re going to support the lock->unlock scheme, we can also add support for Peg-ETH tokens (and all other Binance pegged tokens).\nWe can, of course, in the future, extend Ankr Bridge functionality by supporting other bridges, such as Avalanche Bridge and so on.","additional-information#Additional information":"If you want to know more, we have an interesting article about Ankr Bridge on Medium."}},"/learn":{"title":"Introduction","data":{"":"Find web3 tutorials, developer guides, codes, API references, RPC methods, and more.This documentation serves as a resource to explore how you can use and integrate Ankr's full suite of decentralized products and services ranging from free public RPC endpoints↗ that developers have come to know and love, alongside new Premium and Enterprise plans↗ packed with advanced developer tools↗ — all powered by a globally distributed and decentralized network of nodes.","ankr-tutorials---learn-web3#Ankr Tutorials - Learn Web3":"Learn how to develop Smart Contracts, build dApps, explore tools and frameworks, and more.","basic#Basic":"Find getting started tutorials, guide and follow along to ship cool stuff.\nWeb3 - Get Started Tutorials↗","smart-contract-development#Smart Contract Development":"Explore code guide, tools, tutorials and resoures you need to write and deploy smart contracts.\nSmart Contract Development Tutorials↗","advanced-tutorials#Advanced Tutorials":"Find End-to-End tutorials to build and ship full-fledged decentralized applications.\nIntermediate to Advanced Tutorials↗"}},"/learn/smart-contracts/Deploy-ERC-721-SmartContract-Avalanche":{"title":"Deploy an ERC-721 Smart Contract to Avalanche and Mint an NFT with Ankr, Hardhat, and Ethers.js","data":{"":""}},"/stake":{"title":"What is Ankr Staking?","data":{"":"Ankr Staking aims to bring the benefits of DeFi to the masses with the following solutions.","liquid-staking#Liquid Staking":"Liquid Staking extends the Staking experience to solve the problem of loss of liquidity and capital inefficiency.\nWhen assets are staked, they are usually locked up on-chain helping to maintain the network.\nHowever, Liquid Staking provides instant access to Liquid Staking tokens that are equivalent in value to the stake in a 1:1 ratio.\nThese portable Liquid Staking tokens e.g. aMATICb, aETHb, aETHc, aAVAXb can be utilized on additional DeFi platforms to earn further rewards.The clear benefits of Ankr Liquid Staking are:\nMinimum commitment costs\nImmediate access to liquidity\nTransfer of risks to Ankr experts","defi#DeFi":"DeFi provides a single dashboard view of use cases for Liquid Staking tokens.","ankr-bridge#Ankr Bridge":"Ankr Bridge brings cross-chain liquid staking to multiple chains to enable users to increase their yield opportunities.Ankr Bridge is secured with ECDSA cryptography and a multi-party computation based Threshold Signature Scheme. This ensures that private keys are never exposed whilst mitigating against any single point of failure.","ankr-switch#Ankr Switch":"Ankr Switch enables the exchange of Liquid Staking tokens: between reward earning tokens and reward bearing tokens for the same asset.","parachain-liquid-crowdloan#Parachain Liquid Crowdloan":"Parachain Liquid Crowdloan provide similar benefits to Staking.\nBond DOT/KSM: users bond DOT or KSM to a Polkadot project during a Parachain Slot Auction.\nLocked Liquidity: if the project wins a slot, the bonded DOT or KSM is inaccessible.\nAttain Instant Liquidity: however, Parachain Liquid Staking tokens can be instantly obtained. These are portable and usable elsewhere.\n\nToken rewards from the winning project are distributed to Parachain Liquid Crowdloan token holders automatically."}},"/stake/api-overview":{"title":"APIs","data":{"":"We are ready to provide our services to projects that need infrastructure as a service.If you want to offer your users a scalable and ready-to-use staking solution, use our API to integrate Ankr Staking into your project.:::note\nThe API docs are grouped with functionality in mind and include both smart contracts API and RESTful-like API. We hope this way alleviates your integration experience.\n:::"}},"/stake/bridge/mechanics":{"title":"Under the hood","data":{"":"","smart-contracts#Smart contracts":"Smart contracts involved in bridging Liquid Staking tokens are:\nAnkr Ethereum bridge — sends assets to other blockchains and receives assets sent to Ethereum.\nAnkr Polygon bridge — sends assets to other blockchains and receives assets sent to Polygon.\nAnkr Binance bridge — sends assets to other blockchains and receives assets sent to Binance.","briding-workflow#Briding workflow":"The mechanics of what's going on under the hood when a user transfers their funds between network can be described as following:\nThe user has Ankr Liquid Staking tokens on the network where our smart contract minted them for said user.\nThe user wants to transfer them onto another network. They visit Ankr Bridge, choose the amount to be transferred and click Approve.\nThat causes Ankr Bridge to call the approve() function of the bridging smart contract to allow transfer of the assets. From the user side, it looks like they approve the operation in their MetaMask.\nThe user clicks Send on the page, which causes Ankr Bridge to call the deposit() function to transfer the assets to the destination network.\nThis operation is called peg-in.\nThe user's assets are now locked on Ankr Bridge and the user gets the transaction hash.\nThe user sends the transaction hash to Ankr backend for notarization.\nThe user clicks Switch on the page and switches to the destination network.\nThe user clicks Receive, which causes Ankr Bridge to call the withdraw() function (both for ERC-20 or native tokens).\nThis operation is called peg-out.\nThe user sees the transferred assets deposited to their wallet on the destination network.\n\nTo sum up, the flow in any direction is the same: approve() (if necessary) -> deposit() -> notarize -> withdraw()."}},"/stake/sdk-overview":{"title":"SDKs","data":{"":"We are ready to provide our services to projects that need infrastructure as a service.If you want to offer your users a scalable and ready-to-use staking solution, use our SDK to integrate Ankr Staking into your project.","difference-between-api-and-sdk#Difference between API and SDK":"Our API and SDK are partially overlapping each other. However, Liquid Staking SDK features more methods than API.We recommend you use SDK over the API for easier integration and better experience, unless you need something specific that only the API can provide, such as Ankr Price Oracles.","liquid-crowdloan-sdk#Liquid Crowdloan SDK":"Liquid Crowdloan SDK allows you to integrate Parachain Liquid Crowdloan into your project.Liquid Crowdloan is a very specific and a little outdated functionality. If you don't know what it is, you probably don't need it in your project.","liquid-staking-sdk#Liquid Staking SDK":"Liquid Staking SDK allows you to integrate Ankr Liquid Staking into your project."}},"/stake/sdk":{"title":"Liquid Staking SDKs","data":{"":"We are ready to provide our services to projects that need infrastructure as a service.If you want to offer your users a scalable and ready-to-use staking solution, use our SDK to integrate Ankr Staking into your project.","difference-between-api-and-sdk#Difference between API and SDK":"Our API and SDK are partially overlapping each other. However, Liquid Staking SDK features more methods than API.We recommend you use SDK over the API for easier integration and better experience, unless you need something specific that only the API can provide, such as Ankr Price Oracles.","liquid-crowdloan-sdk#Liquid Crowdloan SDK":"Liquid Crowdloan SDK allows you to integrate Parachain Liquid Crowdloan into your project.Liquid Crowdloan is a very specific and a little outdated functionality. If you don't know what it is, you probably don't need it in your project.","liquid-staking-sdk#Liquid Staking SDK":"Liquid Staking SDK allows you to integrate Ankr Liquid Staking into your project."}},"/stake/api":{"title":"Liquid Staking APIs","data":{"":"We are ready to provide our services to projects that need infrastructure as a service.If you want to offer your users a scalable and ready-to-use staking solution, use our API to integrate Ankr Staking into your project.\nThe API docs are grouped with functionality in mind and include both smart contracts API and RESTful-like API. We hope this way alleviates your integration experience."}},"/stake/liquid-staking/sdk":{"title":"sdk","data":{"":"Integrating with Ankr Liquid Staking on Avalanche has become easier.Now you can skip the complications of Solidity and learning how to send direct calls to Liquid Staking smart contracts.\nInstead, use Liquid Staking SDK — an npm package with compound and comprehensible JS methods that take care of the low-level logic for you.","multiple-network-support#Multiple network support":"Liquid Staking SDK supports multiple networks and allows you to interact with:\nAvalanche blockchain: aAVAXb/aAVAXc tokens and Avalanche Liquid Staking contracts.\nBinance blockchain: aBNBb/aBNBc tokens and Binance Liquid Staking contracts.\nEthereum blockchain: aETHb/aETHc tokens and Ethereum Liquid Staking contracts; aMATICb/aMATICc tokens, and Polygon Liquid Staking contracts.\nFantom blockchain: aFTMb/aFTMc tokens and Fantom Liquid Staking contracts.","install-and-integrate#Install and integrate":"To integrate with the SDK, install the SDK npm package:\n# yarn\nyarn add @ankr.com/staking-sdk reselect\n\n# npm\nnpm i @ankr.com/staking-sdk reselect\n:::note\nTo interact with testsnet smart contracts, use the REACT_APP_API_ENV=staging environment variable. For mainnet smart contracts, use REACT_APP_API_ENV=prod.\n:::","usage-examples#Usage examples":"Here are some reference examples on how to user Liquid Stakin SDK in your project.","live-sample#Live sample":"Use the codesandbox get balance sample as specific live example of interacting with @ankr.com/staking-sdk.","polygon#Polygon":"Stake aMATICc token:\nimport { PolygonSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await PolygonSDK.getInstance();\n\nconst { txHash } = await sdk.stake(new BigNumber(1_200), 'aMATICc');\n\nUnstake aMATICc token:\nimport { PolygonSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await PolygonSDK.getInstance();\n\nawait sdk.unstake(new BigNumber(1_200), 'aMATICc');\n\nSwitch aMATICb and aMATICc:\nimport { PolygonSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await PolygonSDK.getInstance();\n\nconst lockResponse = await sdk.lockShares({ amount: new BigNumber(2.65) });\n\nconst unlockResponse = await sdk.unlockShares({ amount: new BigNumber(1.98) });\n\nGet MATIC transaction history:\nimport { PolygonSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await PolygonSDK.getInstance();\n\nconst history = await sdk.getTxEventsHistory();","binance#Binance":"Stake aBNBc token:\nimport { BinanceSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await BinanceSDK.getInstance();\n\nconst { txHash } = await sdk.stake(new BigNumber(1_200), 'aBNBc');\n\nUnstake aBNBc token:\nimport { BinanceSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await BinanceSDK.getInstance();\n\nawait sdk.unstake(new BigNumber(1_200), 'aBNBc');\n\nSwitch aBNBb and aBNBc:\nimport { BinanceSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await BinanceSDK.getInstance();\n\nconst lockResponse = await sdk.lockShares({ amount: new BigNumber(2.65) });\n\nconst unlockResponse = await sdk.unlockShares({ amount: new BigNumber(1.98) });\n\nGet BNB transaction history:\nimport { BinanceSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await BinanceSDK.getInstance();\n\nconst history = await sdk.getTxEventsHistory();","ethereum#Ethereum":"Stake aETHc token:\nimport { EthereumSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await EthereumSDK.getInstance();\n\nconst { txHash } = await sdk.stake(new BigNumber(1_200), 'aETHc');\n\nSwitch aETHc and aETHb:\nimport { EthereumSDK } from '@ankr.com/staking-sdk';\n\nconst sdk = await EthereumSDK.getInstance();\n\nconst lockResponse = await sdk.lockShares({ amount: new BigNumber(2.65) });\n\nconst unlockResponse = await sdk.unlockShares({ amount: new BigNumber(1.98) });","misc#Misc":"Define specific providers:\nimport { PolygonSDK, Web3KeyReadProvider, Web3KeyWriteProvider } from '@ankr.com/staking-sdk';\n\nconst readProvider: Web3KeyReadProvider = { ... };\nconst writeProvider: Web3KeyWriteProvider = { ... };\nconst sdk = await PolygonSDK.getInstance({ readProvider, writeProvider });\n\nconst { txHash } = await sdk.stake(new BigNumber(1_200), 'aMATICc');","reference#Reference":"For detailed information on supported methods and parameters, refer to:\nAvalancheSDK reference\nBinanceSDK reference\nEthereumSDK reference\nFantomSDK reference\nPolygonSDK reference","flow#Flow":"To understand the processes and mechanics of Liquid Staking, refer to:\nAvalanche Liquid Staking mechanics\nBinance Liquid Staking mechanics\nEthereum Liquid Staking mechanics\nFantom Liquid Staking mechanics\nPolygon Liquid Staking mechanics"}},"/stake/defi/faq":{"title":"faq","data":{"":"","what-is-fair-value-of-liquid-staking-tokens#What is Fair Value of Liquid Staking tokens?":"Looking at Ankr DeFi, you can see the Difference vs. Fair value column.Fair Value represents the ratio at which users can stake/unstake 1 token. For reward earning tokens i.e. aETHb the ratio is always 1. This is because any difference is passed to your wallet as a type of staking reward resulting from rebasing.The Fair Value of aETHc is always higher than 1. This is because staking rewards accumulate and can be realized when users unstake. The ratio or Fair Value of aETHc is therefore continuously increasing together with ETH staking rewards.The aETHc ratio is also applied when staking ETH to avoid existing stakers being diluted by new stakers. In other words, if the redemption value of 1 aETHc is 1.05 ETH, a new user willing to stake ETH will get 1/1.05 = 0.9524 aETHc for staking 1 ETH.","should-i-stake-or-trade#Should I Stake or Trade?":"Along with the trading options, you can see the Ankr Staking row with a Stake or Unstake button depending on the source asset you choose.Ankr DeFi Trade will compare prices on the market with Ankr's Fair Value to indicate whether it is more attractive to stake, or trade. This tool was created to help stakers make better-informed decisions."}},"/stake/defi/liquidity-pools":{"title":"liquidity-pools","data":{"":"Visiting Ankr DeFi Dashboard, you will see dashboard where you can enable the Liquidity pool filter.This filter allows you to see all the integrated opportunities to make profit providing liquidity on DEXs and getting a % of the swapping commissions when users swap their tokens using the pool.Liquidity pairs in the listed liquidity pools usually contain a native token and a corresponding Liquid Staking token. For example, ETH/aETHb or ETH/aETHc.","deposit-liquidity#Deposit liquidity":"To deposit liquidity into a pool:\nClick Deposit next to the pool.\nWhen redirected to the DEX, connect your wallet, enter the desired amount of tokens, and deposit them (usually, via the Deposit or Add Liquidity button).","withdraw-liquidity#Withdraw liquidity":"To withdraw liquidity from a pool:\nOn the page of the pool, click Withdraw to get to the Withdraw tab.\nEnter the desired amount of tokens and withdraw them (usually, via the Withdraw or Remove Liquidity button)."}},"/stake/defi/overview":{"title":"overview","data":{"":"","what-is-ankr-defi#What is Ankr DeFi?":"Ankr DeFi Trade is a Liquid Staking data aggregation tool providing access to real-time trading prices.It allows users to find all liquidity staking DeFi integrations to trade between Liquid Staking tokens and other assets.Liquid Staking tokens, e.g. aETHc or aMATICb, are tokens users get when staking their assets, e.g. ETH or MATIC, in Ankr Staking.","ankr-defi-dashboard#Ankr DeFi Dashboard":"Ankr DeFi features a cross-chain dashboard where users can choose Liquid Staking tokens and assets to trade, and platforms to trade on.Currently, the dashboard features:\nLiquidity pools\nYield farming\nVaults\n\nBorrowing and Indexes are coming later."}},"/stake/defi/vaults":{"title":"vaults","data":{"":"Visiting Ankr DeFi Dashboard, you will see dashboard where you can enable the Vault filter.This filter allows you to see all the integrated opportunities to make profit providing liquidity on DEXs and autofarming it via vaults.Liquidity pairs in the listed vaults usually contain a native token and a corresponding Liquid Staking token.\nRewards can be given either in the tokens deposited to the pool, e.g. ETH/aETHc, or in the LP token native to the DEX, e.g. CAKE on PancakeSwap.","deposit-liquidity#Deposit liquidity":"To deposit liquidity into a vault:\nClick Deposit next to the vault.\nWhen redirected to the DEX, connect your wallet, choose a vault if there are multiple vaults listed, enter the desired amount of tokens, and deposit them (usually, via the Deposit or Add Liquidity button).","withdraw-liquidity-and-rewards#Withdraw liquidity and rewards":"To withdraw liquidity and/or rewards from a vault:\nOn the page of the vault, click Withdraw to get to the Withdraw tab.\nEnter the desired amount of tokens and withdraw them (usually, via the Withdraw or Remove Liquidity button)."}},"/stake/extra/ankr-validators":{"title":"ankr-validators","data":{"":"Besides using network infrastructure, we are creating and maintaining our own validators.Here are available Ankr validators.\nNetwork\tValidator\tAvalanche\tAnkr 1  Ankr 2  Ankr 3 \tBinance\tAnkr 1\tEthereum\tAnkr 1–1740\tOasis\tAnkr 1  Ankr 2\tPolygon\tAnkr 1"}},"/learn/get-started/create-dApp-on-Ethereum-using-nocode":{"title":"How to Create a Decentralized Application on Ethereum using No-Code","data":{"":"By Krinza MominNow that you have entered the chat, let me guess what made you swipe right on this article. Is that the “pickup lines” and you desperately wanting to avoid the low level uttering of \"hey.” Or is it the “no-code” buzzword that many coders roll their eyes at?In any case, at least it made an impression. So why not capitalize on both the no-code and have a crack at our idea of building a Pickup Line dApp on-chain.","so-what-are-we-building-exactly#So, what are we building exactly?":"In this tutorial, we will be creating a pickup line directory app with Atra and deploy it on the Ethereum Rinkeby Testnet. By the end of this you’ll be able to:\nmanage, customize, and deploy a decentralized database\nconfigure triggers, which “reacts” to certain actions we make in the database\nand build a minimal frontend\n\nall without writing a single line of code.Here↗ is the sample dApp all set and ready to be used for the reference, and this is exactly what we will be building.","wait-whats-atra-though#Wait, What’s Atra Though?":"Atra is a platform that offers services and tools to help users build and maintain dApps. We will be using Atra’s 3 beta services - dTables, Triggers and LiteUI to build an end-to-end application on Ethereum Rinkeby Testnet. Will explore all three services in detail below, as we move on to building our dApp.\n\nHere's a brief about each beta service:\ndTables: act as relational databases that can be deployed in one single click. Its fast, simple and offers data storage on the Ethereum public network.\nTriggers: helps create business logic for the application. It controls access and helps map user-input values by creating a response or reacting against every action.\nLiteUI: serves drag and drop UI elements to build a website that connects the services to the frontend and integrates decentralized resources with Ethereum instantly.\n\nNow that we have some knowledge about the tool we will be using, let's get building!","getting-started#Getting Started":"Before we dive into the project, first thing we need to set up is a Metamask account with some test ethers added. If you have a MetaMask wallet installed, setup and running, you can skip to the next section.If you don’t have one, install Metamask for your browser and follow through the steps needed to set up an account. Once Metamask is installed, make sure you are connected with the Rinkeby test network. Next, you’ll need to deposit test Ether into your wallet so you can sign some transactions. For that, head to the faucet to top up your account with some ether.With that, you now have the basic requirements for building a decentralized application on Atra. So, let’s start building our dApp!","step-1-create-a-dtable#Step 1: Create A dTable":"As briefed above, dTables are used to store information or any data we might want to record for our application. In our case, we will be storing user entered pickup lines to our application on the Ethereum blockchain.Follow the steps below to get the dTable created for the pickup lines:\nNavigate to console.atra.io/ and find the Services dropdown in the nav bar\nSelect dTables to land on the dTable service dashboard\nNow, click the Create Table button and set the Name field to \"Picks\" and Description to whatever explanation you want to enter for the table.\n\n\n\nIn the next section, we will add a column for each piece of information we want to store in the database as shown in the screenshot above. Once the columns are set, click on Create dTable.\nNote: Once table is created, you won't be able to edit it again as the table will be deployed to the Ethereum Rinkeby network.\n\n\nYou can monitor the status of the dTable deployment on the dTables Dashboard. The green lightning bolt means the table is successfully deployed on the network. You can even view the deployed contract on etherscan by following the next section.","step-2-view-the-deployed-smart-contract-on-etherscan#Step 2: View The Deployed Smart Contract On Etherscan":"Once the lighting bolt icon go green, click on the newly created table and you'll see the Contracts tab.\nClick on that to explore the Ethereum smart contract, written in solidity\n\n\n\nYou can also view the creation of the table on Etherscan by clicking on the Rinkeby Address.\n\nThe dTables contract is specifically designed to store records. It uses methods for inserting, reading, updating, and deleting records. We can also see these contract methods in action while we insert a new record into the table.","step-3-insert-new-records#Step 3: Insert New Records":"Click the New Record button given on the top right corner of the screen\n\nThis will open a pop up on the page where you’ll see inputs for each column. We are manually going to insert a record as shown below.\n\n\nClick Insert Record and you should be able to see the newly created entry in the table as well on Etherscan\n\n\n\n\n\nIn the next section, we will start to build the logic to allow users the ability to modify the table themselves. In this case, the users would be adding a pickup line entry to the table without paying any gas fee for their transaction.","step-4-add-trigger#Step 4: Add Trigger":"In this section, we will add the base functionality for users to post their fav pickup lines on the dApp we are building. To add a trigger for new entries in the table, go through the steps below:\nFrom the nav bar, select Triggers from the services dropdown and you'll land on a triggers dashboard\nFrom the Triggers Dashboard, click the ‘Create Trigger’ button and you will land on the Set Actions tab on the Create trigger page.\n\n\n\n\nOnce you land on the trigger page, you'll see three options. In this tutorial, we will only be using the Insert action, as we want to allow users to create a new entry on the board.\nSelect ‘Insert a Record’ as the method type, Picks as the table we want to modify and configure the value mapping to the values as shown below:\n\n\n\nClick on Next and you will land on the Conditions tab, which is where you can set conditions that must be met for your trigger to execute. In this tutorial, we will not use conditions.Next, we will set the configuration for payment of the transactions. Because we don't want to charge users ETH to add pickup lines to the board, therefore we will be marking \"No\" under the payment option and move on to the next step.\n\nAt this point, we’re almost done. We just have to name and review the Trigger which you can refer from the screenshot below.\n\n\nOnce done, click on Deploy and wait for the trigger to go live.\n\n\n\nClick on the InsertPicks Trigger and in the details tab, click ‘Grant Permission’ which will give the underlying smart contract permission to interact with the dTable’s smart contract.Now that we have our table and trigger ready, let's go ahead a create a UI for this project using the LiteUI service.","step-5-create-the-user-interface#Step 5: Create The User Interface":"In this section, we will combine everything we just created into one simple user interface. LiteUI will bring together our dTables and Triggers, and give us a public website URL which we can share with our users.To start building the UI, you can follow through design I made in the reference website or you can go ahead and create your own user interface for the dApp.\nFirst, select LiteUI option from the Services dropdown in the navigation and create a new LiteUI\nClick the Plus button in the upper right of the dashboard and give a name to your dApp\n\n\n\n\nNext, we can add our first page which will serve as our home page. Click the **Add Page ** button in the purple header, type whatever you want to call the home page, hit enter or click ‘Save’ to add the page to our LiteUI\n\n\n\nNow that we have named our application and created the first page, it’s time to add a UI Element to the home page. Go ahead and add some text, our dTable and then the form for users to be able to entry new pickup lines in our board.Once you add all of the UI elements to the website, click Save in the upper right corner of the page.Enter back into the LiteUI from the dashboard, click the 'Open Public URL' link under the Update button and you are good to share this link with everyone to add their fav pickup lines to the board.\n\nWith that, your dApp is ready! The URL is accessible to anyone, however the user will need MetaMask installed and have testnet Ether to post pickup lines to the board through the InsertPick form within our dApp.","next-steps#Next Steps":"Now that you have created your first dApp with Atra, you can go explore and experiment with the services offered. Here are some ideas to stimulate your creativity:\nBuild a Clone Craigslist Website with No-Code\nCreate a Job Directory website without writing a single line of code\nBuild a voting app on-chain with no-code"}},"/learn/get-started/build-a-dao-in-5min":{"title":"How to Build a DAO with Zero Lines of Code","data":{"":"By Krinza MominI'm writing this article thinking about two things. First, why is the web3 community obsessed with three-letter words - think ICOs, NFTs, and now DAO? Second, will the no-code revolution really dismantle the mentality that building cool stuff is only reserved for very serious developers?!I mean, I'm no Naval Ravikant, so I won’t say that the next big thing in code is no-code but I'll rather let Chris echo that on my behalf:\n\"The future of coding is no coding at all.\" - Chris Wanstrath, CEO at GitHub.\nAnyway, getting back to the topic, the DAO; a new-ish type of organizational structure and another hot acronym on the block. For those of you who aren't familiar with what DAO is, toggle the tweet. For the rest of you, enter the playground!","so-what-are-we-building-today#So, what are we building today?":"A DAO.\nhaha, I already read the title … tell me more!Um, without writing a single line of code.\nwhat do you think why I clicked on this article, huh?Let me just show you instead. Also, was that just me talking to myself or what?\n\nTL;DR: We will build a DAO on Aragon Client↗ and deploy it on the Ethereum Rinkeby Testnet. By the end of this tutorial, you’ll be able to:\ndeploy a DAO\ndeclare the name and symbol for your token\nallocate tokens to the members of the DAO\ncreate the first proposal question\nbegin the voting process\nand enter your first vote in favor/against the proposal","wait-whats-aragon-though#Wait, what’s Aragon though?":"Aragon is a DAO maker tool for beginners and developers to create their first of many DAOs in a couple of clicks. This tool will help you with managing your DAO members, their votes, and proposals, and will let you admin your funds directly on the blockchain without writing a single line of code.","getting-started#Getting Started":"Before we get started deploying our very first DAO, make sure your Metamask wallet is connected with the Rinkeby Testnet. Next, we will need some test ethers to make transactions. So, head over to the Rinkeby Faucet↗, follow through the instructions, and get yourself some test ETH. You'll at least need 0.2 test ETH.","setting-up-a-dao#Setting up a DAO":"Head over to Aragon Client↗ and follow these steps:\nClick on the \"Connect Account\" button and select \"Metamask\", approve the request from MetaMask, and connect with the ‘Ethereum Rinkeby Testnet.\nNavigate to the \"Create an organization\" option and click on that.\n\n\n\nOnce you select the \"Create an Organization\" button, you'll land to this page where you'll be given a few options as pre-configured templates for your DAO, with the details given already.\n\nFor this project, we will opt for the \"Company\" template where the tokens are transferable and decisions are based on the weighted voting system.\nIn a weighted voting system, all votes are valid but not equally counted. Each voter's voting power is based on the size of their stake; their individual level of status or expertise; or according to pre-defined organizational rules.\n\nNext up, we will set up the DAO's name. The name you choose will be mapped to the organization's address and cannot be changed after you launch it.\n\n\n\n\nOnce you set up the name from the DAO, click \"Next: Configure template\".","configure-voting#Configure Voting":"Now, in the above screenshot, you see a couple of different options which we will be exploring below:\nSupport % is the relative percentage of tokens that are required to vote “Yes” for a proposal to be approved. For example, if “Support” is set to 50%, then more than 50% of the tokens used to vote on a proposal must vote “Yes” for it to pass.\nMinimum Approval % is the percentage of the total token supply that is required to vote “Yes” on a proposal before it can be approved. For example, if the “Minimum Approval” is set to 20%, then more than 20% of the outstanding token supply must vote “Yes” on a proposal for it to pass.\nVote Duration is the length of time that the vote will be open for participation. For example, if the Vote Duration is set to 24 hours, then token holders have 24 hours to participate in the vote.\n\nYou can set the settings which might suit best for your DAO, for the sake of this project, let's go with the default configs.","set-tokens#Set Tokens!":"Now that we have configured the voting mechanism for the DAO, you can now set a desired name and symbol for your token.\n\n\nEnter the token name and symbol\nEnter the addresses of the DAO members or holders and allocate tokens to them.\nReview the information and hit ‘Launch your organization’.\n\nAfter you launch your organization, the Metamask window will pop up for transaction approval. Confirm the transaction and make sure you don't select the speed-up option in MetaMask. Also, do not refresh the window.\n\nWith that, you should be presented with a screen similar to this:","first-proposal-first-vote#First Proposal, First Vote":"Click on get started, and let us create our very first proposal to begin the voting process.\n\n\nClick on ‘Vote’ from the options shown or find 'Voting' from the left menu and click on ‘Create a New Vote’.\nAdd in the proposal question and open it for voting.\n\nThis action will require you to sign a transaction for the proposal to go live.\n\nOnce the proposal is live, members can vote \"yes\" or \"no\" based on their decision in favor or against the question asked. The voting window will be open for the time duration set in the earlier steps. In our case, it is 24 hours only.\n\nNow that you have successfully published the first proposal, you can finally register your first vote!","next-steps#Next Steps":"If you're leaving under a rock, here is some news for you - Ethereum Rinkeby Testnet will be deprecated soon. Don't fret, we're good for now and I'll update these tutorials as the testnet landscape changes. But for now, here's a task for you all: Create an exclusive club for your friends online (aka DAO) and deploy it on the Polygon network instead (here's me saving you from dollars worth of deployment cost)."}},"/learn/smart-contracts/Polygon-NFT-ERC-721-Solidity-Smart-Contract-Ankr":{"title":"How to Deploy Your First Polygon NFT with an ERC-721 Solidity Smart Contract and Ankr","data":{"":""}},"/learn/smart-contracts/ERC-20-token-Ankr-Hardhat-ETH-Goerli-Testnet":{"title":"How to deploy your own ERC-20 token with Ankr & Hardhat on ETH Goerli Testnet","data":{"":""}},"/learn/smart-contracts/Deploy-Mint-CryptoKitties-Like-NFT-ERC-721-Smart-Contract":{"title":"Deploy and Mint a CryptoKitties-Like NFT with ERC-721 Smart Contract","data":{"":""}},"/learn/smart-contracts/Deploy-Your-Own-ERC20-Token-On-Optimism":{"title":"How To Build An ERC-20 token On Optimism's Lightning-Fast Ethereum L2 Blockchain","data":{"":""}},"/stake/delegated-staking/ankr/faq":{"title":"faq","data":{"":"","are-there-any-risks-from-staking-like-slashing-or-penalties#Are there any risks from staking, like slashing or penalties?":"When you stake with Ankr as the Node Provider, ANKR token staking does not involve any slashing or other penalties.\nHowever, future additional options with other Node Providers may involve some risks, depending on the provider.","is-staking-ankr-compatible-for-all-ankr-token-types-erc-20--bep-2-and-bep-20#Is staking ANKR compatible for all ANKR token types: ERC-20,  BEP-2, and BEP-20?":"As of now, staking ANKR is only available on ERC-20.","what-is-the-minimum-and-maximum-amount-of-ankr-i-can-stake#What is the minimum and maximum amount of ANKR I can stake?":"Minimum — 1000 ANKR.\nMaximum — unlimited.","when-can-i-unstake#When can I unstake?":"After the locking period of 84–91 days, which begins after you stake, you’ll be able to unstake your tokens and/or claim/restake your rewards.","how-long-does-it-take-to-unstake-my-ankr#How long does it take to unstake my ANKR?":"The unstaking process takes two steps:\nUndelegate period that lasts one next epoch, which is one next week after your unstaking operation. So, it can taken take 7-14 days, e.g. 14 days if you unstake on Monday, 13 — on Tuesday, and so on.\nOnce the undelegate period has ended, you can claim your unstaked ANKR.","what-if-i-want-to-stake-more-after-already-staking-some-ankr#What if I want to stake more after already staking some ANKR?":"For each staking transaction, a new locking period will apply, i.e. each new stake will be locked for 84–91 days before you can unstake it and/or claim/restake rewards for it.","how-soon-after-staking-will-i-begin-to-receive-rewards#How soon after staking will I begin to receive rewards?":"Rewards accumulate on the weekly basis.","how-often-will-i-ba-able-to-claim-my-rewards#How often will I ba able to claim my rewards?":"As rewards accumulate on the weekly basis, you'll be able to claim them once a week.","can-i-stake-with-ledger-if-i-connect-it-with-metamask#Can I stake with Ledger if I connect it with MetaMask?":"Yes, you can.","what-is-restaking-rewards#What is restaking rewards?":"You can choose to reinvest your staking rewards to get higher APY, i.e. restake them.","if-i-restake-my-rewards-will-these-have-a-locking-period-as-well-and-of-how-many-days#If I restake my rewards, will these have a locking period as well? And of how many days?":"A: Staking your rewards without claiming them is considered a regular staking transaction and will have the usual locking period of 84–91 days.","if-i-dont-unstake-after-the-locking-period-is-over-will-i-continue-to-earn-staking-rewards#If I don’t unstake after the locking period is over, will I continue to earn staking rewards?":"Yes. You will continue to collect rewards until you unstake.","must-rewards-be-claimed-from-the-ankr-website-or-will-they-be-automatically-sent-to-the-supplying-wallet#Must rewards be claimed from the Ankr website, or will they be automatically sent to the supplying wallet?":"Rewards must be claimed from the Ankr website."}},"/stake/delegated-staking/ankr/stake":{"title":"stake","data":{"":"","before-you-start#Before you start":":::info Ensure the following:You are using a Chrome Browser.You have a MetaMask wallet.\n:::","purchase-ankr#Purchase ANKR":"Visit 1Inch ETH to ANKR swap page and swap ETH for the desired amount of ANKR tokens.","connect-your-wallet#Connect your wallet":"Visit Ankr Staking.\nClick Connect wallet in the top-right corner of the page and choose MetaMask; approve connecting if needed.\nIf you're on a different network, you may be prompted to switch to the correct one. Click Switch network on the page, then allow MetaMask to switch to it.\nSuccessful connection to Ankr Staking is indicated at top right corner by the address of wallet you connected.\n\nYou will need to make the following interactions in your wallet::thumbsup: Grant access to grant access to your wallet.:thumbsup: Approve to add a new network.:thumbsup: Switch network to switch to the correсt network.","stake-ankr#Stake ANKR":":::note\nMake sure you have some ETH to pay the gas fee for your staking transaction.Currently, ANKR can only be staked on Ethereum. If you have ANKR on any other chains, please bridge it first to stake it.You can claim or restake your rewards after the locking period of 84–91 days. This period applies to each staking transaction independently.\nHowever, your stake will keep generating rewards until you unstake, whether or not the locking period has ended.\n:::\nVisit Ankr Staking.\nIn the Delegated staking section, click Stake under ANKR.\nEnter the desired amount of ANKR to stake (min. amount is 1000 ANKR).\nChoose a Node Provider (currently only ANKRl; more providers in future releases).\nClick Approve to approve Ankr Staking access to your ANKR\nConfirm approving access in MetaMask.\nClick Send to send your delegated stake to the chosen Node Provider.\nConfirm the transaction in MetaMask.\nOn the stake progress page, click Go to dashboard to see the staked ANKR. You may need to wait a little for the transaction to finalize and Ankr Staking Dashboard to automatically update."}},"/stake/delegated-staking/ankr/overview":{"title":"overview","data":{"":"","introduction#Introduction":"In the Ankr 2.0 whitepaper, we introduced the vision for Ankr Network as a decentralized system where independent node operators work alongside Ankr nodes to power the growth and development of Web3, with a subsidy from the additional services and features provided to developers by Ankr ecosystem contributors and partners.The first step to making this vision a reality is the introduction of a market mechanism (staking) that will bring developers, node providers and Ankr ecosystem supporters together to solidify the foundational building blocks of Ankr Network’s decentralized node marketplace.\nAfterall, to build a truly decentralized Web3 protocol, “tokens must be more valuable to network participants than they are to purely financial holders.”\n\nOur product team is releasing a reimagined vision of Ankr Network – our global network of nodes running on 18+ different blockchains.\nThis vision for Ankr Network 2.0 brings together our ecosystem of developers, node providers (Node Pros), and stakers (Ankr Bankrs) in a way that will offer everyone involved with Ankr a more rewarding experience — with ANKR token utility at its very heart.","ankr-token-staking#ANKR token staking":"ANKR token staking is similar to the idea of staking to help secure PoS networks.\nHowever, instead of delegating ANKR to validator nodes, ANKR token staking introduces the ability for anyone to stake to full nodes for the first time ever.\nNow, anyone can earn ANKR rewards and become an “Ankr Bankr” by staking their tokens with the independent full nodes running on our new decentralized Network.","why-is-ankr-token-staking-needed#Why is ANKR token staking needed?":"The Ankr Network depends on reliable, high-quality node providers to serve RPC requests on supported blockchains.\nAs such, the system requires a significant deposit of ANKR backing each node provider.\nThis includes ANKR deposits each node provider contributes (the self-stake).In addition, token holders will have the ability to signal support for individual node providers on the Ankr Network by staking ANKR to back their nodes.\nBy delegating ANKR to node providers, community members play an active role in discerning which service providers are reputable, performant, and worthy of a reputational boost.\nIn return, ANKR token stakers share in the rewards earned by the node providers they support.\nANKR staking will also enable delegators to allocate voting power to node providers to decide, among other things, which independent node providers will be admitted in the near term to service traffic on Ankr Network.Although the ANKR staking pool may eventually be capped in size, offering allotments to existing node providers, community members, and other active Ankr ecosystem members, the initial ANKR staking pool will not be capped in size, and we anticipate that the pool size will be expanded.\nThis may cause the APY for the V1 of ANKR staking to be variable.","the-benefits-of-staking-ankr#The benefits of staking ANKR":"Experience a new kind of staking\nFor the first time, you can stake your tokens to full nodes (serving the development layer) instead of validator nodes (serving the consensus layer).\nEarn ANKR for enabling Web3 development\nStakers help node providers operate on Ankr Network so they can serve the Web3 developers and applications depending on them for blockchain access.\nBoost Web3 integration and adoption\nBecome part of a Network that provides developers faster and more reliable connections to blockchains so their decentralized applications can work more efficiently.\nOwn & govern a foundational layer of Web3\nThose who stake ANKR can participate in the Ankr DAO to make critical decisions affecting the Network's future.","what-is-next-with-ankr-token-staking#What is next with ANKR token staking?":"As Ankr continues to release more and more infrastructure solutions powered by Ankr Network, we will have a growing need for Ankr Bankrs to help secure the system.\nAnd as Web3 grows and we add an ever-increasing number of chains to the protocol, Ankr will match the pace of Web3 adoption."}},"/stake/defi":{"title":"What is Ankr DeFi?","data":{"":"","what-is-ankr-defi#What is Ankr DeFi?":"Ankr DeFi Trade is a Liquid Staking data aggregation tool providing access to real-time trading prices.It allows users to find all liquidity staking DeFi integrations to trade between Liquid Staking tokens and other assets.Liquid Staking tokens, e.g. aETHc or aMATICb, are tokens users get when staking their assets, e.g. ETH or MATIC, in Ankr Staking.","ankr-defi-dashboard#Ankr DeFi Dashboard":"Ankr DeFi features a cross-chain dashboard where users can choose Liquid Staking tokens and assets to trade, and platforms to trade on.Currently, the dashboard features:\nLiquidity pools\nYield farming\nVaults\n\nBorrowing and Indexes are coming later."}},"/stake/defi/yield-farming":{"title":"yield-farming","data":{"":"Visiting Ankr DeFi Dashboard, you will see dashboard where you can enable the Farming filter.This filter allows you to see all the integrated opportunities to make profit providing liquidity on DEXs and getting rewards in the LP tokens which you can then farm.Liquidity pairs in the listed yield farming pools usually contain a native token and a corresponding Liquid Staking token.\nRewards are usually given in the LP token native to the DEX. For example, CAKE on PancakeSwap.","deposit-liquidity#Deposit liquidity":"To deposit liquidity into a pool:\nClick Deposit next to the pool.\nWhen redirected to the DEX, connect your wallet, choose a pool if there are multiple pools listed, enter the desired amount of tokens, and deposit them (usually, via the Deposit or Add Liquidity button).","withdraw-liquidity#Withdraw liquidity":"To withdraw liquidity from a pool:\nOn the page of the pool, click Withdraw to get to the Withdraw tab.\nEnter the desired amount of tokens and withdraw them (usually, via the Withdraw or Remove Liquidity button).","yield-farm#Yield farm":"To yield farm your LP tokens:\nOn the page of the pool, claim your rewards — the liquid pool tokens rewarded you for providing liquidity to the pool (usually, via a dedicated Rewards tab).\nStake your LP tokens and gain yield (usually, via the Stake button on a dedicated Stake LP tab or Deposit & Stake button on the main pool page).","withdraw-yield-farming-rewards#Withdraw yield-farming rewards":"To withdraw your LP tokens along with the yield gains:\nOn the page of the pool, withdraw your LP tokens (usually, via the Withdraw button on a dedicated Stake LP tab or Withdraw button on the main pool page)."}},"/stake/extra/audit-reports":{"title":"audit-reports","data":{"":"For security measures and to ensure its safety to the users, Ankr Staking products undergo audit checks.Here is the list of available audit reports:\nAnkr Bridge audit report\nAVAX Liquid Staking audit report\nBNB Liquid Staking audit report from Beosin\nBNB Liquid Staking audit report from PeckShield\nFTM Liquid Staking audit report\nMATIC Liquid Staking audit report"}},"/stake/extra/brand-assets":{"title":"brand-assets","data":{"":"Ankr Staking Brand Assets - Liquid Staking Tokens Logos:\nankr.png\nankr.svg\naETHc.png\naETHc.svg\naETHb.png\naETHb.svg\naAVAXb.png\naAVAXb.svg\naMATICb.png\naMATICb.svg\naMATICc.png\naMATICc.svg\naBNBb.png\naBNBb.svg\naBNBc.png\naBNBc.svg\naFTMb.png\naFTMb.svg\naFTMc.png\naFTMc.svg\naDOTb.png\naDOTb.svg\naKSMb.png\naKSMb.svg\n\nAnkr Staking Brand Assets - Liquid Staking Tokens Logo (256 * 256 transparent png):\nankr.png\naETHb.png\naETHc.png\naETHc-32.png\naAVAXb.png\naMATICb.png\naBNBb.png\naBNBc.png\naFTMb.png\naDOTb.png\naKSMb.png"}},"/stake/extra/compatible-wallets":{"title":"compatible-wallets","data":{"":"The following hot wallets are compatible with Ankr Staking:\nMetamask\nimToken\nWalletConnect\nMath Wallet\nTrust Wallet\nHuobi Wallet\n\nYou can also use Ledger Nano S cold wallet.Additionally, for some chains such as Polkadot you need to use a chain specific wallet such as in addition to an EVM compatible wallet."}},"/stake/extra/glossary":{"title":"glossary","data":{"":"","alpha#Alpha":"Alpha refers to excess returns earned on an investment above a benchmark return.","crypto-economy#Crypto Economy":"The crypto economy is the use of incentives and cryptography to design open, decentralized systems, applications, and networks. Within this economy exist several movements attempting to bring about mass adoption of a new system.The ANKR platform brings two movements together: web3 and decentralized finance (DeFI). The web3 movement is about decentralized applications, protocols, and smart contracts, while the DeFi movement creates the financial system for web3 —money embedded in infrastructure. By bringing them together in easy to use products and services; ANKR helps power the crypto economy.A traditional economy needs three fundamentals: land (real estate), workers (productivity), and a financial system. In the crypto economy, web3 infrastructure functions as “digital real estate” providing the computational space for the blockchain network to work. Ankr’s DeFi service, StakeFI, integrates the financial system into web3 infrastructure. And developer projects running on this infrastructure make the economy productive.","defi-movement#DeFi Movement":"DeFi or Decentralized Finance is a socio-technical movement of push and pull factors.\nDeFi is a push away from an overreliance on central financial intermediaries such as brokerages, exchanges, or banks that offer traditional financial instruments. This reflects a disenchantment with centralized banking practices as well as fiscal policies such as quantitative easing.\nDeFi is also a pull towards the emergence of blockchain-based forms of finance that support the direct transfer and exchange of value peer-to-peer across borders to anyone, anywhere in the world with an internet connection. These transactions are mediated by smart contract programs or DeFi protocols often run using open-source software - most commonly Ethereum.\n\nWhile Ethereum 1.0 has been a phenomenal success, it has been hampered by the limited number of transactions it can process, as well as high gas fees for each transaction.DeFi projects have evolved to solve these pain points with the launch of newer chains adopting novel technology to improve transaction throughput, costs and scalability.From Ankr’s point of view, DeFi is on track to become the financial system for the web 3.0 movement.","eth2#ETH2":"ETH2 is a set of upgrades that improve the scalability, security, and sustainability of Ethereum. These upgrades are:","beacon-chain---phase-0#Beacon Chain - Phase 0":"The Beacon Chain introduces Proof-of-Stake to Ethereum. Proof-of-Stake is the underlying mechanism that activates validators upon receipt of enough stake. For Ethereum, users need to stake 32 ETH to become a validator. Validators are chosen at random to create blocks and are responsible for checking and confirming blocks they don't create. A user's stake is also used as a way to incentivise good validator behavior by making deductions for missing a transaction or any other errors - intentional or otherwise.","merge---phase-15#Merge - Phase 1.5":"This is the merging of the Ethereum Mainnet into the Proof-of-Stake system controlled and coordinated by the Beacon Chain.","sharding---phase-2#Sharding - Phase 2":"Sharding is a scalability and capacity improvement for ETH 2 using Shard chains to spread the network's load across 64 new chains. With shard chains, validators only need to store/run data for the shard they're validating, not the entire network. Lower hardware requirements and capacity enable more validators to participate.Shard chains can only safely enter the Ethereum ecosystem with a proof-of-stake consensus mechanism in place.","evm-compatible#EVM-Compatible":"EVM, or Ethereum Virtual Machine, is a leading standard for smart-contract development. With EVM compatibility, developers can build the same way that they would do on Ethereum, and benefit from the same tools and applications.This is particularly useful in addressing the scalability problems of Ethereum. Ethereum 1.0 is currently limited to 15 or so transactions per second, whilst rising transaction fees can make it extremely hard to move funds in a timely manner, especially when interacting with smart contracts.EVM compatible blockchains can help users get past these hurdles.Examples of EVM compatible blockchains are BNB Chain, Polygon and Avalanche.View the complete list of EVM-compatible chains.With Ankr’s support for EVM-compatible chains, developers can easily access other chains with the same functions and code, without getting locked into a single chain.","bnb-chain#BNB Chain":"BNB Chain solves the development challenges in adding new decentralized features for assets and community to the native DEX blockchain.BNB Chain is a standalone parallel Binance chain offering much requested Smart Contract and Virtual Machine functionality. The provision of a parallel chain ensures the continuance of existing Binance Chain performance capabilities in handling millions of trades in a short time.Key Benefits\nCross-chain communication meaning that users are free to create any tokenization, financial products, and digital assets on BNB Chain or Binance Chain. Items on BNB Chain can be manually and programmatically traded and circulated in the stable, high throughput, fast and friendly environment of Binance Chain whilst being able to operate these in a single interface and tooling ecosystem.\nStaking Involved Consensus and Governance.\nEthereum Compatibility.","polygon-formerly-known-as-matic#Polygon (formerly known as MATIC)":"Polygon solves the problem of ecosystem fragmentation and development challenges in connecting Ethereum-compatible blockchain networks.Polygon is a specialized protocol and framework for building and connecting blockchain networks. The Polygon platform is designed for ease of use and provides a structure for Ethereum scaling and infrastructure development. Its core component is Polygon SDK, a modular, flexible framework that supports building multiple types of applications.Using Polygon, one can create Optimistic Rollup chains, ZK Rollup chains, stand-alone chains, or any other kind of infra required by the developer.Key BenefitsPolygon enhances and transforms the Ethereum Network into a fully-fledged multi-chain system with the advantages of Ethereum’s security, ecosystem, and openness.","avalanche#Avalanche":"Avalanche is a smart contracts platform aiming to solve the problem of fragmentation in the global financial system by providing an internet-scale electronic payment system with a novel consensus mechanism. The Avalanche consensus engine solves the blockchain scalability trilemma of balancing speed, scalability and security in a number of novel ways. - Snowball Consensus Protocol - Inspired by gossip algorithms, this system works by repeatedly sampling the network at random and steering correct nodes towards a common outcome. Avalanche executes multiple Snowball instances with the aid of a Directed Acyclic Graph.\nDAG (Directed Acyclic Graph) - A non-linear data structure to store data and enable the partial ordering of decisions. DAG works with Snowball to resolve any conflicting (double-spend) transactions and achieve consensus and fast finality transactions at high speed, efficiency and security.\n\nUnlike PoW and PoS there is no competition to create a new block and the Avalanche consensus engine is eco-friendly, energy efficient and does not require special computer hardware. It performs well in adversarial conditions and is resilient to \"51% attacks.\"Key Benefits\nSupports the building of application-specific blockchains, spanning permissioned (private) and permissionless (public) deployments.\nProvides high scalability for building decentralized applications (Dapps) with an incredibly fast consensus mechanism.\nEnables high customizability and the building of arbitrarily complex digital assets with custom rules, covenants, and riders (smart assets) through sub-networks.","front-running#Front Running":"Front Running is a type of attack in which a bot sets a higher gas cost to complete a transaction by inspecting the mempool. The mempool is a type of holding area where transactions that have been broadcast to the network wait to be mined into blocks. The front-running robot analyzes and finds targets that can be attacked by continuously scanning transactions in the Mempool.By creating mutually beneficial relationships with significant mining pools, Ankr is able to support miners to connect more efficiently and directly to nodes via API services. By enabling this syncing up with miners at scale, gas prices are virtually eliminated.","liquidity-mining#Liquidity Mining":"Liquidity mining is a term used in DeFi to describe the process of supplying liquidity* (in the form of crypto assets) to decentralized financial platforms/protocols and in return receiving rewards (usually in the form of tokens) for doing so.\n*Supplying liquidity is also known as staking assets.::: note\nLiquidity Mining is distinct from Yield Farming. Yield farming is a form of staking. Liquidity mining is a subset of yield farming. The main difference is that liquidity providers are compensated not just with fee revenue but also the platform’s own token.\n:::This is a quick overview of how it works. (See StakeFi for more details.)\nBuy crypto assets e.g. ETH and/or DAI. (Some protocols require asset pairs).\nFind a platform or protocol to deposit your crypto assets on. (See StakeFi)\nTypically, you will receive rewards in the form of tokens for depositing assets onto a platform or protocol.\nNext, you can stake your tokens on the issuing protocol for further rewards or trade your tokens on an exchange. Decentralized exchanges (DEXs) such as Uniswap have all tokens listed for trade.\nYou can then earn additional yield by exchanging your tokens for a Stablecoin and depositing those onto a network or protocol.","borrowing-and-lending#Borrowing and Lending":"You can choose to borrow a token or coin from a platform. This then allows you to either stake it back onto the same platform to earn rewards or stake it on another platform to earn rewards.","liquid-staking#Liquid Staking":"","multi-chain-support#Multi-Chain Support":"Multi-chain support provides the means for disparate blockchains to communicate with each other. It also provides the ability to share, see and access information across different blockchain networks.Creating an ecosystem where different blockchains can communicate with each other easily depends on ease of integration with existing systems, the ability to initiate and perform transactions on other chains and transact between deployments by integrating apps and easy switching from one underlying platform to another.Ankr is dedicated to providing this multi-chain support and interoperability via our Developer APIs.Key benefits to dApp Developers:\nEasy information sharing and execution of smart contracts cross-chain.\nPotential for layering and expansion of functionality to create uniquely useful apps.","nodes#Nodes":"Nodes are decentralized applications which run the blockchain; without them the blockchain would not exist.Nodes are deployed on servers in data centers. Ankr uses independent data centers to host its nodes.","parachain#Parachain":"Parachains form part of the Polkadot network. They allow transactions to be processed at the same time - in parallel - instead of one after the other. This removes the bottlenecks - delayed transaction finality and high transaction fees that arise with sequential processing on blockchains.Parachains construct and propose blocks to validators (on a Relay Chain) before being added to the final chain. Each parachain can be optimised for a specific use.","passive-earning#Passive Earning":"Passive earning refers to the ability to generate income at regular intervals without needing to exert much effort. In DeFi, there are several potential ways to earn passive income. NOTE: Some methods are less risky than others but all methods incur risk.","earn-interest#Earn Interest":"Depositing assets onto a platform or protocol allows you to earn interest on your asset in much the same way as placing money into a savings account.","proof-of-work-blockchain#Proof-of-Work Blockchain":"Consensus algorithm commonly called mining used in networks like Bitcoin, Ethereum 1.0, Dogecoin, and Litecoin.","proof-of-stake-blockchain#Proof-of-Stake Blockchain":"Proof of stake is a financial type consensus mechanism used by blockchain networks to achieve distributed consensus. Proof of stake blockchains use much less electricity than Proof-of-work blockchains, and can be hosted in traditional data centers.Users stake crypto assets such as ETH to become a Validator in the network. Validators, sometimes referred to as staking nodes, check transactions and create new blocks. This allows all nodes on the network to agree on the state of the network.Ankr runs a network of validators which power StakeFI, including a top three validator for BSC. In addition, users can deploy validators using Ankr’s 1-click node service.","provider#Provider":"Providers deploy nodes and validate transactions on the Ankr network. They invest resources to support and secure the Ankr infrastructure and in return they receive staking rewards.They can do this in two ways:\nRunning new Staking nodes\nProviders can bring CPU, GPU, memory and free storage to connect to the StakeFi infrastructure using ANKR tokens. Providers host new Staking nodes.\nUsing Ankr Staking Nodes\nProviders DO NOT host staking nodes themselves. They use Ankr staking nodes via sidecars running on an Ethereum 2.0 node.","rebase-or-rebasing#Rebase (or Rebasing)":"A rebase refers to a mechanism used to adjust a price-elastic token to be equivalent in value to another asset it is based on. This adjustment occurs automatically if a market is perfect and all inequalities are arbitraged out. Otherwise, rebasing mechanisms are used to accommodate a token’s price fluctuations e.g in response to rewards for a staked asset. This adjustment is known as a rebase mechanism.","scalability-trilemma#Scalability Trilemma":"The scalability trilemma refers to the inherent difficulty in maximizing three important attributes of blockchain systems: Decentralization, Scalability, and Security.The trilemma claims that blockchain systems can maximize two at the expense of the third - meaning that all blockchain systems require trade-offs depending on the specific application and use case.Blockchains are decentralized and secure by design. However, to build a high performance and reliable application, significant investments must be made in building and maintaining node infrastructure. Ankr helps to solve the scalability issue in proof-of-stake blockchain networks with our Developer API service.The scalability trilemma manifests here with some elements of centralization via our node cluster architecture and RPC gateway.Ankr addresses this tradeoff by adding “decentralization of power” into the service:\nAnkr is on a pathway towards being governed by its community through the ANKR DAO (Decentralized Autonomous Organization). Institutional investors are not allowed to buy up the majority of tokens hence ensuring the community is in power.\nThe Developer API service has a slot auction mechanism for maintaining decentralization: Third party organizations run nodes which power the Developer API.\nNodes are distributed across independent third party data centers across multiple geographic locations, and never in centralized public cloud providers.","sidecar#Sidecar":"Sidecar is Ankr software that manages a blockchain node (e.g. availability, capacity, and security).Ankr users who want to be Providers can install and execute this software to stake their ANKR tokens and receive rewards.Providers who stake using sidecars are expected to participate in the voting process. For participating in the voting process, the stakers will get rewards in ANKR tokens.It also randomly chooses other nodes on the Ankr Staking infrastructure, checks their uptime, and reports to the smart contracts.","stakers-aka-requesters#Stakers AKA Requesters":"Stakers deposit crypto assets on blockchain networks/protocols and request staking services from a Provider.They do not host a node themselves.They can stake any amount - from 0.5 of the chosen coin/token to an unlimited amount.","traditional-staking#Traditional Staking":"Staking involves locking crypto assets (stake) onto a blockchain network to support the security and operations of that network. In exchange for locking your crypto assets, rewards are received in return for validating blocks.The protocol randomly assigns the right to validate a block at specific intervals. The chances of being chosen are proportional to the quantity of crypto assets locked up. The higher the stake, the greater the chance of being selected as the next block validator.The basis for the allocation of rewards varies according to the protocol but can include the following:\nNumber of coins being staked by a validator.\nPeriod of time validator has been actively staking.\nNumber of coins on the network in total.\nRate of inflation.","web-30-movement#Web 3.0 Movement":"The Web 3.0 movement refers to the building of an internet of decentralized networks that no single entity controls. It is a movement away from the centralized corporations that currently dominate the web and profit from the data users generate.The key innovation of these networks is the creation of platforms that no single entity controls, yet everyone can still trust.Blockchain technology underlies the decentralization that is essential to the formation of Web 3.0 because it is open, trustless and permissionless. Decentralization and the enablement of value transfers between peers are the key building blocks of Web 3.0.Ankr provides Web 3.0 infrastructure for individuals, developers, and enterprises."}},"/stake/extra/integrations":{"title":"integrations","data":{"":"We encourage you to use Ankr Staking products in your projects.If you are a blockchain developer or a company, you may want to integrate with Ankr Staking and benefit from a ready-made solution.Ankr Staking products are extensively tested, undergo audit checks and have live users.Development details give you general understanding of how Ankr Staking works under the hood: the workflow, requirements, fees, and so on.SDK gives you SDK documentations for easier and more comprehensible interaction with Ankr Staking. Choose it over API for its convenience, it gives you access to the same functionality.API gives you an API description on how to directly interact with the Ankr Staking smart contracts and get staking metrics. Choose it if you're an experienced developer and need very specific points of interaction.","liquid-staking#Liquid Staking":"","avax#AVAX":"Development details\nSDK\nAPI","bnb#BNB":"Development details\nSDK\nAPI","dot#DOT":"Development details","eth#ETH":"Development details\nSDK\nAPI","ftm#FTM":"Development details\nSDK\nAPI","ksm#KSM":"Development details","matic#MATIC":"Development details\nSDK\nAPI","ankr-oracles#Ankr Oracles":"","ankr-pancakeswap-price-oracle#Ankr PancakeSwap price oracle":"Development details and API"}},"/stake/extra/liquid-crowdloan-market-makers":{"title":"liquid-crowdloan-market-makers","data":{"":"","traditional-finance--fair-value-estimation#Traditional finance & fair value estimation":"In traditional finance, bond trading is enabled by market makers who provide liquidity to the market. Banks and Brokers usually operate as market makers, estimating the fair value of a specific bond, which depends on several factors such as credit risk, sensitivity to changes in interest rates (duration risk) and liquidity risk (some bonds are more liquid than others). Duration risk is also positively correlated to the maturity of the bonds.","parachain-liquid-crowdloan--fair-value-estimation#Parachain Liquid Crowdloan & fair value estimation":"For Parachain Liquid Crowdloan, fair value estimation depends on factors different from traditional finance. However, the spirit of Fair Value estimation is similar.Here is how we ascertain price of 1 Parachain Liquid Bonding token:Some of the elements of the formula depend on the user's personal risk tolerance, such as the required risk premium. Other factors could also be considered if a user is willing, for example the perceived risk associated with Ankr.","market-makers#Market makers":"The need for market makers arises due to the complexity of estimating the fair value of a product. For example the need to make informed decisions and assumptions.Due to the risk of not estimating a product perfectly, market makers are compensated through the bid/ask price. This is the difference between the buy and sell price. The mid-price (median between buy and sell price) ultimately defines the expected value of a Parachain Liquid Crowdloan tokens. Since there are likely to be several Parachain Liquid Crowdloan tokens for every project winning Parachain Slot auctions, Parachain Liquid Crowdloan tokens are likely to have different prices depending on the price of the rewarded tokens they embed.Projects winning Parachain Slot auction are aiming to reward DOT lenders from Parachain crowdloans with a higher APY than Polkadot staking rewards in order to compensate users for the lower liquidity of bonded DOT in Parachain slot auction (lease period maximum 24 months) when compared to 28 days unbonding period for Polkadot staking. As a result, Polkadot Parachain Liquid Crowdloan tokens are expected to generate more rewards than KSM/DOT staking, and if the token from the projects increases in price more than DOT token price, the APY of the Polkadot Parachain Liquid Crowdloan is expected to become higher, unless the Polkadot Parachain Liquid Crowdloans price increases itself. As such, the price of Parachain Liquid Crowdloan tokens depends strongly on the price of the project’s token vs DOT token."}},"/stake/extra/liquid-staking-fees":{"title":"liquid-staking-fees","data":{"":"Ankr charges fees for Liquid Staking.Here are the fees applied during staking and unstaking process.","staking#Staking":"AVAX — 2% fee from the staking reward.\nBNB — relayer fee for cross-chain asset transfer (0.002 BNB).\nDOT — 2% fee from the staking reward.\nFTM — no fees.\nKSM — no fees.\nMATIC — no fees.","unstaking#Unstaking":"AVAX — no fees.\nBNB — no fees.\nDOT — no fees.\nFTM — burnFee; depends on the current liquidity and amount to unstake, calculated by the FantomPool smart contract, deducted from the amount the user unstakes.\nKSM — no fees.\nMATIC — a fee in $ANKR that starts from 100 $ANKR; typical fee range is 500–3500 $ANKR."}},"/stake/extra/liquidity-tokens":{"title":"liquidity-tokens","data":{"":"There are two types of Liquid Staking tokens:• Reward Bearing Tokens, e.g. aETHc formerly aETH\n• Reward Earning Tokens, e.g. aAVAXb and aETHb (formerly fETH.)","reward-earning#Reward earning":"These are automatically issued to your Ankr Staking Dashboard upon successful ETH2 staking.The amount of aETHc issued is equivalent to the amount of staked ETH.Reward bearing tokens represents the amount of ETH staked at issuance PLUS future staking rewards.At the end of the ETH2 staking period (when the beacon chain merges with the mainnet), aETHc holders can redeem aETHc for their original ETH stake plus all accumulated staking rewards.","fair-falue--market-price#Fair falue & market price":"Market price is distinct from Fair Value.Fair Value is your stake plus the rewards that have not yet been distributed. This will be received when ETH is unstaked (this is expected to be some time in 2022).The Market Price is the price that traders are willing to buy and sell internet bonds knowing that they don't have access to the Fair Value until 2022.","reward-earning-tokens#Reward earning tokens":"These are automatically issued to your Ankr Staking Dashboard upon successful ETH2 and/or AVAX staking.Daily rewards are automatically updated in Bond holders’ wallets. The amount of aETHb/aAVAX held automatically increases with every daily rebase."}},"/stake/extra/ls-smart-contract-addresses-mn":{"title":"ls-smart-contract-addresses-mn","data":{"":"Token / Network\tEthereum (ERC20)\tAvalancheC-Chain\tBNB Chain (BEP20)\tBinance Chain (BEP2)\tPolygon\tFantom\tANKR token\tANKR\tANKR Multichain.org\tANKR\tANKR\tANKR Polygon Bridge\tANKRMultichain.org\tLiquid Staking\t\t\t\t\t\t\taAVAXb\taAVAXb\taAVAXb\t\t\t\t\taAVAXc\t\taAVAXc\t\t\t\t\taBNBb\t\t\taBNBb\t\t\t\taBNBc\t\t\taBNBc\t\t\t\taETHb\taETHb\t\taETHbAnkr Bridge\t\t\t\taETHc\taETHc\t\taETHcAnkr Bridge\t\t\t\taFTMb\t\t\t\t\t\taFTMb\taFTMc\t\t\t\t\t\taFTMc\taDOTb\taDOTb\t\t\t\t\t\taKSMb\taKSMb\t\t\t\t\t\taMATICb\taMATICb\t\taMATICbAnkr Bridge\t\taMATICb Ankr Bridge\t\taMATICc\taMATICc\t\taMATICcAnkr Bridge\t\taMATICcAnkr Bridge\t\tLiquid Crowdloan\t\t\t\t\t\t\tAnkr Liquid DOT GLMR\taDOTp-GLMR\t\t\t\t\t\tAnkr Liquid DOT ACA\taDOTp-ACA\t\t\t\t\t\tAnkr Liquid DOT CLV\taDOTp-CLV"}},"/stake/extra/ls-smart-contract-addresses-tn":{"title":"ls-smart-contract-addresses-tn","data":{"":"Token / Network\tEthereum (ERC20)\tAvalancheC-Chain\tBNB Chain (BEP20)\tBinance Chain (BEP2)\tPolygon\tFantom\tANKR token\tANKR\t\t\t\t\t\tLiquid Staking\t\t\t\t\t\t\taAVAXb\t\taAVAXb\t\t\t\t\taAVAXc\t\t\t\t\t\t\taBNBb\t\t\taBNBb\t\t\t\taBNBc\t\t\taBNBc\t\t\t\taDOTb\taDOTbAnkr Bridge\t\t\t\t\t\taETHb\taETHb\t\taETHbAnkr Bridge\t\t\t\taETHc\taETHc\t\t\t\t\t\taFTMb\t\t\t\t\t\taFTMb\taFTMc\t\t\t\t\t\taFTMc\taKSMb\t\t\t\t\t\t\taMATICb\taMATICbAnkr Bridge\taMATICb\taMATICbAnkr Bridge\t\taMATICb\t\taMATICc\taMATICcAnkr Bridge\taMATICc\taMATICcAnkr Bridge\t\taMATICc\t\tLiquid Crowdloan\t\t\t\t\t\t\tAnkr Bonded DOT Parachain GLMR\t\t\t\t\t\t\tAnkr Bonded DOT Parachain ACA\t\t\t\t\t\t\tAnkr Bonded DOT Parachain CLV"}},"/stake/extra/micropools":{"title":"micropools","data":{"":"Pooled staking removes the barriers to entry for people who want to participate in securing Proof-of-stake (PoS) networks such as ETH 2.0 (Beacon Chain).Validators are responsible for ensuring the integrity and validity of transactions on a PoS Network. By 'attesting' to the validity of new transactions and blocks, they are securing the running of the network. In return they receive rewards. Validators must provide a large deposit before they can set up a new Validator Node e.g. 32 ETH on the ETH 2.0 network.Micropools allow participants to contribute smaller asset amounts. These smaller amounts can then be 'pooled' with other stakers to create and run a new Validator Node. In return for your stake, you receive Liquid Staking tokens that can be used on other DeFi Platforms.We currently offer ETH, AVAX & BNB Staking with more opportunities coming soon.Get started with Pooled Staking"}},"/stake/extra/staking-metrics":{"title":"staking-metrics","data":{"":"You can get Ankr Liquid Staking metrics to integrate into your product dashboards and to use metrics like APY in yor product.","available-metrics#Available metrics":"The metrics you can obtain are:\nserviceName — name of the staked token, e.g. eth.\ntotalStaked — total tokens of a specific type, e.g. eth, that are currently staked.\nstakers — total number of stakers, i.e. unique blockchain addresses that have staked with Ankr and haven't withdrawn their stake yet.\napy — current annual percentage yield, i.e. the surplus a staker gets yearly from staking their tokens with Ankr.\ntotalStakedUsd — total value of all staked tokens of a specific type, e.g. eth, expressed in USD.","get-metrics#Get metrics":"RESTful API endpoint that returns metrics that describe different properties of Ankr Liquid Staking.","host#Host":"https://api.stkr.io","endpoint#Endpoint":"GET /v1alpha/metrics","request#Request":"curl https://api.stkr.io/v1alpha/metrics","response#Response":"","200#200":"{\"services\":[\n{\"serviceName\":\"eth\",\"totalStaked\":\"55491.8\",\"stakers\":\"4653\",\"apy\":\"4.97\",\"totalStakedUsd\":\"109650687\"},\n{\"serviceName\":\"polygon\",\"totalStaked\":\"784956.231630104\",\"stakers\":\"480\",\"apy\":\"8.821321624\",\"totalStakedUsd\":\"510221.5506\"},\n{\"serviceName\":\"avax\",\"totalStaked\":\"11535.419443173\",\"stakers\":\"950\",\"apy\":\"8.127504167228558\",\"totalStakedUsd\":\"328759.4541\"},\n{\"serviceName\":\"bnb\",\"totalStaked\":\"30053.87823877267\",\"stakers\":\"4022\",\"apy\":\"5.741214848742271\",\"totalStakedUsd\":\"9881715.165\"},\n{\"serviceName\":\"dot\",\"totalStaked\":\"3253.3792788102\",\"stakers\":\"64\",\"apy\":\"13.0479764\",\"totalStakedUsd\":\"32924.1983\"},\n{\"serviceName\":\"ksm\",\"totalStaked\":\"58.247912784107\",\"stakers\":\"10\",\"apy\":\"15.4233560\",\"totalStakedUsd\":\"4782.15364\"},\n{\"serviceName\":\"ftm\",\"totalStaked\":\"123442.66208311735\",\"stakers\":\"297\",\"apy\":\"14.4010684\",\"totalStakedUsd\":\"51129.95063\"}\n]}"}},"/stake/extra/switch-aethc-binance":{"title":"switch-aethc-binance","data":{"":"We are decommissioning an older version of the aETHc Liquid Staking token on the BNB Chain and switching to a new aETHc token that is compatible with Ankr Bridge.The reason is Binance stopped supporting an older ETH bridged version and part of our users got their older aETHc locked because of that.To switch to the new aETHc:\nIn your wallet, switch the account with the locked aETHc and change the network option to Binance Smart Chain.\nVisit Ankr Staking Dashboard. Ankr will ask you to connect your wallet if you haven't done it before.\n\n\nLocate the \"unsupported old version\" of aETHc and click Switch to new.\n\n\n\n\nIf you forgot to change to Binance Smart Chain at Step 1, you may need to reconnect your wallet after changing to it.\n\n\n\nConfirm the switching transaction in your wallet.\n\n\nAfter confirming the transaction, wait for it to finalize.\n\n\nWhen the transaction is finalized and switching is successful, click Go to dashboard to see the new aETHc.\nYou can also  add it to your wallet clicking Add aETHCc to wallet."}},"/stake/delegated-staking/ankr/unstake":{"title":"unstake","data":{"":"","before-you-start#Before you start":":::noteEnsure you have a small amount of ETH for the gas fee.ANKR delegated staking has a locking period of 84–91 days. You are only able to unstake ANKR or claim your rewards after this period has ended. The period applies to each of your staking transactions independently.When unstaking, an undelegate period of 1 next epoch — 7 days — applies. After this period, you can claim your unstaked ANKR to the connected wallet address.\nFor example, if the epoch starts on Monday, and you unstaked on Monday, you'll wait 14 days (current_epoch + next_epoch), on Tuesday — 13 days, and so on.:::","unstake-ankr#Unstake ANKR":"We designed ANKR Staking with multiple Node Providers in mind, so there is no Unstake all button.\nThis button would be impossible with you staking with different Node Providers.\nYou can unstake your ANKR by specific staking transaction you made.\n:::note\nMultiple Node Providers support is coming soon.\n:::","unstake-ankr-by-specific-staking-transaction#Unstake ANKR by specific staking transaction":"Open Ankr Staking Dashboard\nLocate the ANKR box and click the Manage.\nUnder Active Staking, locate a stake that is past the locking period and has the Unlocked status.\nClick Unstake next to it and confirm your action in MetaMask if needed.\nWait for the undelegate period of 7–14 days to end.\nWhen ended, repeat #1 and #2 and go to the Unstaking tab.\nClick Claim next to the unstaked ANKR to send it to the address you connected via MetaMask.\n\nYou will need to make the following interactions in your wallet::thumbsup: Grant access to grant access to your wallet.:thumbsup: Confirm the transaction."}},"/stake/delegated-staking/ankr/claim-restake":{"title":"claim-restake","data":{"":"","before-you-start#Before you start":":::info Ensure the following:You are using a Chrome Browser.You have a MetaMask wallet.\n:::","claim-rewards#Claim rewards":":::note\nYou can claim or restake your rewards after the locking period of 84–91 days. This period applies to each staking transaction independently.However, your stake will keep generating rewards until you unstake, whether or not the locking period has ended.Rewards accrue on the weekly basis, i.e. you can claim rewards once a week, not daily.\n:::","claim-all-rewards#Claim all rewards":"You may not want to restake your rewards and may want to claim all unlocked rewards at once. To do that:\nVisit Ankr Staking Dashboard.\nLocate ANKR under Staked tokens and click Manage.\nOn the management page, see the rewards that are past the locking period under Claimable rewards.\nClick Claim all.","claim-rewards-for-specific-staking-transactions#Claim rewards for specific staking transactions":"You may want to restake some of your rewards to get higher APY. To do that:\nVisit Ankr Staking Dashboard.\nLocate ANKR under Staked tokens and click Manage.\nOn the management page, under Active Staking, choose a Node Provider and an unlocked stake.\nClick Claim next to the chosen reward.","restake-rewards#Restake rewards":":::note\nFor each of your restaking transactions, you'll be able to claim or, in turn, restake your rewards after the locking period of 84–91 days. This period applies to each restaking transaction independently.However, your restake will keep generating rewards until you unstake, whether or not the locking period has ended.\n:::You can restake your rewards to increase you APY. To do that:\nVisit Ankr Staking Dashboard.\nLocate ANKR under Staked tokens and click Manage.\nOn the management page, under Active Staking, choose a Node Provider and an unlocked reward.\nClick Restake next to the chosen reward."}},"/learn/get-started/ankrjs-advanced-apis-react-quickstart-guide":{"title":"Ankr.js (Advanced APIs) React Quickstart Guide","data":{"":"By Dhaiwat PandyaAnkr.js is a JavaScript library that lets you interact with Ankr's Advanced APIs. In this guide, you'll learn how to create an NFT viewer app using the following technologies:Next.js as the React/frontend framework\nTailwindCSS as the CSS framework\nAnkr.js to interact with Ankr's Advanced APIs\nAnkr's Advanced APIs as the data source","prerequisites#Prerequisites":""}},"/stake/defi/what-is-defi":{"title":"What is Ankr DeFi?","data":{"":"","what-is-ankr-defi#What is Ankr DeFi?":"Ankr DeFi Trade is a Liquid Staking data aggregation tool providing access to real-time trading prices.It allows users to find all liquidity staking DeFi integrations to trade between Liquid Staking tokens and other assets.Liquid Staking tokens, e.g. aETHc or aMATICb, are tokens users get when staking their assets, e.g. ETH or MATIC, in Ankr Staking.","ankr-defi-dashboard#Ankr DeFi Dashboard":"Ankr DeFi features a cross-chain dashboard where users can choose Liquid Staking tokens and assets to trade, and platforms to trade on.Currently, the dashboard features:\nLiquidity pools\nYield farming\nVaults\n\nBorrowing and Indexes are coming later."}},"/build/what-is-ankr-build":{"title":"Introduction","data":{"":"Ankr provides a distributed nodes infrastructure supporting a multi-chain network and providing tools for developers to start building Web3 projects.\nAnkr RPC Service is a major part of Ankr Build and contains various components depending on your Plan:\nPublic Plan: Free and instant access to our range of Public RPC APIs.\nPremium Plan: Sign up to our Pay-as-you-go Premium Plan with a minimum deposit of 1000 ANKR and get access to powerful features.\nAnkr Scan: Ankr Scan is a multi-chain Explorer that allows viewing assets across chains as well as assigned to a specific wallet address.\nNode Services: Full, Archive, and Validator/Staking nodes are available for 50+ chains.","overview#Overview":"Ankr RPC Service is the gateway through which Web3 developers, projects, and protocols connect to the node infrastructure and development tools they need to build Web3 applications.The evolution of Ankr Network includes our free, public RPC endpoints that developers have come to know and love, alongside new Premium and Enterprise plans packed with advanced developer tools — all powered by a globally distributed and decentralized network of nodes. In the new Ankr Network, developers pay-as-they-go for access to on-chain data, independent node providers serve blockchain requests to earn ANKR tokens, and stakers contribute ANKR tokens to full nodes to secure the network and share in the rewards.Public RPCs are available to all and free to use on the Ankr RPC platform. Today, blockchain developers and projects can use these RPC endpoints to access Polygon, Avalanche, Arbitrum, Solana, Celo, Near, Fantom, Ethereum, and many other blockchain networks with no need to input user info or login credentials. Simply visit our RPC Services to start using these endpoints.To access all the advanced features of Ankr RPC, developers can use Premium services with a flexible and affordable pay-as-you-go model denominated in ANKR tokens. Premium features include exclusive multi-chain RPC endpoints, prioritized requests, WebSockets, and Advanced Developer APIs that are designed to make Web3 development an easy task.","public-plan#Public Plan":"Public Plan is central to the Ankr vision of mass adoption in Web3 and crypto economy. Ankr's Public Plan provides a zero-cost and reliable access to RPC API endpoints for growing number of networks:Check out the latest chains on Ankr RPC.","get-started-using-public-plan#Get started using Public plan":"Go to Ankr RPC service.\nIn Sidebar, click Endpoints to open the pane.\nIn the list of blockchains, click the one you'd like to interact with.\nIn the Blockchain opened, select a chain type (Mainnet/Testnet) needed for your project.\nOn the Connection tab, in the URL block, copy the URL into your project's library or config file.","how-it-works#How it works":"The Public Plan's services are being kept stable using a backbone of multiple underlying nodes globally distributed across 200 data centers as well as individual providers' homes.Constant system monitoring ensures that RPC endpoints are synced in real-time to underlying nodes. Whilst, network traffic monitoring uses intelligent caching to optimize speed and automate routing to the best available node at busy times.This architecture is built to meet the requirements for high availability and scalability.","premium-plan#Premium Plan":"Premium Plan provides access to a range of exclusive features that allow you to build on a secure, reliable, ultra-fast multi-chain network. See more info on the Premium Plan's pricing and charging model.","key-features#Key features":"Unique collection of JSON-RPC API endpoints. Read more.\nSecure and private endpoints for HTTPS and WSS. Read more.\nOn-request Hybrid Infrastructure functionality. Read more.","benefits#Benefits":"Premium Plan provides a set of secure and private RPC API endpoints exclusive to you. Those endpoints are designed to have greater reliability by interfacing with a fully distributed, ultra low latency node pool. This node network infrastructure is distinct from the Public Plan's one.Enjoy the following benefits:\nAt times of network congestion, Premium Plan requests are prioritized.\nEstablish a durable, low-latency connection via the websocket endpoint and have data pushed incrementally directly to you as soon as it is available. This makes it ideal for real-time data analytics.\n\n\nThe WebSocket API limits the maximum number of simultaneous connections to provide protection against misuse, such as DDoS attacks, for example. If your Websocket client makes too many connections at the same time, you'll receive an Error message.\nCheck out How to connect to Premium websockets."}},"/stake/what-is-staking":{"title":"What is Ankr Staking?","data":{"":"Ankr Staking aims to bring the benefits of DeFi to the masses with the following solutions.","liquid-staking#Liquid Staking":"Liquid Staking extends the Staking experience to solve the problem of loss of liquidity and capital inefficiency.\nWhen assets are staked, they are usually locked up on-chain helping to maintain the network.\nHowever, Liquid Staking provides instant access to Liquid Staking tokens that are equivalent in value to the stake in a 1:1 ratio.\nThese portable Liquid Staking tokens e.g. aMATICb, aETHb, aETHc, aAVAXb can be utilized on additional DeFi platforms to earn further rewards.The clear benefits of Ankr Liquid Staking are:\nMinimum commitment costs\nImmediate access to liquidity\nTransfer of risks to Ankr experts","defi#DeFi":"DeFi provides a single dashboard view of use cases for Liquid Staking tokens.","ankr-bridge#Ankr Bridge":"Ankr Bridge brings cross-chain liquid staking to multiple chains to enable users to increase their yield opportunities.Ankr Bridge is secured with ECDSA cryptography and a multi-party computation based Threshold Signature Scheme. This ensures that private keys are never exposed whilst mitigating against any single point of failure.","ankr-switch#Ankr Switch":"Ankr Switch enables the exchange of Liquid Staking tokens: between reward earning tokens and reward bearing tokens for the same asset.","parachain-liquid-crowdloan#Parachain Liquid Crowdloan":"Parachain Liquid Crowdloan provide similar benefits to Staking.\nBond DOT/KSM: users bond DOT or KSM to a Polkadot project during a Parachain Slot Auction.\nLocked Liquidity: if the project wins a slot, the bonded DOT or KSM is inaccessible.\nAttain Instant Liquidity: however, Parachain Liquid Staking tokens can be instantly obtained. These are portable and usable elsewhere.\n\nToken rewards from the winning project are distributed to Parachain Liquid Crowdloan token holders automatically."}},"/stake/stake-overview":{"title":"Overview","data":{"":"Ankr Staking aims to bring the benefits of DeFi to the masses with the following solutions.","liquid-staking#Liquid Staking":"Liquid Staking extends the Staking experience to solve the problem of loss of liquidity and capital inefficiency.\nWhen assets are staked, they are usually locked up on-chain helping to maintain the network.\nHowever, Liquid Staking provides instant access to Liquid Staking tokens that are equivalent in value to the stake in a 1:1 ratio.\nThese portable Liquid Staking tokens e.g. aMATICb, aETHb, aETHc, aAVAXb can be utilized on additional DeFi platforms to earn further rewards.The clear benefits of Ankr Liquid Staking are:\nMinimum commitment costs\nImmediate access to liquidity\nTransfer of risks to Ankr experts","parachain-liquid-crowdloan#Parachain Liquid Crowdloan":"Parachain Liquid Crowdloan provide similar benefits to Staking.\nBond DOT/KSM: users bond DOT or KSM to a Polkadot project during a Parachain Slot Auction.\nLocked Liquidity: if the project wins a slot, the bonded DOT or KSM is inaccessible.\nAttain Instant Liquidity: however, Parachain Liquid Staking tokens can be instantly obtained. These are portable and usable elsewhere.\n\nToken rewards from the winning project are distributed to Parachain Liquid Crowdloan token holders automatically.","defi#DeFi":"DeFi provides a single dashboard view of use cases for Liquid Staking tokens.","ankr-bridge#Ankr Bridge":"Ankr Bridge brings cross-chain liquid staking to multiple chains to enable users to increase their yield opportunities.Ankr Bridge is secured with ECDSA cryptography and a multi-party computation based Threshold Signature Scheme. This ensures that private keys are never exposed whilst mitigating against any single point of failure.","ankr-switch#Ankr Switch":"Ankr Switch enables the exchange of Liquid Staking tokens: between reward earning tokens and reward bearing tokens for the same asset."}},"/stake/switch/switch-mechanics":{"title":"Under the hood","data":{"":"","fees#Fees":"The user pays the following fees:\n0.3% is deducted from the entered sum for using Ankr Switch.\n\nThe user must also count in the gas fees for outgoing transactions.","switching-workflow#Switching workflow":"The user visits Ankr Switch\nThe user grants Ankr Switch access to their wallet. If needed, the user select the correct network and clicks Switch network in their wallet.\nThe user chooses source and destination tokens.\nThe user enters the desired amount of tokens to switch.\nIf the token is a reward bearing token like aETHc, the user clicks Approve.\nThat causes Ankr Switch to call the approve() function that permits the involved smart contracts to spend the specified amount of the user's tokens.\nThe approve trasaction remains in the pending state until it's confirmed on the network, which enables the Switch button for the user.\nThe user clicks Switch to switch the tokens and clicks Confirm in their wallet.\nThat causes Ankr Switch to call the lockShares(shares) when switching aETHc to aETHb, or unlockShares() when switching aETHb to aETHc.\nAnkr waits until the switching transaction is confirmed on the network and displays a Success page.\nThe user can add the switched token to their wallet by clicking Add aETHc to wallet. Alternatively, the user can click Go to dashboard to view their tokens there.\n\nTo sum up, the flow in any direction is the same: approve (if necessary) -> lockShares/unlockShares.","additional-details#Additional details":"aETHb can be burned or minted, and aETHC can be locked or unlocked."}},"/stake/for-integrators/oracles/overview":{"title":"overview","data":{"":"Ankr offers you oracles that get data from DEXs.The oracles make it easier for you to integrate with Ankr Staking products. They obtain live data such as prices of Ankr Liquid Tokens to US Dollar and so on.This section of Ankr Docs helps you understand how oracles work, what actual data you're getting, and how to integrate with them.","available-oracles#Available oracles":"PancakeSwap price oracle"}},"/stake/for-integrators/smart-contract-api/avax-api":{"title":"Avalanche Liquid Staking API","data":{"":"To integrate with AVAX Liquid Staking, use the smart contract functions and examples below.","stake-avax-and-claim-aavaxb#Stake AVAX and claim aAVAXb":"","stakeandclaimbonds#stakeAndClaimBonds()":"Stakes the msg.value of AVAX and claims aAVAXb for it.","smart-contract#Smart contract":"Mainnet AvalanchePool Proxy\nTestnet AvalanchePool Proxy","example#Example":"Testnet live transaction example","stake-avax-and-claim-aavaxc#Stake AVAX and claim aAVAXc":"","stakeandclaimcerts#stakeAndClaimCerts()":"Stakes the msg.value of AVAX and claims aAVAXc for it.","smart-contract-1#Smart contract":"Mainnet AvalanchePool Proxy\nTestnet AvalanchePool Proxy","example-1#Example":"Testnet live transaction example","unstake-aavaxb-and-claim-avax#Unstake aAVAXb and claim AVAX":"","claimbondsamount#claimBonds(amount)":"Lets AvalanchePool exchange aAVAXb for AVAX.","parameters#Parameters":"amount (uint256, required) — amount of aAVAXb to be unstaked.","smart-contract-2#Smart contract":"Mainnet AvalanchePool Proxy\nTestnet AvalanchePool Proxy","example-2#Example":"Testnet live transaction example","unstake-aavaxc-and-claim-avax#Unstake aAVAXc and claim AVAX":"","claimcertsamount#claimCerts(amount)":"Lets AvalanchePool exchange aAVAXc for AVAX.","parameters-1#Parameters":"amount (uint256, required) — amount of aAVAXc to be unstaked.","smart-contract-3#Smart contract":"Mainnet AvalanchePool Proxy\nTestnet AvalanchePool Proxy","example-3#Example":"Testnet live transaction example","get-staking-metrics#Get staking metrics":"To integrate Ankr Staking metrics into your dashboards or use metrics like APY in your products, read Liquid Staking Metrics."}},"/stake/for-integrators/restful-api/staking-metrics":{"title":"Staking Metrics API","data":{"":"You can get Ankr Liquid Staking metrics to integrate into your product dashboards and to use metrics like APY in yor product.","available-metrics#Available metrics":"The metrics you can obtain are:\nserviceName — name of the staked token, e.g. eth.\ntotalStaked — total tokens of a specific type, e.g. eth, that are currently staked.\nstakers — total number of stakers, i.e. unique blockchain addresses that have staked with Ankr and haven't withdrawn their stake yet.\napy — current annual percentage yield, i.e. the surplus a staker gets yearly from staking their tokens with Ankr.\ntotalStakedUsd — total value of all staked tokens of a specific type, e.g. eth, expressed in USD.","get-metrics#Get metrics":"RESTful API endpoint that returns metrics that describe different properties of Ankr Liquid Staking.","host#Host":"https://api.stkr.io","endpoint#Endpoint":"GET /v1alpha/metrics","request#Request":"curl https://api.stkr.io/v1alpha/metrics","response#Response":"","200#200":"{\"services\":[\n{\"serviceName\":\"eth\",\"totalStaked\":\"55491.8\",\"stakers\":\"4653\",\"apy\":\"4.97\",\"totalStakedUsd\":\"109650687\"},\n{\"serviceName\":\"polygon\",\"totalStaked\":\"784956.231630104\",\"stakers\":\"480\",\"apy\":\"8.821321624\",\"totalStakedUsd\":\"510221.5506\"},\n{\"serviceName\":\"avax\",\"totalStaked\":\"11535.419443173\",\"stakers\":\"950\",\"apy\":\"8.127504167228558\",\"totalStakedUsd\":\"328759.4541\"},\n{\"serviceName\":\"bnb\",\"totalStaked\":\"30053.87823877267\",\"stakers\":\"4022\",\"apy\":\"5.741214848742271\",\"totalStakedUsd\":\"9881715.165\"},\n{\"serviceName\":\"dot\",\"totalStaked\":\"3253.3792788102\",\"stakers\":\"64\",\"apy\":\"13.0479764\",\"totalStakedUsd\":\"32924.1983\"},\n{\"serviceName\":\"ksm\",\"totalStaked\":\"58.247912784107\",\"stakers\":\"10\",\"apy\":\"15.4233560\",\"totalStakedUsd\":\"4782.15364\"},\n{\"serviceName\":\"ftm\",\"totalStaked\":\"123442.66208311735\",\"stakers\":\"297\",\"apy\":\"14.4010684\",\"totalStakedUsd\":\"51129.95063\"}\n]}"}},"/stake/delegated-staking/ankr/ankr-stake":{"title":"Stake","data":{"":"","before-you-start#Before you start":":::info Ensure the following:You are using a Chrome Browser.You have a MetaMask wallet.\n:::","purchase-ankr#Purchase ANKR":"Visit 1Inch ETH to ANKR swap page and swap ETH for the desired amount of ANKR tokens.","connect-your-wallet#Connect your wallet":"Visit Ankr Staking.\nClick Connect wallet in the top-right corner of the page and choose MetaMask; approve connecting if needed.\nIf you're on a different network, you may be prompted to switch to the correct one. Click Switch network on the page, then allow MetaMask to switch to it.\nSuccessful connection to Ankr Staking is indicated at top right corner by the address of wallet you connected.\n\nYou will need to make the following interactions in your wallet::thumbsup: Grant access to grant access to your wallet.:thumbsup: Approve to add a new network.:thumbsup: Switch network to switch to the correсt network.","stake-ankr#Stake ANKR":":::note\nMake sure you have some ETH to pay the gas fee for your staking transaction.Currently, ANKR can only be staked on Ethereum. If you have ANKR on any other chains, please bridge it first to stake it.You can claim or restake your rewards after the locking period of 84–91 days. This period applies to each staking transaction independently.\nHowever, your stake will keep generating rewards until you unstake, whether or not the locking period has ended.\n:::\nVisit Ankr Staking.\nIn the Delegated staking section, click Stake under ANKR.\nEnter the desired amount of ANKR to stake (min. amount is 1000 ANKR).\nChoose a Node Provider (currently only ANKRl; more providers in future releases).\nClick Approve to approve Ankr Staking access to your ANKR\nConfirm approving access in MetaMask.\nClick Send to send your delegated stake to the chosen Node Provider.\nConfirm the transaction in MetaMask.\nOn the stake progress page, click Go to dashboard to see the staked ANKR. You may need to wait a little for the transaction to finalize and Ankr Staking Dashboard to automatically update."}},"/stake/delegated-staking/ankr/ankr-claim-restake":{"title":"Claim or Restake Rewards","data":{"":"","before-you-start#Before you start":":::info Ensure the following:You are using a Chrome Browser.You have a MetaMask wallet.\n:::","claim-rewards#Claim rewards":":::note\nYou can claim or restake your rewards after the locking period of 84–91 days. This period applies to each staking transaction independently.However, your stake will keep generating rewards until you unstake, whether or not the locking period has ended.Rewards accrue on the weekly basis, i.e. you can claim rewards once a week, not daily.\n:::","claim-all-rewards#Claim all rewards":"You may not want to restake your rewards and may want to claim all unlocked rewards at once. To do that:\nVisit Ankr Staking Dashboard.\nLocate ANKR under Staked tokens and click Manage.\nOn the management page, see the rewards that are past the locking period under Claimable rewards.\nClick Claim all.","claim-rewards-for-specific-staking-transactions#Claim rewards for specific staking transactions":"You may want to restake some of your rewards to get higher APY. To do that:\nVisit Ankr Staking Dashboard.\nLocate ANKR under Staked tokens and click Manage.\nOn the management page, under Active Staking, choose a Node Provider and an unlocked stake.\nClick Claim next to the chosen reward.","restake-rewards#Restake rewards":":::note\nFor each of your restaking transactions, you'll be able to claim or, in turn, restake your rewards after the locking period of 84–91 days. This period applies to each restaking transaction independently.However, your restake will keep generating rewards until you unstake, whether or not the locking period has ended.\n:::You can restake your rewards to increase you APY. To do that:\nVisit Ankr Staking Dashboard.\nLocate ANKR under Staked tokens and click Manage.\nOn the management page, under Active Staking, choose a Node Provider and an unlocked reward.\nClick Restake next to the chosen reward."}},"/learn/learn-overview":{"title":"Overview","data":{"":"Find web3 tutorials, developer guides, codes, API references, RPC methods, and more.","ankr-tutorials---learn-web3#Ankr Tutorials - Learn Web3":"Learn how to develop Smart Contracts, build dApps, explore tools and frameworks, and more.","basic#Basic":"Find getting started tutorials, guide and follow along to ship cool stuff.\nWeb3 - Get Started Tutorials↗","smart-contract-development#Smart Contract Development":"Explore code guide, tools, tutorials and resoures you need to write and deploy smart contracts.\nSmart Contract Development Tutorials↗","advanced-tutorials#Advanced Tutorials":"Find End-to-End tutorials to build and ship full-fledged decentralized applications.\nIntermediate to Advanced Tutorials↗"}},"/game/ankr-gaming-overview":{"title":"Overview","data":{"":"In recent years, the number of blockchain-based video games with active users has skyrocketed thanks to play-to-earn (P2E) value models and the success demonstrated by early Web3 gaming projects like Axie Infinity.Non-Fungible Tokens (NFTs) are of special relevance to game developers that want to include in-game currency. By implementing an NFT, in-game characters and items can be truly held by the player eliminating the possibility of losing acquired items due to lost login credentials or account termination.Today, the Web3 gaming industry is booming; it grew by 765% in 2021.The biggest challenge to its continued adoption, however, is the technical difficulty involved with creating a Web3 game. That’s where Ankr Game SDKs comes in.Ankr Game SDKs provide Web3 capabilities to the two biggest players in the industry - Unity Engine and Unreal Engine.","ankr-unity-sdk#Ankr Unity SDK":"Unity is the most popular engine for independent developers and game studios.:::tip Get UnityDownload Unity Engine:::The Unity Engine is a cross-platform game development suite that makes it easy to build your game once and then deploy it across all major mobile, VR, web, console, and TV platforms from a single script. You can install the engine from Unity Hub, choose the version you want and simply select the target platforms for your game. All the SDKs and other tools required for those platforms can be automatically downloaded by the Hub.It is easier to get started as a game developer with Unity. C# is an easier language to learn and\nthere is a huge and very active community of other developers and designers. The development process is faster with Unity and it is a popular choice with mobile game developers.It has everything you need to create a game from scratch.","ankr-unreal-sdk#Ankr Unreal SDK":"Unreal is the more popular engine for the AAA-industry and artists. Developed by Epic Games, Unreal is the driving force behind blockbuster games such as Red Dead Redemption 2 and Fortnite.:::tip Get UnrealDownload Unreal Engine:::The Unreal Engine is a cross-platform suite of game development tools but you are required to set up the engine for every platform (other than PC) you want to support. This includes installing the SDK and any other tools required to run the game on the target platform. Unreal is renowned for enabling fine-tuned graphics and lightning-fast render speeds. It is the better option for virtual reality integration and photorealistic picture quality.You can use blueprints like building blocks for simple prototyping, however C++ is required for more sophisticated game logic. It is a more complex language to learn but there are extensive tutorials and an active and responsive community for support.Unreal is the ideal choice for creating bigger budget, complex games with superb graphics and performance at scale."}},"/game/unreal-sdk/unreal-sdk-overview":{"title":"Overview","data":{"":"The Ankr Unreal Game SDK brings powerful functionality to the Unreal Engine, making it easy for game developers and studios to give their games full Web3 capabilities, including - integrating cryptocurrencies and non-fungible tokens (NFTs). These docs explain what Ankr’s Unreal Game SDK is, how to install it, and how to get started using it. Let’s dive in!","key-features#Key features":"Create best-in-class NFT monetization strategies.\nEffortlessly interact with contracts deployed on multiple blockchains.\nEasily connect Web3 wallets (MetaMask) to authenticate and enable in-game transactions.\nIn-built kit to create responsive games on Android and iOS.\nAdd blockchain interactivity to existing games.","sdk-tutorials#SDK tutorials":"","community-support#Community support":"Check out Ankr Game channels in the Ankr Discord.","whats-inside#What's inside":"The SDK is designed to make it super easy to get started with game development especially for Android and iOS mobile games development.It contains a wide range of examples, scripts and plugins to enable a world of possibilities for web3 game development."}},"/game/unreal-sdk/setting-up/unreal-sdk-427":{"title":"unreal-sdk-427","data":{"":"Let's get started!","#":"The following instructions are based on Monterey v12.3.1.","get-ready#Get Ready":"Ensure you have the latest version of Xcode.\nDownload the Epic Games Launcher to access the Unreal Engine. Download\nInstall Unreal Engine v5. Download","step-one---add-unreal-engine-v4#STEP ONE - Add Unreal Engine v4":"Open Epic Games Launcher and view all versions of the Unreal Engine you have.\nClick Library and the + button to add the v4 version\n\n\nYou can now click to install v4. (This takes some time)\nLaunch v4 (Be patient, this can take a little while):::noteIf a pop up appears:\n\"Do you want the app UnrealEditor.app to accept incoming network connections\"\nSelect Allow\n\n:::","step-two---create-a-new-project#STEP TWO - Create a new project":"Inside the Unreal Project Browser, select Games and click Next\n\n\nOn the Template screen, select Blank and click Next:::noteIf you can't see any templates, you should reinstall v4:::\n\n\nIn Project Settings\n\n\nFrom the Blueprint and C++ options, select C++.\nFrom the Starter Content and No Starter Content options, select No Starter Content\nFrom the Desktop/Console or Mobile options, select your preference.\n\n\n\n\nGive your project a memorable name e.g. BlockchainGame and then click Create Project\nCheck your project is successfully created and opens. Then close it. So we can do the next important step of adding the SDK.","step-three---download-ankr-sdk#STEP THREE - Download Ankr SDK":"Download the latest release of AnkrSDK.zip package.\nCreate a new folder (if it doesn't exist) inside the project you just created and call it Plugins.\nExtract the downloaded AnkrSDK.zip contents into the Plugins folder you just created.\nDelete the AnkrSDK.zip file if it is inside the Plugins folder as well.","step-four---generate-the-xcode-project#STEP FOUR - Generate the Xcode project":":::infoThese docs are written using Xcode 13.1:::\nOpen Unreal Editor\nIf you get a notice saying \"Missing BlockchainGame Modules Ankr SDK\". Select Yes to rebuild.\nIt should now compile the project.\nOnce the project is compiled, select Tools > Generate Xcode project\nWhen this is done, select Tools > Open Xcode","step-five---build-project#STEP FIVE - Build project":"Inside Xcode, you should be able to see the AnkrSDK included in the Plugins folder.\nExpand Games > your_unreal_project__name > Source > your_unreal_project_name > your_unreal_project_name.Build.cs\n\nAdd \"AnkrSDK\" at the end of the string array as shown below:\nPublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\", \"AnkrSDK\" });\n\n\n\nNow from the top menu, select Product > Build For > running\nYou can view the Build status in the top right.\nYou know everything has worked out when a message appears stating 'Build Succeeded'.","step-six---open-project-in-unreal-editor#STEP SIX - Open project in Unreal Editor":"Locate GameInstance.h if already created. If not Add C++ class from Content Browser, check Show All Classes and select GameInstance. Name your class 'MyGameInstance'.\nOpen MyGameInstance.h and include the following code:\n#include \"AnkrClient.h\"\n\nUPROPERTY()\nUAnkrClient* ankrClient;\n\nUFUNCTION(BlueprintCallable, Category = \"ANKR SDK\")\nUAnkrClient* GetAnkrClient();\n\nOpen MyGameInstance.cpp and include the following code:\nUAnkrClient* UMyGameInstance::GetAnkrClient()\n{\nif (ankrClient == nullptr)\n{\nankrClient = NewObject<UAnkrClient>();\n}\n\nreturn ankrClient;\n}\n\nYou can now add and use all the functions from the Ankr SDK in your game.:::tip","-nice-work-youre-all-set-to-go#✅ Nice work!! You're all set to go":":::\n\nThe following instructions are based on Windows 10.","get-ready-1#Get Ready":"Ensure you have the latest version of Visual Studio\nDownload the Epic Games Launcher to access the Unreal Engine. Download\nInstall Unreal Engine v5 Download","step-one---add-v5-unreal-engine#STEP ONE - Add v5 Unreal Engine":"Open Epic Games Launcher and view all versions of the Unreal Engine you have.\nClick Library and the + button to add the v5 version:::warning greyed out + button\nIf you find that the + button is greyed out, then do the following:a. Sign out\nb. Then from the login box, scroll to the bottom and click 'Sign in Later'.\nc. Inside Epic Games Launcher > Library > + > v5\nd. Now Sign in as usual:::\nYou can now click to install v5 (This takes some time)\nLaunch v5 (Be patient, this can take a little while):::noteIf a pop up appears:\n\"Do you want the app UnrealEditor.app to accept incoming network connections\"\nSelect Allow:::","step-two---create-a-new-project-1#STEP TWO - Create a new project":"Inside the Unreal Project Browser, select the Games tab and Blank\nUnder Project Defaults, select C++\nDeselect Starter Content\nGive your project a memorable name e.g. BlockchainGame and then click Create\nCheck your project opens and then close it. So we can do the next important step of adding the SDK.","step-three---download-ankr-sdk-1#STEP THREE - Download Ankr SDK":"Download the latest release of AnkrSDK.zip package.\nCreate a new folder inside the project you just created and call it Plugins.\nExtract the downloaded AnkrSDK.zip contents into the Plugins folder you just created.\nDelete the AnkrSDK.zip file if it is inside the Plugins folder.","step-four---generate-a-visual-studio-project#STEP FOUR - Generate a Visual Studio Project":"Open Unreal Editor\nIf you get a notice saying \"Missing your_unreal_project_name Modules Ankr SDK\". Select Yes to rebuild.\nIt should now compile the project.\nFrom the top menu, select Tools > Generate Visual Studio Project\nWhen this is done, select Tools > Open Visual Studio Project","step-five---build-project-1#STEP FIVE - Build project":"Inside Visual Studio project\nAdd AnkrSDK to your_unreal_project_name > Source > your_unreal_project_name > your_unreal_project_name.Build.cs as shown below:\nPublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\", \"AnkrSDK\" });\n\nGenerate a Visual Studio Project by right-clicking Your_unreal_project_name.uproject' and selecting Generate Visual Studio project files\nOpen the generated Visual Studio solution file (.sln) and check if the plugin is included in the solution explorer.","step-six---open-project-in-unreal-editor-1#STEP SIX - Open Project in Unreal Editor":"Locate GameInstance.h if already created. If not Add C++ class from Content Browser, check Show All Classes and select GameInstance. Name your class 'MyGameInstance'.\nOpen MyGameInstance.h and include the following code:\n#include \"AnkrClient.h\"\n\nUPROPERTY()\nUAnkrClient* ankrClient;\n\nUFUNCTION(BlueprintCallable, Category = \"ANKR SDK\")\nUAnkrClient* GetAnkrClient();\n\nOpen MyGameInstance.cpp and include the following code:\nUAnkrClient* UMyGameInstance::GetAnkrClient()\n{\nif (ankrClient == nullptr)\n{\nankrClient = NewObject<UAnkrClient>();\n}\n\nreturn ankrClient;\n}\n\nYou can now add and use all the functions from the Ankr SDK in your game.:::tip","-nice-work-youre-all-set-to-go-1#✅ Nice work!! You're all set to go":":::"}},"/game/extra/ankr-gaming-gas-fees-gas-free-methods":{"title":"Gas Fees and Gas-free Methods","data":{"":"All the methods pertaining to smart contracts can be narrowed down to the methods that change the state of the contract and the methods that don’t.Let’s have a look at the code of smart contracts and see what's the difference between those. Take the ERC-721 smart contract for example.","no-gas-fee-methods#No gas fee methods":"balanceOf is a simple example of the method that doesn’t change a contract state.\nfunction balanceOf(address owner) public view returns (uint256) {\n...\n}\nAll non-payable methods should be marked as view. Looking at ABI generated by this contract, we can see the stateMutability field with the view value.\n{\n\"constant\": true,\n\"inputs\": [\n{\n\"internalType\": \"address\",\n\"name\": \"owner\",\n\"type\": \"address\"\n}\n],\n\"name\": \"balanceOf\",\n\"outputs\": [\n{\n\"internalType\": \"uint256\",\n\"name\": \"\",\n\"type\": \"uint256\"\n}\n],\n\"payable\": false,\n\"stateMutability\": \"view\",\n\"type\": \"function\"\n}\nRead more on the View functions in Solidity docs.To view a list of methods, call the Contract.GetData method.Requesting data from contract fields or mappings is also gas free.Let’s take a look at the Simple Open Auction example from Solidity docs.\nuint public auctionEndTime;\nmapping(address => uint) public pendingReturns;\nIn ABI it looks the following way.\n...\n{\n\"constant\": true,\n\"inputs\": [],\n\"name\": \"auctionEndTime\",\n\"outputs\": [\n{\n\"internalType\": \"uint256\",\n\"name\": \"\",\n\"type\": \"uint256\"\n}\n],\n\"payable\": false,\n\"stateMutability\": \"view\",\n\"type\": \"function\"\n},\n{\n\"constant\": true,\n\"inputs\": [\n{\n\"internalType\": \"address\",\n\"name\": \"\",\n\"type\": \"address\"\n}\n],\n\"name\": \"pendingReturns\",\n\"outputs\": [\n{\n\"internalType\": \"uint256\",\n\"name\": \"\",\n\"type\": \"uint256\"\n}\n],\n\"payable\": false,\n\"stateMutability\": \"view\",\n\"type\": \"function\"\n}\n...\nTo read more on Solidity features, follow the mappings and fields links.To access contract fields and mappings, use the Contract.GetData method.","gas-fee-methods#Gas fee methods":"All methods that change a contract state and aren't marked as view require a gas fee to be paid for mining.\nfunction mint(address to, uint256 tokenId) {\n...\n}\nTo check that, have a look at the stateMutability field of an ABI.\n{\n\"constant\": false,\n\"inputs\": [\n{\n\"internalType\": \"address\",\n\"name\": \"to\",\n\"type\": \"address\"\n},\n{\n\"internalType\": \"uint256\",\n\"name\": \"tokenId\",\n\"type\": \"uint256\"\n}\n],\n\"name\": \"mint\",\n\"outputs\": [],\n\"payable\": false,\n\"stateMutability\": \"nonpayable\",\n\"type\": \"function\"\n}\nThe stateMutability value can be either payable or non-payable for the gas fee methods.To call that kind of contract methods, use CallMethod or Web3SendMethod."}},"/game/extra/ankr-gaming-token-standards":{"title":"Understanding Token Standards","data":{"":"","erc-721#ERC-721":"The standard for non-fungible tokens, often used for collectibles and games.\nThis set of interfaces, contracts, and utilities are all related to the ERC721 Non-Fungible Token Standard.","erc-1155#ERC-1155":"A novel standard for multi-tokens, allowing for a single contract to represent multiple fungible and non-fungible tokens, along with batched operations for increased gas efficiency. ERC1155 Multi Token Standard."}},"/game/extra/ankr-gaming-csharp-to-solidity":{"title":"C# and Solidity Types Comparison","data":{"":"Here is the comparison of types in C# and Solidity:\nC#\tSolidity\tstring\taddress\tBigInteger\tuint8 to uint256\tbyte[]\tbytes, bytes1 to bytes32\tbool\tbool\tstring\tstring"}},"/build/chains/chains-v2-fantom":{"title":"Fantom","data":{"":"Fantom is a secure platform to build DApps. It is fully permissionless and open-source. Powered by Fantom’s aBFT consensus algorithm, it leverages its speed to produce real-world applications with no risks of congestion or long confirmation times. The Fantom Opera mainnet is compatible with the Ethereum Virtual Machine (EVM) and provides full smart contracts support through Solidity.","quick-links#Quick links":"FantomDocsGithub","connect-wallet#Connect wallet":"You can set up your MetaMask wallet to connect to Fantom RPC. You can then perform transactions and interact with the network.","get-started#Get started":"Open your Metamask Extension and click the 'Network' drop down menu at the top.\nSelect 'Custom RPC'.\nEnter the settings for the required project as follows in the table below:\n\n\nChain\tCustom RPC Category\tDetails\tFantom\tNETWORK NAME:\tFantom RPC\t\tNEW RPC URL:\thttps://rpc.ankr.com/fantom\t\tCHAIN ID:\t250\t\tSYMBOL:\tFTM\t\tBLOCK EXPLORER:\thttps://explorer.fantom.network/","integrate-code#Integrate code":"","web3-library#web3 library":"clientVersion\n\nReturns the current client version.","example-request#Example request":"curl https://rpc.ankr.com/fantom \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":1}'","example-response#Example response":"{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"go-opera/v1.1.0-rc.3-4f960171-1645028798/linux-amd64/go1.17.7\"}","net-library#net library":"net_version\n\nReturns the current network id.","example-request-1#Example request":"curl https://rpc.ankr.com/fantom\\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}'","example-response-1#Example response":"{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"250\"}","eth-library#eth library":"","example-request-2#Example request":"curl https://rpc.ankr.com/fantom \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":67}'","example-response-2#Example response":"{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"0x1fe0cee\"}"}},"/build/chains/chains-v2-binance-smart-chain":{"title":"BNB Smart Chain","data":{"":"BNB Chain is an EVM compatible chain designed to work alongside Binance Chain.As well as EVM compatibility, BNB Chain adds smart contract functionality to the chain. The dual-chain architecture alongside Binance Chain enables the sending and receiving of BNB and BEP2 tokens cross-chain.EVM-compatibility permits support for Ethereum tools and DApps.","quick-links#Quick links":"BNB ChainDocsGithub","connect-wallet#Connect wallet":"You can set up your MetaMask wallet to connect to BNB Chain RPC. You can then perform transactions and interact with the network.","get-started#Get started":"Open your Metamask Extension and click the 'Network' drop down menu at the top.\nSelect 'Custom RPC'.\nEnter the settings for the required project as follows in the table below:\n\n\nChain\tCustom RPC Category\tDetails\tBNB Chain\tNETWORK NAME:\tBNB Chain RPC\t\tNEW RPC URL:\thttps://rpc.ankr.com/bsc\t\tCHAIN ID:\t56\t\tSYMBOL:\tBNB\t\tBLOCK EXPLORER:\thttps://bscscan.com","integrate-code#Integrate code":"","web3-library#web3 library":"clientVersion\n\nReturns the current client version.","example-request#Example request":"curl https://rpc.ankr.com/bsc \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":1}'","example-response#Example response":"{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"Geth/v1.1.7-74f6b613/linux-amd64/go1.16.10\"}","net-library#net library":"net_version\n\nReturns the current network id.","example-request-1#Example request":"curl https://rpc.ankr.com/bsc \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}'","example-response-1#Example response":"{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"56\"}","eth-library#eth library":"","example-request-2#Example request":"curl https://rpc.ankr.com/bsc \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":67}'","example-response-2#Example response":"{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"0xf50e1c\"}"}},"/build/products/ankr-scan":{"title":"Ankr Scan","data":{"":"Ankr Scan is a Multi-Chain Explorer that allows a unified view of multiple chains at a time. Currently it supports 11 chains with more in the pipeline.\nView current and historical data for transactions, addresses and blocks\nUnified view of Crypto assets, Tokens and NFTs acrossing multiple chains.\nView all assets associated with a single wallet address/account.","search#Search":"Address - View all assets held by a specific address.\nTxn hash - View full details for a specific transaction.\nBlock - View full details for a specific block.","block-data#Block data":"View individual block details for blocks held on multiple chains.\nBlock Height - The block number and length of the blockchain (in blocks) on creation of the current block.\nTimestamp -  The time at which the block was mined.\nNumber of transactions - Total number of transactions included in the block.\nMiner address - The address of the miner who mined the block\nSize - Size of the data within the block. Determined by block gas limit.\nGas used - The total units of gas used by transactions in the block.\nBlock hash - The cryptographic hash of the block header of the current block generated using the SHA256 algorithm.\nParent hash - The hash of the previous block from which this block was generated.\nSha3 uncles - The combined hash of all uncles for a given parent.\nState root - The root hash of Merkle trie that stores the entire blockchain state.","transaction-data#Transaction data":"You can view detailed information for an individual transaction on supported blockchains.\nTransaction Hash - Unique Transaction ID\nStatus - Status of the transaction e.g. Success, Pending\nBlock - Number of the block the transaction is recorded.\nTimestamp - Time of the transaction\nFrom - The address of the sender of the transaction (could be a contract address)\nTo - The address of the recipient  of the transaction (could be a contract address)\nValue - The amount transferred\nTransaction Fee - The amount paid to the miner\nGas Price - The cost per unit of gas for the transaction.\nGas used by the Transaction - The exact units of gas used and the percentage of gas.\nNonce - The numbered transaction sent from a given address. Each sent transaction increases the nonce by 1","address-view#Address view":"By entering a specific wallet address you can gain a view of the following:","assets#Assets":"Total Value of Assets held across all multiple supported chains.\nTransactions\n\nTransactions can be of assets as well as smart contract code sent from one account to another account.Transactions can include binary data (payload) and Ether.If the target account contains code, the code is executed and the payload is provided as input data.The 'Method' field provides details on the nature of the transaction.The following details are provided:\nChain Symbol - Visual representation ofthe blockchain.\nTxn Hash - The unique Transaction ID\nMethod - e.g. Transfer ETH, AtomicMatch, Mint\nBlock - The block number that thetransaction is on.\nLast seen - When the transaction statuswas last viewed\nFrom - The address from which thetransaction originated\nOut/In - The direction of thetransaction\nTo The address of the recipient of thetransaction\nValue - The amount transferred\nToken Transfers\n\nToken Transfers provide details of from and to transactions between addresses only.\nTxn Hash - The unique Transaction ID\nLast Seen - When the transaction statuswas last viewed.\nFrom - The address from which thetransaction originated.\nOut/In - The direction of thetransaction.\nTo - The address of the recipient ofthe transaction.\nValue - The amount transferred\nToken The asset type transferred","nfts#NFTs":"NFT view provides details of Non-Fungible Tokens held across multiple chains.\nImage of NFT - Preview of the NFT\nCollection - The series of NFTs of which this is a part.\nChain - The blockchain and logo the NFT is secured on.\nDescription - The description of the NFT.\nBalance - The quantity of this NFT held.","how-it-works#How it works?":"Typically, to see transactions for a specific address it is required to iterate over all transactions and scan for this address.Ankr Scan iterates over all the transactions in the blocks and identifies specific from and to transactions.Instead of searching all transactions, a specially developed Ankr indexing service returns all transactions for a single block. This vastly speeds up the process of identifying transactions across blocks rather than individual transactions by reducing the complexity and quantity of data.This is soon to be available as an Ankr SDK."}},"/build/ankr-build-overview":{"title":"Overview","data":{"":"Ankr provides a distributed nodes infrastructure supporting a multi-chain network and providing tools for developers to start building Web3 projects.\nAnkr RPC Service is a major part of Ankr Build and contains various components depending on your Plan:\nPublic Plan: Free and instant access to our range of Public RPC APIs.\nPremium Plan: Sign up to our Pay-as-you-go Premium Plan with a minimum deposit of 1000 ANKR and get access to powerful features.\nAnkr Scan: Ankr Scan is a multi-chain Explorer that allows viewing assets across chains as well as assigned to a specific wallet address.\nNode Services: Full, Archive, and Validator/Staking nodes are available for 50+ chains.","overview#Overview":"Ankr RPC Service is the gateway through which Web3 developers, projects, and protocols connect to the node infrastructure and development tools they need to build Web3 applications.The evolution of Ankr Network includes our free, public RPC endpoints that developers have come to know and love, alongside new Premium and Enterprise plans packed with advanced developer tools — all powered by a globally distributed and decentralized network of nodes. In the new Ankr Network, developers pay-as-they-go for access to on-chain data, independent node providers serve blockchain requests to earn ANKR tokens, and stakers contribute ANKR tokens to full nodes to secure the network and share in the rewards.Public RPCs are available to all and free to use on the Ankr RPC platform. Today, blockchain developers and projects can use these RPC endpoints to access Polygon, Avalanche, Arbitrum, Solana, Celo, Near, Fantom, Ethereum, and many other blockchain networks with no need to input user info or login credentials. Simply visit our RPC Services to start using these endpoints.To access all the advanced features of Ankr RPC, developers can use Premium services with a flexible and affordable pay-as-you-go model denominated in ANKR tokens. Premium features include exclusive multi-chain RPC endpoints, prioritized requests, WebSockets, and Advanced Developer APIs that are designed to make Web3 development an easy task.","public-plan#Public Plan":"Public Plan is central to the Ankr vision of mass adoption in Web3 and crypto economy. Ankr's Public Plan provides a zero-cost and reliable access to RPC API endpoints for growing number of networks:Check out the latest chains on Ankr RPC.","get-started-using-public-plan#Get started using Public plan":"Go to Ankr RPC service.\nIn Sidebar, click Endpoints to open the pane.\nIn the list of blockchains, click the one you'd like to interact with.\nIn the Blockchain opened, select a chain type (Mainnet/Testnet) needed for your project.\nOn the Connection tab, in the URL block, copy the URL into your project's library or config file.","how-it-works#How it works":"The Public Plan's services are being kept stable using a backbone of multiple underlying nodes globally distributed across 200 data centers as well as individual providers' homes.Constant system monitoring ensures that RPC endpoints are synced in real-time to underlying nodes. Whilst, network traffic monitoring uses intelligent caching to optimize speed and automate routing to the best available node at busy times.This architecture is built to meet the requirements for high availability and scalability.","premium-plan#Premium Plan":"Premium Plan provides access to a range of exclusive features that allow you to build on a secure, reliable, ultra-fast multi-chain network. See more info on the Premium Plan's pricing and charging model.","key-features#Key features":"Unique collection of JSON-RPC API endpoints. Read more.\nSecure and private endpoints for HTTPS and WSS. Read more.\nOn-request Hybrid Infrastructure functionality. Read more.","benefits#Benefits":"Premium Plan provides a set of secure and private RPC API endpoints exclusive to you. Those endpoints are designed to have greater reliability by interfacing with a fully distributed, ultra low latency node pool. This node network infrastructure is distinct from the Public Plan's one.Enjoy the following benefits:\nAt times of network congestion, Premium Plan requests are prioritized.\nEstablish a durable, low-latency connection via the websocket endpoint and have data pushed incrementally directly to you as soon as it is available. This makes it ideal for real-time data analytics.\n\n\nThe WebSocket API limits the maximum number of simultaneous connections to provide protection against misuse, such as DDoS attacks, for example. If your Websocket client makes too many connections at the same time, you'll receive an Error message.\nCheck out How to connect to Premium websockets."}},"/app-chain/app-chain-overview":{"title":"Overview","data":{"":"Serving developers and web3 consumers alike, App Chains are dedicated blockchains that serve only one dApp — yours.Ankr helps you develop, launch, & operate those chains, and you deliver enhanced Web3 experiences to your users.","what-is-the-value-of-app-chains#What is the value of App Chains?":"App Chains offers plug and play tools for developers to build their dApps fast.The 5 App Chain building blocks to customize the chain to the builder's exact specs ensures they give their users low, near zero, gas fees, blazing-fast transactions, security, and a pleasing experience that works as intended every time.","why-use-an-app-chain#Why use an App Chain?":"For ultimate scalability:No more competing with other projects for traffic on crowded blockchains — keeping your transactions fast, your fees low, and your users happy. For customized control:\nConfigure your own consensus mechanism\nChoose your own development frameworks and programming languages\nDetermine your very own fine-tuned balance between speed and security","is-an-app-chain-right-for-me#Is an App Chain right for me?":"App Chains may be the ideal development solution if you:\nNeed help transitioning from Web2 to Web3 and want to own your infrastructure\nWant to own your ecosystem without building it from scratch\nHave an existing Web3 project looking to onboard your next billion users\nAre limited by current L1s and L2s\nHave a high-throughput use case needing to process lots of transactions\nHave Web3 games that need wallet integration and marketplaces for in-game assets","how-can-i-build-an-app-chain#How can I build an App Chain?":"Despite all their benefits, App Chains can be difficult to build and launch which is why Ankr’s expertise and setup service is so crucial for helping users get their App Chains off the ground and into Web3.There are 5 main technical features that you’ll need to get started with your App Chain:\nValidator nodes\nRPC endpoint\nBlock explorer\nTestnet token faucet\nStaking UI\n\nThrough Ankr’s App Chain program, you have several options for each of these components — being able to choose from building certain pieces yourself with our provided instructions and support, or going hands-off and letting us take care of all the technical legwork for you.You’ll also have access to Ankr’s Exchange-Readiness program in which we use our immense industry experience to help you prepare to apply for token listings on major exchanges."}},"/app-chain/components/app-chain-validator-nodes":{"title":"Validator Nodes","data":{"":"The core of any Proof-of-Stake blockchain are validator nodes — they process transactions and add new blocks to the chain.\nSo before you can even get your testnet off the ground, you'll need validator nodes to support it.","pick-a-base-chain#Pick a base chain":"These nodes need to both validate your App Chain, and sync up with your chosen parent chain.\nThis means they’ll need to be specially configured to integrate with either BNB Chain, Avalanche, or Polygon.","launch-your-validator-nodes#Launch your validator nodes":"Option 1 (experienced Web3 developers)Ankr supplies the validator binary and configuration files that correspond to your chosen parent chain. With these instructions and docs, you can set up your own validator nodes.Option 2 (new to Web3, or want SLA support)Ankr provides full engineering support to a set of validator nodes for your App Chain. This includes maintenance, updates, and hosting services for one year. After a year, you can renew your service, or take over the reins.","start-building-today#Start building today":"Whichever option you choose, Ankr is standing by to help you launch your validators quickly and efficiently so you can get your project off the ground ASAP."}},"/app-chain/affiliated-chain/bnb-sidechain/how-to-launch/bnb-sidechain-configure-genesis-file":{"title":"Customize Genesis Config","data":{"":"To run a BNB Sidechain instance, you need genesis config file that is included into the devnet demo setup.\nTo understand the config parameters and create your customized genesis config file, use the genesis configurator below."}},"/app-chain/affiliated-chain/bnb-sidechain/bnb-sidechain-demo":{"title":"Demo","data":{"":"There is a demo application where you can try BNB Sidechain.\nIt already contains pre-deployed API gateways, block explorer, UI for the staking and faucet.\nRPC Endpoint: https://rpc.dev-01.bas.ankr.com/\nBlock Explorer: https://explorer.dev-01.bas.ankr.com/\nFaucet: https://faucet.dev-01.bas.ankr.com/\nStaking UI: https://staking.dev-01.bas.ankr.com/\nMetaMask parameters:\nNetwork Name: BAS devnet\nNew RPC URL: https://rpc.dev-01.bas.ankr.com/\nChain ID: 14000\nCurrent Symbol: BAS\n:::info\nIf you want to see BNB Sidechain source code, check the BNB Sidechain codebase.\n:::"}},"/app-chain/affiliated-chain/bnb-sidechain/bnb-sidechain-staking":{"title":"Staking","data":{"":"BNB Sidechain supports on-chain staking system and uses the PoSA (proof-of-stake-of-authority) staking model.\nIt allows users to delegate their tokens to the specific validator and share validator's rewards based on the total staked amount.","roles#Roles":"Staking roles are:\nValidator — a node that produces new blocks and validates existing blocks.\nDelegator — a user who participates in validator election.","validator#Validator":"Validator is a node that runs the validator node software, in a special validator mode. This mode allows the node to connect to bootnodes and produce new blocks.\nOnce a block is produced by a validator, it propagates it though the network, using bootnodes, to other validators. Other validators must verify and set this block.\nToday the Parlia consensus engine doesn't support fast-finality, this feature is still under development, that is why to prove the correctness of the produced block, the user must verify 2/3*N+1 blocks.To become a validator, the user must fit these requirements:\nHave their own, fully synchronized, node running in the full-sync mode, with unlocked validator private key (--unlock= param).\nRegister their validator address in the staking smart contract via the registerValidator(address validatorAddress, uint16 commissionRate) function. Registering, the user must specify the validator's address and commission rate.\nAsk one of existing validator owners to propose the user to become a validator.\nWait until 2/3 of the validators support the candidate.","slashing#Slashing":"If a validator doesn't produce blocks, it can be slashed.\nOne slashing is equal to one missed block in the blockchain.If a validator misses a block, another validator can slash them. They don't receive rewards for the missed block.If a validator misses blocks for misdemeanorThreshold times, such validator losses rewards for entire epoch. The default value of misdemeanorThreshold is 50.If validator misses blocks for felonyThreshold times, such validator goes to jail and is not able to produce rewards for validatorJailEpochLength epochs (usually its around 1 week). The default value of felonyThreshold is 150.As a result, a jailed validator loses all their rewards for 1 week or 25% of monthly rewards.Once validatorJailEpochLength has ended for a jailed validator and they have been released from jail, they can start to produce new blocks.\nRelease from jail is a very important mechanism that allows us to avoid problems with corrupted or underperforming validators that can't produce new blocks at all.\nIn essence, it's just a confirmation from the validator's owner that the validator has recovered and is ready to continue working.\nTo be released from jail, the validator's owner must invoke the function releaseValidatorFromJail(address validatorAddress) and will be able to continue block producing when the next epoch starts.","blocks--epochs#Blocks & epochs":"When a delegator votes for a validator, they modify the total delegated amount. Effectively, they also modify the share distribution between all delegators.\nIt makes share computation very complicated and requires dynamic recalculation of shares for each reward distribution. This may make the entire rewards distribution process very expensive.\nSince we're running the staking and reward distribution models fully on-chain, we want all computations to be optimized for the smart contracts.\nTo reach this, we split the staking process into epochs.An epoch is an interval with N blocks inside.\nTheoretically, an epoch length can be equal to just one block. However, it can significantly increase storage size and bring no benefit.\nTo solve this potential problem, we're looking for the most optimal epoch length.Epoch length should be optimal, as using a non-optimal length can raise the cost of reward-claiming transactions.\nOn the other hand, it optimizes on-chain computations.\nIn essence, we ask delegators to compute their rewards for each epoch when they want to claim them.\nThat's why finding an optimal epoch length is very important for both validators and delegators.\nWe suggest the epoch size of 1 day. This number is optimal for both sides and does not bring any significant overhead of storage and gas consumption.\n1 day epoch allows to spend only 1.7 million gas units a year per single user. Since block size is around 80 million gas units, a delegator has ~40-50 years to claim their rewards before those can become unclaimable.\nDifferent blockchains solve this problem in different ways. Some of them just burn all unclaimed rewards if the user doesn't claim those for a long enough time (usually 1-2 weeks).Since we don't want to burn rewards and don't want our clients to pay a lot of gas for the reward-claiming transactions, we introduce an optimized version of staking called StakingPool.\nStaking pool allows to use a different staking model where instead of delegating tokens to a validator, the user buys a share of the pool and validator rewards are distributed between delegators based on their share.\nAs all users use the same pool, on average the cost of reward-claiming transactions is shared by all delegators in the pool.The key difference between these two models is that staking pool computations are not super \"clean\", i.e. they can cause dust in staking due to the rounding of numbers.\nAlso, staking pools are not optimized for big staking amounts. So, for big staking amounts, we use direct staking, while for small — a staking pool.","reward-distribution#Reward distribution":"","validators-rewards#Validator's rewards":"Validator can get rewards by executing transactions.\nEach transaction has execution cost and 15/16 of this cost goes to the validator, but 1/16 of the reward goes to the system treasury that can use these funds for the system needs, such as bridging cost coverage.\nNot all block rewards go to the validator's owner. A share of them is also distributed between delegators.When the validator's owner creates a new validator, the commission rate must be specified.\nThe commission rate defines what percentage of the block reward go to the validator owner.\nThe rate is encoded as uint16 and the percentage is encoded as N%*100. For example, 0.01%*100=1 and 99%*100=9900.\nIt also means the commission rate must be in range from 0% to 99.99%. However, in reality, its limited to 0% up to 30% to restrict validators from setting very high commission rates.","delegators-rewards#Delegator's rewards":"Delegators rewards are calculated based on their total staked amount at the validator.The universal formula for delegator's reward distribution is =rewardsPerBlock*myDelegatedAmount/totalDelegated.The reward is calculated per one validator. The total rewards for a delegator, if staked at different validators, is the sum or per-validator rewards."}},"/app-chain/affiliated-chain/bnb-sidechain/bnb-sidechain-faq":{"title":"FAQ","data":{"":"","what-is-bnb-sidechain#What is BNB Sidechain?":"The BNB Sidechain is an infrastructure introduced to help developers and node operators build and run their own blockchain as their internal value system for a massive number of users while still maintaining a close connection with BNB Smart Chain. Any project developer will be able to deploy their own BNB Sidechain with its unique specifications and validator set. This validator set can run with fewer validators than BNB Smart Chain, depending on the BNB Sidechain deployer. These validators can be run by the application owners or any community stakeholders, bringing more flexibility and decentralization to BNB Sidechain. The typical usage of BNB Sidechain is like the Ronin chain for the Axie Infinity.First version will be formally announced at the end of March, 2022. For more technical details, read this Notion article.","do-projects-need-permissions-to-set-up-bnb-sidechain#Do projects need permissions to set up BNB Sidechain?":"No, BNB Sidechain is permissionless. We have 3–4 games in the test pilot stage right now. Nodereal and Ankr will help them build on BNB Sidechain.","what-is-the-consensus-mechanism-for-bnb-sidechain#What is the consensus mechanism for BNB Sidechain?":"TL;DR: Think of it as a \"mini BNB Smart Chain\".BNB Sidechain uses Parlia consensus of BNB Smart Chain. Parlia is a Proof-of-Staked Authority (PoSA) consensus algorithm for BNB Smart Chain. It incorporates elements from both Proof-of-Stake and Proof-of-Authority. It is a BFT-like consensus where only one validator produces a block and to be sure of the correctness of this operations we must wait for the confirmation time, usually its 2/3*N+1, where N is active validators (15 blocks for the current configuration).For more detail, read about Parlia on Binance docs.","ive-heard-about-the-hack-on-ronin-how-does-bnb-sidechain-protect-me-from-something-like-this#I've heard about the hack on Ronin. How does BNB Sidechain protect me from something like this?":"The recent exploit discovered on Ronin illustrates the importance of having a diverse and decentralized group of validators and node operators serving the chain. Ankr will use its own token to help incentivize other node providers to support decentralization on BNB Sidechain.","what-is-the-cost-for-projects-to-adopt-bnb-sidechain#What is the cost for projects to adopt BNB Sidechain?":"Depends on whether the project wants to own their own BNB Sidechain, or they want it as a PaaS service.NodeReal or Ankr will provide it as PaaS, which includes validators, networks, tools, RPC service, and explorer. All that will be provided as a package, and there will be a quotation for this service.","will-bnb-sidechain-transactions-and-daos-be-counted-towards-bnb-smart-chain-should-we-account-for-these-sidechain-metrics-and-how#Will BNB Sidechain transactions and DAOs be counted towards BNB Smart Chain? Should we account for these sidechain metrics and how?":"They will not be counted. In the future, BNB Smart Chain should focus mainly on non-game metrics and liquidity, while games will be on BNB Sidechain.","when-can-projects-start-deploying-on-bnb-sidechain#When can projects start deploying on BNB Sidechain?":"BNB Sidechain Testnet will be out at the end of March, 2022.BNB Sidechain Mainnet will be ready at least 2 months after that.","where-can-we-find-more-docs-for-bnb-sidechain-for-our-developers-to-read-through#Where can we find more docs for BNB Sidechain for our developers to read through?":"Refer to BNB Sidechain Architecture.Also, read BNB Smart Chain 2022: Build N’ Build and BEP100 proposal for BNB Sidechain.","if-developers-have-questions-about-bnb-sidechain-deployment-where-can-they-ask-them#If developers have questions about BNB Sidechain deployment, where can they ask them?":"We will soon set up a Discord channel for questions and organize a Twitter space to share more details.\nFor now, they can read How to Launch a BNB Sidechain.","i-have-read-the-proposal-and-want-to-take-the-next-step-toward-deployment-who-can-i-talk-to#I have read the proposal and want to take the next step toward deployment. Who can I talk to?":"For now, read How to Launch a BNB Sidechain. For other business and technical details, wait till the Discord channel is set up. You'll be able to ask your questions there.","if-a-project-already-has-its-own-private-chain-whats-the-process-to-integrate-it-as-a-bnb-sidechain-and-what-does-integrate-mean#If a project already has its own private chain, what’s the process to integrate it as a BNB Sidechain? And what does “integrate” mean?":"Such a project will have to implement BNB Sidechain modules following our standards to align with our BNB Sidechain framework. \"Integrate\" means to become a BNB Sidechain-compatible blockchain that can use all the specter of BNB Sidechain products.","whats-the-process-to-set-up-a-bnb-sidechain-how-long-does-it-take#What’s the process to set up a BNB Sidechain? How long does it take?":"On average, it takes several hours to set up a BNB Sidechain.","how-is-the-validator-set-and-rules-decided-can-the-application-decide-on-all-the-validators#How is the validator set and rules decided? Can the application decide on all the validators?":"We propose a very flexible configuration, based on the project parameters. The minimum is 3 validators.","are-there-prerequisites-for-a-token-to-be-used-as-a-bnb-sidechain-sidechain-token#Are there prerequisites for a token to be used as a BNB Sidechain sidechain token?":"There are no prerequisites. You can just issue a new token.For example, Ankr will have its own BNB Sidechain and use its own token.","what-are-the-main-differences-advantages-and-disadvantages-when-we-compare-bnb-sidechain-with-avalanche-subnets#What are the main differences, advantages, and disadvantages when we compare BNB Sidechain with Avalanche Subnets?":"They are very similar. Where they differ is the consensus rules.","what-maintenance-is-required-for-bnb-sidechain-operations-do-we-maintain-it-or-bnb-smart-chain-does-it#What maintenance is required for BNB Sidechain operations? Do we maintain it or BNB Smart Chain does it?":"If you build your own BNB Sidechain, the maintenance is fully on you.If you use it as a PaaS at Nodereal or Ankr, they will do the maintenance. They will also do all future upgrades, 24x7 SLA support, and so on.","whats-the-expected-technological-advancement-here-in-other-words-whats-the-positive-sum-net-value-for-users-and-developers#What's the expected technological advancement here? In other words, what's the positive-sum net value for users and developers?":"With BNB Sidechain, developers are able to set up and run a scalable blockchain solution, with smart contracts capability, in a very short time. They can also modify and upgrade their BNB Sidechain using different modules or writing their own modules. Effectively, it means faster and simpler monetization and easier user attraction.With BNB Sidechain, users can gain access to new projects faster and use new exciting opportunities."}},"/app-chain/affiliated-chain/bnb-sidechain/bnb-sidechain-glossary":{"title":"Glossary","data":{"":"","bnb-sidechain#BNB Sidechain":"Framework for creating sidechains in the BNB Smart Chain ecosystem.","bnb-sidechain-modules#BNB Sidechain Modules":"Configurable and programmable modules that extend the base BNB Sidechain functionality that is obtained applying the BNB Sidechain template. Internally, BNB Sidechain implements the following modules: Parlia consensus engine, staking pools, governance, dynamic runtime upgrades, reward management, manageable blockchain params, EVM hooks, deployment proxy.\nTemplate\nA ready-made blockchain solution that is already integrated into the BNB Smart Chain infrastructure. A template defines the primary structure and configuration of the blockchain, using special templates. With the BNB Smart Chain integration, developers automatically get access to such useful products as a ready-made staking system, block explorer, SDK, API gateways, interfaces for governance, etc.Right now, we offer a single BNB Smart Chain-based template. In the future, the list of templates will be extended.","bnb-sidechain-validator-hub#BNB Sidechain Validator Hub":"A smart contract that adds to cross-chain functionality to the BNB Sidechain applications. It registers the BNB Sidechain application in the BNB Smart Chain smart contract.See this code example for technical details:\ninterface BASValidatorHub {\nfunction registerBAS(string projectName, address[] initialValidatorSet, IBlockHeaderVerificationFunction bhvf) external;","block-header-verification-bhvf#Block Header Verification (BHVF)":"A Solidity function that verifies block headers from BNB Sidechain applications, thus ensuring the validators are not compromised. Also, BHVF is responsible for verifying transaction receipt from blockchain that allows to prove the correctness of cross-chain transfer from BNB Sidechain to BNB Smart Chain.","bls-cryptography#BLS Cryptography":"Boneh–Lynn–Shacham cryptography for signature verification and more. For more detail, refer to CryptoWiki.","bnb-smart-chain#BNB Smart Chain":"BNB Smart Chain, formerly known as BSC. The Binance chain with smart contracts support.","bnb-smart-chain-infrastructure#BNB Smart Chain Infrastructure":"BNB Smart Chain brings with it a ready-made staking system, block explorer, SDK, API gateways, interfaces for governance, etc. All that is easily accessible to BNB Sidechain developers, as creating a BNB Sidechain they apply a BNB Sidechain template that includes integration with this infrastructure.","evm#EVM":"A powerful, sandboxed virtual stack embedded within each full Ethereum node, responsible for executing contract bytecode. It controls smart contract deployment and execution.","governance#Governance":"On-chain governance in each BNB Sidechain to let users vote for the new proposal on the chain.\nVoting power is distributed based on the total delegated amount to the validator.\nOnce ⅔ of the quorum is reached and >51% of votes are for the proposal, it can be executed by anyone on the chain.\nGovernance is able to manage staking parameters, such as felony threshold or jail period.","native-asset-bridge#Native Asset Bridge":"A cross-chain bridge that is embedded to BNB Sidechain as a system smart contract.\nIt supports deposits (BNB Sidechain -> BNB Smart Chain) and withdrawals (BNB Smart Chain -> BNB Sidechain).","parlia-consensus-engine#Parlia Consensus Engine":"A Proof-of-Staked Authority (PoSA) consensus algorithm for BNB Smart Chain.\nIt incorporates elements from both Proof-of-Stake and Proof-of-Authority. Parlia is similar to Clique.\nFor more detail, read about Parlia on Binance docs.","system-smart-contracts#System Smart Contracts":"A predefined set of system smart contracts that a BNB Sidechain provides for platform operation.Predefined BNB Smart Chain-compatible system smart contracts:\nStaking (0x0000000000000000000000000000000000001000) — for managing validator delegations and active validator set.\nSlashingIndicator (0x0000000000000000000000000000000000001001) - for slashing not active validators.\nSystemReward (0x0000000000000000000000000000000000001002) — treasury for the system rewards to cover relay fees and others.\n\nBNB Sidechain-defined smart contracts:\nStakingPool (0x0000000000000000000000000000000000007001) — staking pool that provides cheaper access to the staking contract.\nGovernance (0x0000000000000000000000000000000000007002) — default on-chain implementation by Compound’s Alpha governance.\nChainConfig (0x0000000000000000000000000000000000007003) — configuration for the consensus that is managed by on-chain governance.\nRuntimeUpgrade (0x0000000000000000000000000000000000007004) — allows to upgrade system contract runtime.\nDeployerProxy (0x0000000000000000000000000000000000007005) — proxy for managing deployers of the smart contracts."}},"/game/unity-sdk/unity-sdk-reference":{"title":"SDK Reference","data":{"":"","ankrsdkfactory#AnkrSDKFactory":"","description#Description":"A class for SDK instance creation.","static-methods#Static methods":"Method\tDescription\tGetAnkrSDKInstance\tCreates an instance of SDK with a given argument.\nor\nMethod\tDescription\tnetworkName\tAn enum containing a network name.","returns#Returns":"Parameter\tDescription\tIAnkrSDK\tAn instance of SDK provider.","description-1#Description":"Creates an SDK instance by a given provider URL or network name.","code-example#Code example":"using AnkrSDK.Data;\nusing AnkrSDK.Provider;\nusing UnityEngine;\n\npublic class CreateSDKExample : MonoBehaviour\n{\nprivate void Start()\n{\nvar ankrSDKByProvider = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n// or\nvar ankrSDKByNetwork = AnkrSDKFactory.GetAnkrSDKInstance(NetworkName.Ethereum);\n}\n}","getankrsdkinstance#GetAnkrSDKInstance":"","declaration#Declaration":"IAnkrSDK GetAnkrSDKInstance(string providerURI)orIAnkrSDK GetAnkrSDKInstance(NetworkName networkName)","parameters#Parameters":"Parameter\tDescription\tproviderURI\tA string containing an RPC endpoint.","ankrsdkwrapper#AnkrSDKWrapper":"","description-2#Description":"AnkrSDKWrapper provides support for all platform-dependent features. Implements IAnkrSDK.","parameters-1#Parameters":"Parameter\tDescription\tNetworkHelper\tProvides an INetworkHelper instance.\tEth\tProvides an IEthHandler instance.","public-methods#Public methods":"Method\tDescription\tGetContract\tMakes an instance of a contract to interact with a smart contract.\tCreateSubscriber\tMakes subscribers for the real-time contract event subscriptions.\tDisconnect\tCloses a connection with the wallet.","getcontract#GetContract":"","declaration-1#Declaration":"IContract GetContract(string contractAddress, string contractABI)","parameters-2#Parameters":"Parameter\tDescription\tcontractAddress\tA string containing a contract address.\tcontractABI\tA string containing an application binary interface (ABI) of a contract.","returns-1#Returns":"Parameter\tDescription\tIContract\tReturns an instance of Contract class.","description-3#Description":"Provides an instance of a contract with a platform-dependant provider.","code-example-1#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing UnityEngine;\n\npublic class ContractExample : MonoBehaviour\n{\nprivate IContract _contract;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_contract = ankrSDK.GetContract(\"0x...\",\"...\");\n}\n}","createsubscriber#CreateSubscriber":"","declaration-2#Declaration":"IContractEventSubscriber CreateSubscriber(string wsUrl)","parameters-3#Parameters":"Parameter\tDescription\twsUrl\tA string containing an RPC WebSocket endpoint.","returns-2#Returns":"Parameter\tDescription\tIContractEventSubscriber\tReturns an instance of subscriber class.","description-4#Description":"Provides an instance of subscriber to make contract event subscriptions. See more on Events and subscriptions.","code-example-2#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Data;\nusing AnkrSDK.DTO;\nusing AnkrSDK.Examples.ERC20Example;\nusing AnkrSDK.Provider;\nusing AnkrSDK.UseCases;\nusing Cysharp.Threading.Tasks;\nusing UnityEngine;\n\nnamespace AnkrSDK.EventListenerExample\n{\npublic class EventListenerExample : UseCase\n{\nprivate IContractEventSubscriber _eventSubscriber;\nprivate IContractEventSubscription _subscription;\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(ERC20ContractInformation.HttpProviderURL);\n_eth = ankrSDK.Eth;\n\n_eventSubscriber = ankrSDK.CreateSubscriber(ERC20ContractInformation.WsProviderURL);\n_eventSubscriber.ListenForEvents().Forget();\n_eventSubscriber.OnOpenHandler += UniTask.Action(SubscribeWithRequest);\n}\n\n// If you know topic position then you can use EventFilterData\npublic async UniTaskVoid SubscribeWithTopics()\n{\nvar filters = new EventFilterData\n{\nFilterTopic2 = new object[] { await _eth.GetDefaultAccount() }\n};\n\n_subscription = await _eventSubscriber.Subscribe(\nfilters,\nERC20ContractInformation.ContractAddress,\n(TransferEventDTO t) => ReceiveEvent(t)\n);\n}\n\n// If you know only topic name then you can use EventFilterRequest\npublic async UniTaskVoid SubscribeWithRequest()\n{\nvar filtersRequest = new EventFilterRequest<TransferEventDTO>();\nfiltersRequest.AddTopic(\"To\", await _eth.GetDefaultAccount());\n\n_subscription = await _eventSubscriber.Subscribe(\nfiltersRequest,\nERC20ContractInformation.ContractAddress,\nReceiveEvent\n);\n}\n\nprivate void ReceiveEvent(TransferEventDTO contractEvent)\n{\nDebug.Log($\"{contractEvent.From} - {contractEvent.To} - {contractEvent.Value}\");\n}\n\npublic void Unsubscribe()\n{\n_eventSubscriber.Unsubscribe(_subscription.SubscriptionId).Forget();\n}\n\nprivate void OnDestroy()\n{\n_eventSubscriber.StopListen();\n}\n}\n}","disconnect#Disconnect":"","declaration-3#Declaration":"UniTask Disconnect(bool waitForNewSession)","parameters-4#Parameters":"Parameter\tDescription\twaitForNewSession\tIf true (by default), a connection will be reestablished after disconnect. If false, connection will be closed immediately.","description-5#Description":"Removes a wallet connection.","code-example-3#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing UnityEngine;\n\npublic class DisconnectExample : MonoBehaviour\n{\nprivate IAnkrSDK _sdk;\n\nprivate void Start()\n{\n_sdk = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n}\n\nprivate void OnDisable()\n{\n_sdk.Disconnect(false);\n}\n}","ethhandler#EthHandler":"","description-6#Description":"A class containing the methods for making transactions, estimating transactions fee, and getting data on that.","public-methods-1#Public methods":"Method\tDescription\tGetDefaultAccount\tReturns the address of the account currently logged in via the third-party wallet.\tGetBalance\tGet the balance of an address.\tGetBlockNumber\tReturns the current block number.\tGetTransaction\tReturns a Transaction from the given transaction hash.\tGetTransactionReceipt\tReturns a TransactionReceipt for the given transaction hash.\tGetTransactionCount\tGet the number of transactions in a given block.\tGetBlockWithTransactions\tReturns a block with transactions matching the block number or block hash.\tGetBlockWithTransactionsHashes\tReturns a block with transactions hashes matching the block number or block hash.\tEstimateGas\tReturns the estimated gas cost.\tSign\tSigns data using a specific account address.\tSendTransaction\tSends a transaction to the network.","getdefaultaccount#GetDefaultAccount":"","declaration-4#Declaration":"Task<string> GetDefaultAccount()","returns-3#Returns":"Parameter\tDescription\tstring\tA string containing an account address.","description-7#Description":"The method returns address that your wallet provided. There is no way to change it from SDK because it has a pair private key stored in your wallet. To change a default address, open your wallet and change it manually.","code-example-4#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing Cysharp.Threading.Tasks;\nusing UnityEngine;\n\npublic class GetAddressExample : MonoBehaviour\n{\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async UniTaskVoid GetAddress()\n{\nvar address = await _eth.GetDefaultAccount();\n}\n}","getbalance#GetBalance":"","declaration-5#Declaration":"Task<BigInteger> GetBalance(string address)","parameters-5#Parameters":"Parameter\tDescription\taddress\tAn account address. The method returns the default account's balance if the parameter hasn't been given.","returns-4#Returns":"Parameter\tDescription\tBigInteger\tAn account balance in WEI.","description-8#Description":"Gets an address's balance in ETH currency.The method returns balance info in WEI units. To convert balance into other units, use Web3.Convert.To find more info on the currency units, have a look at the Currency Units section.","code-example-5#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing Nethereum.Util;\nusing Nethereum.Web3;\nusing UnityEngine;\n\nnamespace DefaultNamespace\n{\npublic class GetBalanceExample : MonoBehaviour\n{\nprivate IAnkrSDK _ankrSDKWrapper;\n\nprivate void Start()\n{\n_ankrSDKWrapper = AnkrSDKFactory.GetAnkrSDKInstance(\"https://...\");\n}\n\npublic async void GetBalance()\n{\nvar balanceInWei = await _ankrSDKWrapper.Eth.GetBalance();\nvar etherAmount = Web3.Convert.FromWei(balanceInWei);\nvar gweiAmount = Web3.Convert.FromWei(balanceInWei, UnitConversion.EthUnit.Gwei);\n}\n}\n}","getblocknumber#GetBlockNumber":"","declaration-6#Declaration":"Task<BigInteger> GetBlockNumber()","returns-5#Returns":"Parameter\tDescription\tBigInteger\tReturns a number of the latest block.","description-9#Description":"Returns a current block number.","code-example-6#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing Nethereum.Util;\nusing Nethereum.Web3;\nusing UnityEngine;\n\nnamespace DefaultNamespace\n{\npublic class GetBlockNumberExample : MonoBehaviour\n{\nprivate IAnkrSDK _ankrSDKWrapper;\n\nprivate void Start()\n{\n_ankrSDKWrapper = AnkrSDKFactory.GetAnkrSDKInstance(\"https://...\");\n}\n\npublic async void GetBalance()\n{\nvar currentBlock = await _ankrSDKWrapper.Eth.GetBlockNumber();\n}\n}\n}","gettransaction#GetTransaction":"","declaration-7#Declaration":"Task<Transaction> GetTransaction(string transactionReceipt)","parameters-6#Parameters":"Parameter\tDescription\ttransactionReceipt\tA string containing a hash of transaction.","returns-6#Returns":"Parameter\tDescription\tTransaction\tReturns a transaction object.","description-10#Description":"Returns a transaction matching the given transaction hash.","code-example-7#Code example":"using System;\nusing AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing UnityEngine;\n\npublic class ContractExample : MonoBehaviour\n{\nprivate IContract _contract;\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_contract = ankrSDK.GetContract(\"0x...\",\"...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async void Call()\n{\nvar transactionHash = await _contract.CallMethod(\"yourMethodName\", Array.Empty<object>());\n\nvar trx = await _eth.GetTransaction(transactionHash);\n\nDebug.Log($\"Nonce: {trx.Nonce}\");\n}\n}","gettransactionreceipt#GetTransactionReceipt":"","declaration-8#Declaration":"Task<TransactionReceipt> GetTransactionReceipt(string transactionHash)","parameters-7#Parameters":"Parameter\tDescription\ttransactionHash\tA string containing a transaction's hash.","returns-7#Returns":"Parameter\tDescription\tTransactionReceipt\tA transaction receipt object.","description-11#Description":"Returns the receipt of a transaction by transaction hash. Method resolves when transaction will is mined.","how-to-get-contract-events-from-receipt#How to get contract events from receipt":"If contract method that you called emit event you can get it from TransactionReceipt on ReceiptReceived stage. But first you need to create a DTO corresponding to contract event.\npublic void HandleReceipt(object sender, TransactionReceipt receipt)\n{\nvar transferEventOutput = receipt.DecodeAllEvents<DTO>();\ntransferEventOutput[0].Event./// Get all data what you need\n}","code-example-8#Code example":"using System;\nusing AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing UnityEngine;\n\npublic class ContractExample : MonoBehaviour\n{\nprivate IContract _contract;\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_contract = ankrSDK.GetContract(\"0x...\",\"...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async void Call()\n{\nvar successsStatus = 1;\nvar transactionHash = await _contract.CallMethod(\"yourMethodName\", Array.Empty<object>());\n\nvar receipt = await _eth.GetTransactionReceipt(transactionHash);\n\nif (receipt.Status.Value.Equals(successsStatus))\n{\nDebug.Log(\"Transaction was successful\");\n}\nelse\n{\nDebug.Log(\"Transaction has failed\");\n}\n}\n}","gettransactioncount#GetTransactionCount":"","declaration-9#Declaration":"Task<BigInteger> GetTransactionCount(string hash)orTask<BigInteger> GetTransactionCount(BlockParameter block)","parameters-8#Parameters":"Parameter\tDescription\thash\tA string containing a block hash.\tblock\tA BlockParameter that can be either a number of blocks or the earliest, latest, or pending options.","returns-8#Returns":"Parameter\tDescription\tBigInteger\tA number of transactions in the given block.","description-12#Description":"Gets a number of transactions on the given block.","code-example-9#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing Nethereum.RPC.Eth.DTOs;\nusing UnityEngine;\n\nnamespace DefaultNamespace\n{\npublic class GetTransactionCountExample : MonoBehaviour\n{\nprivate IAnkrSDK _ankrSDKWrapper;\n\nprivate void Start()\n{\n_ankrSDKWrapper = AnkrSDKFactory.GetAnkrSDKInstance(\"https://...\");\n}\n\npublic async void GetBalance()\n{\nvar blockHash = \"0x...\";\nulong blockNumber = 99999;\n\nvar blockTransactionsCountByHash = await _ankrSDKWrapper.Eth.GetTransactionCount(blockHash);\nvar latestBlockTransactionsCount = await _ankrSDKWrapper.Eth.GetTransactionCount(BlockParameter.CreateLatest());\nvar blockTransactionsCountByNumber = await _ankrSDKWrapper.Eth.GetTransactionCount(new BlockParameter(blockNumber));\n}\n}\n}","getblockwithtransactions#GetBlockWithTransactions":"","declaration-10#Declaration":"Task<BlockWithTransactions> GetBlockWithTransactions(string hash)orTask<BlockWithTransactions> GetBlockWithTransactions(BlockParameter block)","parameters-9#Parameters":"Parameter\tDescription\thash\tA string containing a block's hash.\nor\nParameter\tDescription\tblock\tA BlockParameter that can be either a number of blocks or the earliest, latest, or pending options.","returns-9#Returns":"Parameter\tDescription\tBlockWithTransactions\tA block object containing transactions objects.","code-sample#Code sample":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing Nethereum.RPC.Eth.DTOs;\nusing UnityEngine;\n\nnamespace DefaultNamespace\n{\npublic class GetBlockWithTransactionsExample : MonoBehaviour\n{\nprivate IAnkrSDK _ankrSDKWrapper;\n\nprivate void Start()\n{\n_ankrSDKWrapper = AnkrSDKFactory.GetAnkrSDKInstance(\"https://...\");\n}\n\npublic async void GetBalance()\n{\nvar blockHash = \"0x...\";\nulong blockNumber = 99999;\n\nvar blockByHash = await _ankrSDKWrapper.Eth.GetBlockWithTransactions(blockHash);\nvar latestBlock = await _ankrSDKWrapper.Eth.GetBlockWithTransactions(BlockParameter.CreateLatest());\nvar blockByNumber = await _ankrSDKWrapper.Eth.GetBlockWithTransactions(new BlockParameter(blockNumber));\n}\n}\n}","getblockwithtransactionshashes#GetBlockWithTransactionsHashes":"","declaration-11#Declaration":"Task<BlockWithTransactionHashes> GetBlockWithTransactionsHashes(string hash)orTask<BlockWithTransactionHashes> GetBlockWithTransactionsHashes(BlockParameter block)","parameters-10#Parameters":"Parameter\tDescription\thash\tA string containing the block hash.\nor\nParameter\tDescription\tblock\tA BlockParameter that can be either a number of blocks or the earliest, latest, or pending options.","returns-10#Returns":"Parameter\tDescription\tBlockWithTransactionHashes\tA block object containing transactions hashes.","description-13#Description":"Returns a block matching a block number or block hash.","code-example-10#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing Nethereum.RPC.Eth.DTOs;\nusing UnityEngine;\n\nnamespace DefaultNamespace\n{\npublic class GetBlockWithTransactionsHashesExample : MonoBehaviour\n{\nprivate IAnkrSDK _ankrSDKWrapper;\n\nprivate void Start()\n{\n_ankrSDKWrapper = AnkrSDKFactory.GetAnkrSDKInstance(\"https://...\");\n}\n\npublic async void GetBalance()\n{\nvar blockHash = \"0x...\";\nulong blockNumber = 99999;\n\nvar blockByHash = await _ankrSDKWrapper.Eth.GetBlockWithTransactionsHashes(blockHash);\nvar latestBlock = await _ankrSDKWrapper.Eth.GetBlockWithTransactionsHashes(BlockParameter.CreateLatest());\nvar blockByNumber = await _ankrSDKWrapper.Eth.GetBlockWithTransactionsHashes(new BlockParameter(blockNumber));\n}\n}\n}","estimategas-2#EstimateGas 2":"","declaration-12#Declaration":"Task<HexBigInteger> EstimateGas(string from, string to, string data, string value, string gas, string gasPrice, string nonce)orTask<HexBigInteger> EstimateGas(TransactionInput transactionInput)","parameters-11#Parameters":"Parameter\tDescription\tfrom\tAn address for the sending account.\tto\tThe destination address of the message.\tdata\tString containing the data of the function call on a contract. (optional)\tvalue\tThe value transferred for the transaction in wei. (optional)\tgas\tThe maximum gas provided for this call “transaction” (gas limit). (optional)\tgasPrice\tThe gas price in wei to use for this call “transaction”. (optional)\tnonce\tInteger of the nonce. This allows to overwrite your own pending transactions that use the same nonce. (optional)\nor\nParameter\tDescription\ttransactionInput\tAn object containing transaction parameters.","returns-11#Returns":"Parameter\tDescription\tHexBigInteger\tReturns the gas amount used for the simulated call/transaction.","description-14#Description":"Executes a message call or transaction and returns the amount of the gas used.","code-example-11#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing Cysharp.Threading.Tasks;\nusing UnityEngine;\n\npublic class EstimateGasExample : MonoBehaviour\n{\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async UniTaskVoid EstimateGas()\n{\nvar sender = \"0x...\";\nvar receiver = \"0x...\";\nvar value = \"1\"; // in Wei\nvar gas = await _eth.EstimateGas(sender, receiver, value: value);\n\n}\n}","sign#Sign":"","declaration-13#Declaration":"Task<string> Sign(string messageToSign, string address)","parameters-12#Parameters":"Parameter\tDescription\tmessageToSign\tA message that has to be signed.\taddress\tAn account address.","returns-12#Returns":"Parameter\tDescription\tstring\tA string containing a signature.","description-15#Description":"Signs the data using a specific account.","code-example-12#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing UnityEngine;\n\npublic class SignExample : MonoBehaviour\n{\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async void SignMessage()\n{\nvar address = await _eth.GetDefaultAccount();\n\nvar message = \"Hello world!\";\nvar signature = await _eth.Sign(message, address);\n\nDebug.Log($\"Signature: {signature}\");\n}\n}","sendtransaction#SendTransaction":"","declaration-14#Declaration":"Task<string> SendTransaction(string from, string to, string data, string value, string gas, string gasPrice, string nonce)","parameters-13#Parameters":"Parameter\tDescription\tfrom\tThe address for the sending account.\tto\tThe destination address of the message.\tdata\tString containing the data of the function call on a contract (optional).\tvalue\tThe value transferred for the transaction in wei (optional).\tgas\tThe maximum gas provided for this call “transaction” (gas limit) (optional).\tgasPrice\tThe gas price in wei to use for this call “transaction” (optional).\tnonce\tAn integer value of the nonce. Allows to overwrite your own pending transactions that use the same nonce. (optional)","returns-13#Returns":"Parameter\tDescription\tstring\tReturns a 32 bytes transaction hash.","description-16#Description":"Sends a transaction to the network.","code-example-13#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing Cysharp.Threading.Tasks;\nusing UnityEngine;\n\npublic class SendTransactionExample : MonoBehaviour\n{\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async UniTaskVoid SendTransaction()\n{\nvar sender = \"0x...\";\nvar receiver = \"0x...\";\nvar value = \"1\"; // in Wei\nvar trxHash = await _eth.SendTransaction(sender, receiver, value: value);\n}\n}","contract#Contract":"","description-17#Description":"A class containing the method to interact with smart contracts.","public-methods-2#Public methods":"Method\tDescription\tCallMethod\tSends a transaction using your currently active session. Creates a transaction input with provided parameters.\tWeb3SendMethod\tSame as the previous function above but with the added benefit of being able to use a TransactionEventHandler to have access via these events to feedback during the transaction process.\tGetEvents\tGets all events from the contract that match the specified filter requirements.\tGetData\tGets data from non-payable contract methods, fields, and mappings.\tEstimateGas\tReturns the estimated gas for calling a smart contract method with the given parameters.","callmethod#CallMethod":"","declaration-15#Declaration":"Task<string> CallMethod(string methodName, object[] arguments, string gas, string gasPrice, string nonce)","parameters-14#Parameters":"Parameter\tDescription\tmethodName\tA string containing a contract method name according to ABI.\targuments\tArguments that take contract method according to ABI.\tgas\tThe maximum gas provided for this call “transaction” (gas limit).\tgasPrice\tThe gas price in WEI to use for this call “transaction”.\tnonce\tA nonce number of the transaction.","returns-14#Returns":"Parameter\tDescription\tstring\tA hash of the transaction.","description-18#Description":":::warning\nUse only for methods that change a smart contract state. To return a contract state, contract field, and mappings, use GetData. To find out more on the difference between contract methods, see Gas fees and gas-free methods.\n:::Makes a call to the contract method, and returns a transaction hash when that call applies to work. This method is asynchronous.","how-to-speed-up-a-transaction#How to speed up a transaction":"If you'd like to speed up a call that has already been applied to work but still hasn't been mined, you need to do the following:\nGet a nonce of the mining transaction (using GetTransaction).\nCall the method with the same arguments but set the nonce to the value you've received in Step 1.","code-example-14#Code example":"using System;\nusing AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing UnityEngine;\n\npublic class ContractExample : MonoBehaviour\n{\nprivate IContract _contract;\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_contract = ankrSDK.GetContract(\"0x...\",\"...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async void Call()\n{\nvar transactionHash = await _contract.CallMethod(\"yourMethodName\", Array.Empty<object>());\n\nvar trx = await _eth.GetTransaction(transactionHash);\n\nDebug.Log($\"Nonce: {trx.Nonce}\");\n}\n}","web3sendmethod#Web3SendMethod":"","declaration-16#Declaration":"Task Web3SendMethod(string methodName, object[] arguments, ITransactionEventHandler evController, string gas, string gasPrice, string nonce)","parameters-15#Parameters":"Parameter\tDescription\tmethodName\tA string containing a contract method name according to the ABI.\targuments\tArguments that take contract method according to the ABI.\tevController\tAnd implementation instance of the ITransactionEventHandler interface.\tgas\tThe maximum gas provided for this call “transaction” (gas limit).\tgasPrice\tThe gas price in WEI to use for this call “transaction”.\tnonce\tA nonce number of a transaction.","returns-15#Returns":"The method returns nothing specific, but instead it returns various values on various stages of a contract method execution:\nParameter\tDescription\tTransactionSendBegin\tReturns TransactionInput.\tTransactionSendEnd\tReturns TransactionInput.\tTransactionHashReceived\tReturns a string.\tErrorReceived\tReturns an Exception.\tReceiptReceived\tReturns a TransactionReceipt.","description-19#Description":":::warning\nUse only for methods that change a smart contract state. Use GetData for methods that return contract state, contract field, and mappings. To get more about difference between contract method please read the article.\n:::In contrast with CallMethod, this method provides the handlers for all the transaction lifecycle stages. To work with that method you need to implement the ITransactionEventHandler interface. The following implementation works with EventHandler to provide the most flexible experience to work with a transaction lifecycle.\nusing System;\nusing AnkrSDK.Core.Infrastructure;\nusing Nethereum.RPC.Eth.DTOs;\n\npublic class TransactionEventDelegator : ITransactionEventHandler\n{\npublic event EventHandler<TransactionInput> OnTransactionSendBegin;\npublic event EventHandler<TransactionInput> OnTransactionSendEnd;\npublic event EventHandler<string> OnTransactionHashReceived;\npublic event EventHandler<TransactionReceipt> OnReceiptReceived;\npublic event EventHandler<Exception> OnError;\n\npublic void TransactionSendBegin(TransactionInput transactionInput)\n{\nOnTransactionSendBegin?.Invoke(this, transactionInput);\n}\n\npublic void TransactionSendEnd(TransactionInput transactionInput)\n{\nOnTransactionSendEnd?.Invoke(this, transactionInput);\n}\n\npublic void TransactionHashReceived(string transactionHash)\n{\nOnTransactionHashReceived?.Invoke(this, transactionHash);\n}\n\npublic void ErrorReceived(Exception exception)\n{\nOnError?.Invoke(this, exception);\n}\n\npublic void ReceiptReceived(TransactionReceipt receipt)\n{\nOnReceiptReceived?.Invoke(this, receipt);\n}\n}\nLet’s look at all the methods and how they relate to a transaction lifecycle:\nTransactionSendBegin is called before sending a transaction.\nTransactionSendEnd is called when a transaction has been sent to an Ethereum node.\nTransactionHashReceived is called when a transaction has been applied to mining.\nErrorReceived is called when a user or the Ethereum node has rejected a transaction.\nReceiptReceived is called when a transaction has been mined.\n\n\nusing System;\nusing AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.EventListenerExample;\nusing AnkrSDK.Provider;\nusing AnkrSDK.UseCases;\nusing Nethereum.RPC.Eth.DTOs;\nusing UnityEngine;\n\npublic class ERC20Example : UseCase\n{\nprivate IContract _contract;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_contract = ankrSDK.GetContract(\"0x...\",\"...\");\n}\n\npublic void SendMint()\n{\nvar evController = new TransactionEventDelegator();\nevController.OnTransactionSendBegin += HandleSending;\nevController.OnTransactionSendEnd += HandleSent;\nevController.OnTransactionHashReceived += HandleTransactionHash;\nevController.OnReceiptReceived += HandleReceipt;\nevController.OnError += HandleError;\n\n_contract.Web3SendMethod(\"yourMethodName\", Array.Empty<object>(), evController);\n}\n\nprivate static void HandleSent(object sender, TransactionInput transaction)\n{\nDebug.Log(\"Transaction sent\");\n}\n\nprivate static void HandleSending(object sender, TransactionInput transaction)\n{\nDebug.Log(\"Transaction is sending\");\n}\n\nprivate static void HandleTransactionHash(object sender, string transactionHash)\n{\nDebug.Log($\"TransactionHash: {transactionHash}\");\n}\n\nprivate static void HandleError(object sender, Exception exception)\n{\nDebug.LogError(\"Error: \" + exception.Message);\n}\n\nprivate static void HandleReceipt(object sender, TransactionReceipt receipt)\n{\nDebug.Log(\"Receipt: \" + receipt.Status);\n}\n}\nTo find out more on getting a transaction status or event, take a look at GetTransactionReceipt.","cant-receive-a-receipt#Can't receive a receipt?":"Pay attention to the gas you use for a transaction. If your gas value will be lover than the average in a network, then the time to mine a transaction can be undetermined. If you are not sure if you're using enough gas:\nAdd an event emitting to the contract method.\nUse subscribe to events.","getevents#GetEvents":"","declaration-17#Declaration":"Task<List<EventLog<TEvDto>>> GetEvents<TEvDto>(EventFilterRequest<TEvDto> evFilter)orTask<List<EventLog<TEvDto>>> GetEvents<TEvDto>(EventFilterData evFilter)","parameters-16#Parameters":"Parameter\tDescription\tevFilter\tAn object containing an event request.","returns-16#Returns":"Parameter\tDescription\tList<EventLog<TEvDto>>\tReturns all the events complying with the request.","description-20#Description":"Gets a contract's past events.Find out more on events and events requests in Events and subscriptions.\nusing AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Data;\nusing AnkrSDK.DTO;\nusing AnkrSDK.Examples.ERC20Example;\nusing AnkrSDK.Provider;\nusing AnkrSDK.UseCases;\nusing Cysharp.Threading.Tasks;\nusing Nethereum.RPC.Eth.DTOs;\nusing UnityEngine;\n\npublic class ContractExample : MonoBehaviour\n{\nprivate IContract _contract;\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_contract = ankrSDK.GetContract(\"0x...\",\"...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async UniTaskVoid GetEvents()\n{\nvar filtersRequest = new EventFilterRequest<TransferEventDTO>\n{\nFromBlock = BlockParameter.CreateEarliest(),\nToBlock = BlockParameter.CreateLatest()\n};\nfiltersRequest.AddTopic(\"To\", await _eth.GetDefaultAccount());\n\nvar events = await _contract.GetEvents(filtersRequest);\n\nforeach (var ev in events)\n{\nDebug.Log(ev.Event.Value);\n}\n}\n}","getdata#GetData":"","declaration-18#Declaration":"Task<TReturnType> GetData<TFieldData, TReturnType>(TFieldData requestData)","parameters-17#Parameters":"Parameter\tDescription\trequestData\tAn object containing the arguments that take the contract method.","returns-17#Returns":"Parameter\tDescription\tTReturnType\tData from a contract's method, field, or mapping.","description-21#Description":":::warning\nUse only for methods that return data, contract fields, and mappings. To change a contract state, use CallMethod or Web3SendMethod. To find out more on the difference between contract methods please, have a look at Gas fees and gas-free methods.\n:::The method allows getting contract states from the contract methods, fields, and mappings.To make data request you need to prepare TFieldData DTO to make request objects with arguments that take the contract method. When you request data from the contract field, you don’t need to make any fields in that DTO.Let’s take a look at how the contract method corresponds to the TFieldData DTO. As an example method, let's take a look at balanceOf from the ERC721 contract.\nfunction balanceOf(address owner) public view virtual override returns (uint256) {\n...\n}\nThe function name is balanceOf, it takes the owner argument of the address type, and returns a uint256 value.The same information you can get from the ABI:\n...\n{\n\"constant\": true,\n\"inputs\": [\n{\n\"internalType\": \"address\",\n\"name\": \"owner\",\n\"type\": \"address\"\n}\n],\n\"name\": \"balanceOf\",\n\"outputs\": [\n{\n\"internalType\": \"uint256\",\n\"name\": \"\",\n\"type\": \"uint256\"\n}\n],\n\"payable\": false,\n\"stateMutability\": \"view\",\n\"type\": \"function\"\n}\n...\nThen the DTO will look as follows:\nusing Nethereum.ABI.FunctionEncoding.Attributes;\nusing Nethereum.Contracts;\n\n[Function(\"balanceOf\", \"uint256\")]\npublic class BalanceOfMessage : FunctionMessage\n{\n[Parameter(\"address\", \"_owner\", 1)]\npublic string Owner { get; set; }\n}\nPay attention that DTO should extend FunctionMessage.To find out more information on how to convert Solidity types to C# types, take a look at C# and Solidity comparison.When a TFieldData DTO is prepared, we can request data.\nusing System.Numerics;\nusing AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Data.ContractMessages.ERC721;\nusing AnkrSDK.Provider;\nusing Cysharp.Threading.Tasks;\nusing UnityEngine;\n\npublic class ContractExample : MonoBehaviour\n{\nprivate IContract _contract;\nprivate IEthHandler _eth;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_contract = ankrSDK.GetContract(\"0x...\", \"...\");\n_eth = ankrSDK.Eth;\n}\n\npublic async UniTaskVoid GetBalance()\n{\nvar balanceOfMessage = new BalanceOfMessage\n{\nOwner = await _eth.GetDefaultAccount()\n};\nvar balance = await _contract.GetData<BalanceOfMessage, BigInteger>(balanceOfMessage);\nDebug.Log($\"Balance: {balance}\");\n}\n}","estimategas#EstimateGas":"","declaration-19#Declaration":"UniTask<HexBigInteger> EstimateGas(string methodName, object[] arguments, string gas, string gasPrice, string nonce)","parameters-18#Parameters":"Parameter\tDescription\tmethodName\tA string with contract method name according to ABI.\targuments\tArguments that take contract method according to ABI.\tgas\tThe maximum gas provided for this call “transaction” (gas limit).\tgasPrice\tThe gas price in wei to use for this call “transaction”.\tnonce\tThe nonce number of a transaction.","returns-18#Returns":"Parameter\tDescription\tHexBigInteger\tA gas estimation for a transaction.","description-22#Description":":::warning\nUse only for the contract methods that change a smart contract state. To find out more on the difference between the contract methods, have a look at Gas fee and gas-free methods.\n:::Requests a gas estimation for a contract method call.","code-example-15#Code example":"using System;\nusing System.Numerics;\nusing AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Provider;\nusing AnkrSDK.UseCases;\nusing Cysharp.Threading.Tasks;\nusing UnityEngine;\n\npublic class ContractExample : MonoBehaviour\n{\nprivate IContract _contract;\n\nprivate void Start()\n{\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"http://...\");\n_contract = ankrSDK.GetContract(\"0x...\", \"...\");\n}\n\npublic async UniTaskVoid CallMint()\n{\nvar method = \"yourMethodName\";\nvar arguments = Array.Empty<object>();\nvar additionalGas = 100;\n\nvar gasEstimation = await _contract.EstimateGas(method, arguments);\nvar gas = gasEstimation.Value + new BigInteger(additionalGas);\nvar receipt = await _contract.CallMethod(method, arguments, gas: gas.ToString());\n\nDebug.Log($\"Receipt: {receipt}\");\n}\n}","contracteventsubscriber#ContractEventSubscriber":"","description-23#Description":"A class contains methods for making real-time subscriptions for contracts' events.","constructors#Constructors":"Component\tDescription\tContractEventSubscriber\tConstructs a new ContractEventSubscriber.","parameters-19#Parameters":"Parameter\tDescription\tRequestHeaders\tA dictionary of specific headers.","events#Events":"Event\tDescription\tOnOpenHandler\tFires when a connection to a node opens\tOnErrorHandler\tFires when a connection fails.\tOnCloseHandler\tFires when a connection closes.","public-methods-3#Public methods":"Method\tDescription\tSubscribe\tSubscribes to an event with the given parameters.\tListenForEvents\tOpens a connection to a node and starts listening for events.\tUnsubscribe\tUnsubscribes from events by a subscription ID.\tStopListen\tCloses a connection to a node.","code-example-16#Code example":"using AnkrSDK.Core.Infrastructure;\nusing AnkrSDK.Data;\nusing AnkrSDK.DTO;\nusing AnkrSDK.Examples.ERC20Example;\nusing AnkrSDK.Provider;\nusing AnkrSDK.UseCases;\nusing Cysharp.Threading.Tasks;\nusing UnityEngine;\n\nnamespace AnkrSDK.EventListenerExample\n{\npublic class EventListenerExample : UseCase\n{\nprivate IContractEventSubscriber _eventSubscriber;\nprivate IContractEventSubscription _subscription;\nprivate IEthHandler _eth;\n\npublic override void ActivateUseCase()\n{\nbase.ActivateUseCase();\n\n\nvar ankrSDK = AnkrSDKFactory.GetAnkrSDKInstance(\"https://\");\n_eth = ankrSDK.Eth;\n\n_eventSubscriber = ankrSDK.CreateSubscriber(\"wss://\");\n_eventSubscriber.ListenForEvents().Forget();\n_eventSubscriber.OnOpenHandler += UniTask.Action(SubscribeWithRequest);\n}\n\n// If you know topic position then you can use EventFilterData\npublic async UniTaskVoid SubscribeWithTopics()\n{\nvar filters = new EventFilterData\n{\nFilterTopic2 = new object[] { await _eth.GetDefaultAccount() }\n};\n\n_subscription = await _eventSubscriber.Subscribe(\nfilters,\nERC20ContractInformation.ContractAddress,\n(TransferEventDTO t) => ReceiveEvent(t)\n);\n}\n\n// If you know only topic name then you can use EventFilterRequest\npublic async UniTaskVoid SubscribeWithRequest()\n{\nvar filtersRequest = new EventFilterRequest<TransferEventDTO>();\nfiltersRequest.AddTopic(\"To\", await _eth.GetDefaultAccount());\n\n_subscription = await _eventSubscriber.Subscribe(\nfiltersRequest,\nERC20ContractInformation.ContractAddress,\nReceiveEvent\n);\n}\n\nprivate void ReceiveEvent(TransferEventDTO contractEvent)\n{\nDebug.Log($\"{contractEvent.From} - {contractEvent.To} - {contractEvent.Value}\");\n}\n\npublic void Unsubscribe()\n{\n_eventSubscriber.Unsubscribe(_subscription.SubscriptionId).Forget();\n}\n\npublic override void DeActivateUseCase()\n{\nbase.DeActivateUseCase();\n_eventSubscriber.StopListen();\n}\n}\n}","constructor#Constructor":"","declaration-20#Declaration":"ContractEventSubscriber(string wsUrl)","parameters-20#Parameters":"Parameter\tDescription\twsUrl\tA string containing a WebSocket RPC endpoint.","subscribe#Subscribe":"","declaration-21#Declaration":"UniTask<IContractEventSubscription> Subscribe<TEventType>(EventFilterData evFilter, string contractAddress, Action<TEventType> handler)orUniTask<IContractEventSubscription> Subscribe<TEventType>(EventFilterRequest<TEventType> evFilter, string contractAddress, Action<TEventType> handler)","parameters-21#Parameters":"Parameter\tDescription\tevFilter\tAn object containing request parameters.\tcontractAddress\tAn address of the contract that emits events.\thandler\tAn action that handles received events.","returns-19#Returns":"Parameter\tDescription\tIContractEventSubscription\tA subscription object.","description-24#Description":"Subscribes to events with specific request parameters. Use it only to subscribe for events emitted after a subscription start, the method doesn’t return past events.To find out more info on events and subscriptions, have a look at Events and subscriptions.","code-example-17#Code example":"var filtersRequest = new EventFilterRequest<TransferEventDTO>();\nfiltersRequest.AddTopic(\"To\", await _eth.GetDefaultAccount());\n\nvar subscription = await _eventSubscriber.Subscribe(\nfiltersRequest,\n\"0x...\",\ncontractEvent => Debug.Log($\"{contractEvent.From} - {contractEvent.To} - {contractEvent.Value}\")\n);\nThe full code example lives here.","listenforevents#ListenForEvents":"","declaration-22#Declaration":"UniTask ListenForEvents()","description-25#Description":"Connects to a given endpoint and starts listening for events.","unsubscribe#Unsubscribe":"","declaration-23#Declaration":"UniTask Unsubscribe(string subscriptionId)","parameters-22#Parameters":"Parameter\tDescription\tsubscriptionId\tAn identifier of a subscription.","description-26#Description":"Unsubscribes from the events with a given identifier.","code-example-18#Code example":"var filtersRequest = new EventFilterRequest<TransferEventDTO>();\nfiltersRequest.AddTopic(\"To\", await _eth.GetDefaultAccount());\n\nvar subscription = await _eventSubscriber.Subscribe(\nfiltersRequest,\n\"0x...\",\ncontractEvent => Debug.Log($\"{contractEvent.From} - {contractEvent.To} - {contractEvent.Value}\")\n);\n\nawait _eventSubscriber.Unsubscribe(subscription.SubscriptionId);","stoplisten#StopListen":"","declaration-24#Declaration":"void StopListen()","description-27#Description":"Closes a WebSocket connection, unsubscribes from all subscriptions."}},"/build/chains/chains-v2-gnosis":{"title":"Gnosis","data":{"":"Gnosis Chain (Formerly the xDai Chain) provides stability, scalability and an extendable beacon chain framework.Development on Gnosis Chain is straightforward for Ethereum developers as it is an EVM compatible chain. Smart contracts can be written and deployed in the same way as for Ethereum just by setting a different RPC endpoint.Any contract that works on the Ethereum mainnet can be redeployed to the Gnosis chain. Transaction costs are minimized, and all fees and transactions are paid with a single token (xDai). Many tools supporting Ethereum development are compatible with Gnosis Chain.","quick-links#Quick links":"Gnosis ChainDocsGithub","connect-wallet#Connect wallet":"You can set up your MetaMask wallet to connect to Gnosis RPC. You can then perform transactions and interact with the network.","get-started#Get started":"Open your Metamask Extension and click the 'Network' drop down menu at the top.\nSelect 'Custom RPC'\nEnter the settings below:\n\n\nChain\tCustom RPC Category\tDetails\tGnosis\tNETWORK NAME:\tGnosis RPC\t\tNEW RPC URL:\thttps://rpc.ankr.com/gnosis\t\tCHAIN ID:\t0x64\t\tSYMBOL:\txDai\t\tBLOCK EXPLORER:\thttps://blockscout.com/xdai/mainnet/","integrate-code#Integrate code":":::tipGnosis supports standard JSON RPC calls:::","gnosis#Gnosis":"","web3-library#web3 library":"clientVersion\n\nReturns the current client version.","example-request#Example request":"curl https://rpc.ankr.com/gnosis \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":1}'","example-response#Example response":"{\"jsonrpc\":\"2.0\",\"result\":\"OpenEthereum//v3.3.0-rc.15-stable-88eb7d325-20211104/x86_64-linux-gnu/rustc1.48.0\",\"id\":1}","net-library#net library":"net_version\n\nReturns the current network id.","example-request-1#Example request":"curl https://rpc.ankr.com/gnosis \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}'","example-response-1#Example response":"{\"jsonrpc\":\"2.0\",\"result\":\"100\",\"id\":67}","eth-library#eth library":"","example-request-2#Example request":"eth_estimateGasReturns the gas price for the transaction in hex.\n\ncurl https://rpc.ankr.com/gnosis \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\n\"jsonrpc\":\"2.0\",\n\"method\":\"eth_estimateGas\",\n\"params\":[{\n\"from\": \"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\",\n\"to\": \"0xd3CdA913deB6f67967B99D67aCDFa1712C293601\",\n\"value\": \"0x186a0\"\n}],\n\"id\":1\n}'","example-response-2#Example response":"{\"jsonrpc\":\"2.0\",\"result\":\"0x5208\",\"id\":1}","integrate-code-1#Integrate code":":::caution Be aware!Gnosis RPC calls do not work with URLs that specify a Port Number.:::","web3#web3":"clientVersion\n\n\npackage main\n\nimport (\n\"fmt\"\n\"strings\"\n\"net/http\"\n\"io/ioutil\"\n)\n\nfunc main() {\n\nurl := \"http://rpc.ankr.com/gnosis\"\nmethod := \"POST\"\n\npayload := strings.NewReader(`{\n\"jsonrpc\":\"2.0\",\n\"method\":\"web3_clientVersion\",\n\"params\":[],\n\"id\":1\n}`)\n\nclient := &http.Client {\n}\nreq, err := http.NewRequest(method, url, payload)\n\nif err != nil {\nfmt.Println(err)\nreturn\n}\nreq.Header.Add(\"Content-Type\", \"application/json\")\n\nres, err := client.Do(req)\nif err != nil {\nfmt.Println(err)\nreturn\n}\ndefer res.Body.Close()\n\nbody, err := ioutil.ReadAll(res.Body)\nif err != nil {\nfmt.Println(err)\nreturn\n}\nfmt.Println(string(body))\n}"}},"/build/products/advanced-api-sdk/advanced-api-sdk-token-methods":{"title":"Token Methods","data":{"":"","ankr_getaccountbalance#ankr_getAccountBalance":"Gets balance of the account specified by request body parameters.","request#Request":"","parameters#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\nblockchain (string): A chain or a combination of chains to query:\nSingle chain: eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism.\nChains combination: [eth, polygon, bsc].\nAll chains: leave the value empty to query all the chains available.\n\n\npageSize (int32): a number of results you'd like to get.\npageToken (string): The token is provided at the end of the response body and can be referenced in the request to fetch the next page.\nwalletAddress (string): an account address to query for balance.\n\n\n\n\n\n\n{\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getAccountBalance\",\n\"params\": {\n\"blockchain\": [\n\"string\"\n],\n\"pageSize\": 0,\n\"pageToken\": \"string\",\n\"walletAddress\": \"string\"\n}\n}\n\n\n\nContent-Type: application/json\nX-API-KEY: {{KEY}}","response#Response":"Returns a balance for the account specified in request body parameters.","parameters-1#Parameters":"See the response parameters' data model in Swagger.","code-examples#Code Examples":"","request-1#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--header 'X-API-KEY: 22e282df02e47a6dc906c48db9830304e93e9f12bb74a179152c747c01d4e7b7' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getAccountBalance\",\n\"params\": {\n\"blockchain\": \"eth\",\n\"walletAddress\": \"0xfa9019df60d3c710d7d583b2d69e18d412257617\"\n},\n\"id\": 1\n}'","response-1#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"assets\": [\n{\n\"balance\": \"string\",\n\"balanceRawInteger\": \"string\",\n\"balanceUsd\": \"string\",\n\"blockchain\": \"string\",\n\"contractAddress\": \"string\",\n\"holderAddress\": \"string\",\n\"thumbnail\": \"string\",\n\"tokenDecimals\": 0,\n\"tokenName\": \"string\",\n\"tokenPrice\": \"string\",\n\"tokenSymbol\": \"string\",\n\"tokenType\": \"string\"\n}\n],\n\"nextPageToken\": \"string\",\n\"totalBalanceUsd\": \"string\"\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"totalBalanceUsd\": \"4915134435857.581297310767673907\",\n\"assets\": [\n{\n\"blockchain\": \"eth\",\n\"tokenName\": \"Amber Token\",\n\"tokenSymbol\": \"AMB\",\n\"tokenDecimals\": 18,\n\"tokenType\": \"ERC20\",\n\"contractAddress\": \"0x4dc3643dbc642b72c158e7f3d2ff232df61cb6ce\",\n\"holderAddress\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n\"balance\": \"0.0009\",\n\"balanceRawInteger\": \"900000000000000\",\n\"balanceUsd\": \"4915133942196.190757578196621746\",\n\"tokenPrice\": \"5461259935773545.286197996246384112\",\n\"thumbnail\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4DC3643DbC642b72C158E7F3d2ff232df61cb6CE/logo.png\"\n},\n{\n\"blockchain\": \"eth\",\n\"tokenName\": \"Tether USD\",\n\"tokenSymbol\": \"USDT\",\n\"tokenDecimals\": 6,\n\"tokenType\": \"ERC20\",\n\"contractAddress\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n\"holderAddress\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n\"balance\": \"181812.058733\",\n\"balanceRawInteger\": \"181812058733\",\n\"balanceUsd\": \"181812.058733\",\n\"tokenPrice\": \"1\",\n\"thumbnail\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png\"\n},\n{\n\"blockchain\": \"bsc\",\n\"tokenName\": \"Tether USD\",\n\"tokenSymbol\": \"USDT\",\n\"tokenDecimals\": 18,\n\"tokenType\": \"ERC20\",\n\"contractAddress\": \"0x55d398326f99059ff775485246999027b3197955\",\n\"holderAddress\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n\"balance\": \"169752.555225093619558572\",\n\"balanceRawInteger\": \"169752555225093619558572\",\n\"balanceUsd\": \"169752.555225093619558572\",\n\"tokenPrice\": \"1\",\n\"thumbnail\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/0x55d398326f99059fF775485246999027B3197955/logo.png\"\n},\n{\n\"blockchain\": \"bsc\",\n\"tokenName\": \"Space Protocol\",\n\"tokenSymbol\": \"SPL\",\n\"tokenDecimals\": 18,\n\"tokenType\": \"ERC20\",\n\"contractAddress\": \"0xfec6832ab7bea7d3db02472b64cb59cfc6f2c107\",\n\"holderAddress\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n\"balance\": \"500\",\n\"balanceRawInteger\": \"500000000000000000000\",\n\"balanceUsd\": \"0\",\n\"tokenPrice\": \"0\",\n\"thumbnail\": \"\"\n}\n]\n}\n}","ankr_getcurrencies#ankr_getCurrencies":"Gets the currencies available for the blockchain specified by request body parameters.","request-2#Request":"","parameters-2#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\nblockchain (string; required): either of the supported chains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getCurrencies\",\n\"params\": {\n\"blockchain\": \"eth\"\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json\nX-API-KEY: {{KEY}}","response-2#Response":"Returns the currencies and their metadata for the blockchain specified by request body parameters.","parameters-3#Parameters":"See the response parameters' data model in Swagger.","code-examples-1#Code Examples":"","request-3#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--header 'X-API-KEY: {{KEY}}' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getCurrencies\",\n\"params\": {\n\"blockchain\": \"eth\"\n},\n\"id\": 1\n}'","response-3#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"currencies\": [\n{\n\"address\": \"string\",\n\"blockchain\": \"string\",\n\"decimals\": 0,\n\"name\": \"string\",\n\"symbol\": \"string\",\n\"thumbnail\": \"string\"\n}\n]\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"currencies\": [\n{\n\"blockchain\": \"eth\",\n\"address\": \"0xf32122561d51e891b823dec2b42f644884c1cd91\",\n\"name\": \"DeFido\",\n\"decimals\": 9,\n\"symbol\": \"DEFIDO\",\n\"thumbnail\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/0x199F788DDb566B7eBB59bf35B36914F2aCdb33DE/logo.png\"\n},\n{\n\"blockchain\": \"eth\",\n\"address\": \"0x903d78ca7d892e4518586d0b64f418bd4ca9a82d\",\n\"name\": \"FK Coin\",\n\"decimals\": 18,\n\"symbol\": \"FK\",\n\"thumbnail\": \"https://assets.coingecko.com/coins/images/9801/large/logo.e944e891.png?1571918228\"\n},\n{\n\"blockchain\": \"eth\",\n\"address\": \"0xb1cd6e4153b2a390cf00a6556b0fc1458c4a5533\",\n\"name\": \"BNT Smart Token Relay\",\n\"decimals\": 18,\n\"symbol\": \"ETHBNT\",\n\"thumbnail\": \"https://assets.coingecko.com/coins/images/10664/large/ETHBNT_Relay.png?1581486882\"\n},\n{\n\"blockchain\": \"eth\",\n\"address\": \"0xd0c4bc1b89bbd105eecb7eba3f13e7648c0de38f\",\n\"name\": \"METAVERSE\",\n\"decimals\": 9,\n\"symbol\": \"META\",\n\"thumbnail\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/0xd0c4BC1B89BbD105EeCb7EBa3f13E7648c0De38F/logo.png\"\n},\n{\n\"blockchain\": \"eth\",\n\"address\": \"0x16b0a1a87ae8af5c792fabc429c4fe248834842b\",\n\"name\": \"Algory\",\n\"decimals\": 18,\n\"symbol\": \"ALG\",\n\"thumbnail\": \"https://assets.coingecko.com/coins/images/12231/large/logo-2.png?1605256312\"\n},\n{\n\"blockchain\": \"eth\",\n\"address\": \"0x26946ada5ecb57f3a1f91605050ce45c482c9eb1\",\n\"name\": \"BitcoinSoV\",\n\"decimals\": 8,\n\"symbol\": \"BSOV\",\n\"thumbnail\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x26946adA5eCb57f3A1F91605050Ce45c482C9Eb1/logo.png\"\n},\n{\n\"blockchain\": \"eth\",\n\"address\": \"0x5f236f062f16a9b19819c535127398df9a01d762\",\n\"name\": \"IPUX Token\",\n\"decimals\": 18,\n\"symbol\": \"IPUX\",\n\"thumbnail\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x5F236F062f16A9B19819c535127398dF9a01D762/logo.png\"\n},\n{\n\"blockchain\": \"eth\",\n\"address\": \"0xea7aa1edd21735a5ab05ee3e90869016191e274e\",\n\"name\": \"junca cash\",\n\"decimals\": 18,\n\"symbol\": \"JCC\",\n\"thumbnail\": \"https://assets.coingecko.com/coins/images/12889/large/junca.jpg?1603279160\"\n},\n{\n\"blockchain\": \"eth\",\n\"address\": \"0x13b02c8de71680e71f0820c996e4be43c2f57d15\",\n\"name\": \"Wrapped Mirror QQQ Token\",\n\"decimals\": 18,\n\"symbol\": \"mQQQ\",\n\"thumbnail\": \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x13B02c8dE71680e71F0820c996E4bE43c2F57d15/logo.png\"\n}\n]\n}\n}","ankr_gettokenprice#ankr_getTokenPrice":"Gets the price of the token specified by request body parameters.","request-4#Request":"","parameters-4#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\nblockchain (string; required): either of the supported chains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\ncontractAddress (string): a contract address of the tokens collection.\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getTokenPrice\",\n\"params\": {\n\"blockchain\": \"eth\",\n\"contractAddress\": \"0x990f341946A3fdB507aE7e52d17851B87168017c\"\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json\nX-API-KEY: {{KEY}}","response-4#Response":"Returns a USD price for the token specified by request body parameters.","parameters-5#Parameters":"See the response parameters' data model in Swagger.","code-examples-2#Code Examples":"","request-5#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--header 'X-API-KEY: {{KEY}}' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getTokenPrice\",\n\"params\": {\n\"blockchain\": \"eth\"\n},\n\"id\": 1\n}'","response-5#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"blockchain\": \"string\",\n\"contractAddress\": \"string\",\n\"usdPrice\": \"string\"\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"usdPrice\": \"1700.706696318613574431\",\n\"blockchain\": \"eth\"\n}\n}","ankr_gettokenholders#ankr_getTokenHolders":"Gets holders and the associated metadata for the tokens specified by request body parameters.","request-6#Request":"","parameters-6#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\nblockchain (string; required): either of the supported chains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\ncontractAddress (string): a contract address of the tokens collection.\npageSize (string): a number of results you'd like to get.\npageToken (string): a token is provided at the end of the response body and can be referenced in the request to fetch the next page.\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getTokenHolders\",\n\"params\": {\n\"blockchain\": \"eth\",\n\"contractAddress\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n\"pageSize\": 100\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json\nX-API-KEY: {{KEY}}","response-6#Response":"Returns holders, holders number, and holders metadata for the tokens specified by request body parameters.","parameters-7#Parameters":"See the response parameters' data model in Swagger.","code-examples-3#Code Examples":"","request-7#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--header 'X-API-KEY: {{KEY}} \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getTokenHolders\",\n\"params\": {\n\"blockchain\": \"bsc\",\n\"contractAddress\": \"0xf307910A4c7bbc79691fD374889b36d8531B08e3\",\n\"pageSize\": 3,\n\"pageToken\": \"4jQWQp56mXWuw2qPBV3PNcHc187va4ip31eF58pFGmXzRuz5nMM1KjV7Ykcr7fM5yJVQB8rgjp9cJXfwrX\"\n},\n\"id\": 1\n}'","response-7#Response":"{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"blockchain\": \"string\",\n\"contractAddress\": \"string\",\n\"holders\": [\n{\n\"balance\": \"string\",\n\"balanceRawInteger\": \"string\",\n\"holderAddress\": \"string\"\n}\n],\n\"holdersCount\": 0,\n\"nextPageToken\": \"string\",\n\"tokenDecimals\": 0\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"blockchain\": \"bsc\",\n\"contractAddress\": \"0xf307910a4c7bbc79691fd374889b36d8531b08e3\",\n\"tokenDecimals\": 18,\n\"holders\": [\n{\n\"holderAddress\": \"0x000000000081105ffd4392520dd13c4c70d95d19\",\n\"balance\": \"1.905460638097497318\",\n\"balanceRawInteger\": \"1905460638097497318\"\n},\n{\n\"holderAddress\": \"0x00000000008bef34003b59bed4c4c0f6f1543928\",\n\"balance\": \"0.000000000000000001\",\n\"balanceRawInteger\": \"1\"\n},\n{\n\"holderAddress\": \"0x0000000000a56e8a4c7fe801704809098b36f825\",\n\"balance\": \"0.000000000000000001\",\n\"balanceRawInteger\": \"1\"\n}\n],\n\"holdersCount\": 30370,\n\"nextPageToken\": \"4jQWQp56mXWuw2qPBV3PNcHc187va4ip31eF58pFGmXzRuz5nMM1KjV7YkdWZPVsubrETfAhkQbZD84gco\"\n}\n}","ankr_gettokenholderscount#ankr_getTokenHoldersCount":"Gets the number of holders for the tokens specified by request body parameters.","request-8#Request":"","parameters-8#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\nblockchain (string; required): either of the supported chains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\ncontractAddress (string): a contract address of the tokens collection.\npageSize (string): a number of results you'd like to get.\npageToken (string): a token is provided at the end of the response body and can be referenced in the request to fetch the next page.\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getTokenHoldersCount\",\n\"params\": {\n\"blockchain\": \"eth\",\n\"contractAddress\": \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n\"pageSize\": 10,\n\"pageToken\": \"\"\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json\nX-API-KEY: {{KEY}}","response-8#Response":"","parameters-9#Parameters":"See the response parameters' data model in Swagger.","code-examples-4#Code Examples":"","request-9#Request":"curl --location -g --request POST '{{URL}}' \\\n--header 'Content-Type: application/json' \\\n--header 'X-API-KEY: {{KEY}}' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getTokenHoldersCount\",\n\"params\": {\n\"blockchain\": \"eth\",\n\"contractAddress\": \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n\"pageSize\": 10,\n\"pageToken\": \"\"\n},\n\"id\": 1\n}'","response-9#Response":"{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"blockchain\": \"string\",\n\"contractAddress\": \"string\",\n\"holderCountHistory\": [\n{\n\"holderCount\": 0,\n\"lastUpdatedAt\": \"string\",\n\"totalAmount\": \"string\",\n\"totalAmountRawInteger\": \"string\"\n}\n],\n\"nextPageToken\": \"string\",\n\"tokenDecimals\": 0\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"blockchain\": \"eth\",\n\"contractAddress\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n\"tokenDecimals\": 6,\n\"holderCountHistory\": [\n{\n\"holderCount\": 4498953,\n\"totalAmount\": \"36819785005.419766\",\n\"totalAmountRawInteger\": \"36819785005419766\",\n\"lastUpdatedAt\": \"2022-07-29T05:41:21Z\"\n},\n{\n\"holderCount\": 4499645,\n\"totalAmount\": \"36816222245.175462\",\n\"totalAmountRawInteger\": \"36816222245175462\",\n\"lastUpdatedAt\": \"2022-07-28T05:22:56Z\"\n},\n{\n\"holderCount\": 4511556,\n\"totalAmount\": \"36760965103.328572\",\n\"totalAmountRawInteger\": \"36760965103328572\",\n\"lastUpdatedAt\": \"2022-07-27T05:22:39Z\"\n},\n{\n\"holderCount\": 4564306,\n\"totalAmount\": \"36817771914.224166\",\n\"totalAmountRawInteger\": \"36817771914224166\",\n\"lastUpdatedAt\": \"2022-07-26T05:22:03Z\"\n},\n{\n\"holderCount\": 4560820,\n\"totalAmount\": \"36815806116.708002\",\n\"totalAmountRawInteger\": \"36815806116708002\",\n\"lastUpdatedAt\": \"2022-07-25T05:22:45Z\"\n},\n{\n\"holderCount\": 4560328,\n\"totalAmount\": \"36814914728.545481\",\n\"totalAmountRawInteger\": \"36814914728545481\",\n\"lastUpdatedAt\": \"2022-07-24T05:21:31Z\"\n},\n{\n\"holderCount\": 4561735,\n\"totalAmount\": \"36814752262.427647\",\n\"totalAmountRawInteger\": \"36814752262427647\",\n\"lastUpdatedAt\": \"2022-07-23T05:19:24Z\"\n},\n{\n\"holderCount\": 4565903,\n\"totalAmount\": \"36815223206.771204\",\n\"totalAmountRawInteger\": \"36815223206771204\",\n\"lastUpdatedAt\": \"2022-07-22T05:27:27Z\"\n},\n{\n\"holderCount\": 4565069,\n\"totalAmount\": \"36815746244.132796\",\n\"totalAmountRawInteger\": \"36815746244132796\",\n\"lastUpdatedAt\": \"2022-07-21T05:29:37Z\"\n},\n{\n\"holderCount\": 4565261,\n\"totalAmount\": \"36815212704.878653\",\n\"totalAmountRawInteger\": \"36815212704878653\",\n\"lastUpdatedAt\": \"2022-07-20T05:29:47Z\"\n}\n],\n\"nextPageToken\": \"EmDs3EqSha2txDLQwnEiLNmpbpuiAuosQFtyMhPZS9rqnNzFp9Y5C\"\n}\n}"}},"/build/products/advanced-api-sdk/advanced-api-sdk-query-methods":{"title":"Query Methods","data":{"":"Query API Methods serve to request info on the ranges of blocks (max range is 100) for a full list of block metadata.","ankr_getblocks#ankr_getBlocks":"Gets full information for the block specified by request parameters.","request#Request":"","parameters#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\nblockchain (string; required): either of the supported chains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\ndecodeLogs (boolean): set to true to decode logs, or to false if you don't need this kind of info.\ndecodeTxData (boolean): set to true to decode transaction data, or to false if not interested in it.\ndescOrder (boolean): choose data order, either descending (if true) or ascending (if false).\nfromBlock (uint64): the first block of the range.\ntoBlock (uint64): the last block included in the range.\nincludeLogs (boolean): set to true to include logs, or to false to exclude them. Note that logs are stored inside transactions, so make sure the following parameter is also set to true if you'd like to include logs.\nincludeTxs (boolean): set to true to include transactions, or to false to exclude them.\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getBlocksRange\",\n\"params\": {\n\"blockchain\": \"bsc\",\n\"fromBlock\": 9509443,\n\"toBlock\": 9509444\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json","response#Response":"","parameters-1#Parameters":"See the response parameters' data model in Swagger.","code-examples#Code Examples":"","request-1#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getBlocksRange\",\n\"params\": {\n\"blockchain\": \"bsc\",\n\"fromBlock\": 9509443,\n\"toBlock\": 9509444\n},\n\"id\": 1\n}'","response-1#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"blocks\": [\n{\n\"blockchain\": \"string\",\n\"difficulty\": \"string\",\n\"extraData\": \"string\",\n\"gasLimit\": \"string\",\n\"gasUsed\": \"string\",\n\"hash\": \"string\",\n\"logsBloom\": \"string\",\n\"miner\": \"string\",\n\"mixHash\": \"string\",\n\"nonce\": \"string\",\n\"number\": \"string\",\n\"parentHash\": \"string\",\n\"receiptsRoot\": \"string\",\n\"sha3Uncles\": \"string\",\n\"size\": \"string\",\n\"stateRoot\": \"string\",\n\"timestamp\": \"string\",\n\"totalDifficulty\": \"string\",\n\"transactions\": [\n{\n\"blockHash\": \"string\",\n\"blockNumber\": \"string\",\n\"blockchain\": \"string\",\n\"contractAddress\": \"string\",\n\"cumulativeGasUsed\": \"string\",\n\"from\": \"string\",\n\"gas\": \"string\",\n\"gasPrice\": \"string\",\n\"gasUsed\": \"string\",\n\"hash\": \"string\",\n\"input\": \"string\",\n\"logs\": [\n{\n\"address\": \"string\",\n\"blockHash\": \"string\",\n\"blockNumber\": \"string\",\n\"data\": \"string\",\n\"event\": {\n\"anonymous\": true,\n\"id\": \"string\",\n\"inputs\": [\n{\n\"indexed\": true,\n\"name\": \"string\",\n\"size\": 0,\n\"type\": \"string\",\n\"valueDecoded\": \"string\"\n}\n],\n\"name\": \"string\",\n\"signature\": \"string\",\n\"string\": \"string\",\n\"verified\": true\n},\n\"logIndex\": \"string\",\n\"removed\": true,\n\"topics\": [\n\"string\"\n],\n\"transactionHash\": \"string\",\n\"transactionIndex\": \"string\"\n}\n],\n\"logsBloom\": \"string\",\n\"method\": {\n\"id\": \"string\",\n\"inputs\": [\n{\n\"name\": \"string\",\n\"size\": 0,\n\"type\": \"string\",\n\"valueDecoded\": \"string\"\n}\n],\n\"name\": \"string\",\n\"signature\": \"string\",\n\"string\": \"string\",\n\"verified\": true\n},\n\"nonce\": \"string\",\n\"r\": \"string\",\n\"s\": \"string\",\n\"status\": \"string\",\n\"timestamp\": \"string\",\n\"to\": \"string\",\n\"transactionHash\": \"string\",\n\"transactionIndex\": \"string\",\n\"type\": \"string\",\n\"v\": \"string\",\n\"value\": \"string\"\n}\n],\n\"transactionsRoot\": \"string\",\n\"uncles\": [\n\"string\"\n]\n}\n]\n}\n}","ankr_getlogs#ankr_getLogs":"Gets history data for the blocks specified by request parameters.","request-2#Request":"","parameters-2#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\nblockchain (string): a chain or a combination of chains to query:\nSingle chain: eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism.\nChains combination: [eth, polygon, bsc].\nAll chains: leave the value empty to query all the chains available.\n\n\ndecodeLogs (boolean): set to true to decode logs, or to false if you don't need this kind of info.\ndescOrder (boolean): choose data order, either descending (if true) or ascending (if false).\nfromBlock (string): the first block of the range.\nfromTimestamp (uint64): the first timestamp of the range.\npageSize (string): a number of results you'd like to get.\npageToken (string): a token is provided at the end of the response body and can be referenced in the request to fetch the next page.\ntoBlock (string): the last block included in the range.\ntoTimestamp (uint64): the last timestamp of the range.\naddress (uint8): an address of the contract created the logs.\ntopics (uint8): the data the log contains.\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getLogs\",\n\"params\": {\n\"blockchain\": \"eth\",\n\"fromBlock\": \"0xdaf6b1\",\n\"toBlock\": 14350010,\n\"address\": [\"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"],\n\"topics\": [\n[],\n[\n\"0x000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff\"\n]\n]\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json","response-2#Response":"","parameters-3#Parameters":"See the response parameters' data model in Swagger.","code-examples-1#Code Examples":"","request-3#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getLogs\",\n\"params\": {\n\"blockchain\": \"eth\",\n\"fromBlock\": \"0xdaf6b1\", // hex, decimal, \"earliest\", \"latest\" are supported\n\"toBlock\": 14350010, // hex, decimal, \"earliest\", \"latest\" are supported\n\"address\": [\"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"], // hex or array of hexes are supported\n\"topics\": [\n[],\n[\n\"0x000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff\"\n]\n]\n},\n\"id\": 1\n}'","response-3#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"logs\": [\n{\n\"address\": \"string\",\n\"blockHash\": \"string\",\n\"blockNumber\": \"string\",\n\"data\": \"string\",\n\"event\": {\n\"anonymous\": true,\n\"id\": \"string\",\n\"inputs\": [\n{\n\"indexed\": true,\n\"name\": \"string\",\n\"size\": 0,\n\"type\": \"string\",\n\"valueDecoded\": \"string\"\n}\n],\n\"name\": \"string\",\n\"signature\": \"string\",\n\"string\": \"string\",\n\"verified\": true\n},\n\"logIndex\": \"string\",\n\"removed\": true,\n\"topics\": [\n\"string\"\n],\n\"transactionHash\": \"string\",\n\"transactionIndex\": \"string\"\n}\n],\n\"nextPageToken\": \"string\"\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"logs\": [\n{\n\"address\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n\"topics\": [\n\"0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\",\n\"0x000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff\"\n],\n\"data\": \"0x00000000000000000000000000000000000000000000000006ce16d63d3e98d5\",\n\"blockNumber\": \"0xdaf6b1\",\n\"transactionHash\": \"0xa00481485db1092529a3502bd8027e0a85a7eff1ecc17d4adae5b38a2ba33ba1\",\n\"transactionIndex\": \"0x1\",\n\"blockHash\": \"0xdd6a92a8d1436f97e6d3c33154805156b92b59f2cfef3f3fa390ba49643f09e8\",\n\"logIndex\": \"0x0\",\n\"removed\": false\n},\n{\n\"address\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n\"topics\": [\n\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n\"0x000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff\",\n\"0x00000000000000000000000092f0b57e3814e4bd74ef6a6fd6d825db522ccfe2\"\n],\n\"data\": \"0x00000000000000000000000000000000000000000000000006ce16d63d3e98d5\",\n\"blockNumber\": \"0xdaf6b1\",\n\"transactionHash\": \"0xa00481485db1092529a3502bd8027e0a85a7eff1ecc17d4adae5b38a2ba33ba1\",\n\"transactionIndex\": \"0x1\",\n\"blockHash\": \"0xdd6a92a8d1436f97e6d3c33154805156b92b59f2cfef3f3fa390ba49643f09e8\",\n\"logIndex\": \"0x2\",\n\"removed\": false\n},\n{\n\"address\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n\"topics\": [\n\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n\"0x000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff\",\n\"0x000000000000000000000000d42bd36302f33d77cbb080ad7e0434f6bedc9a44\"\n],\n\"data\": \"0x000000000000000000000000000000000000000000000000081e9d8d247e8a1d\",\n\"blockNumber\": \"0xdaf6b3\",\n\"transactionHash\": \"0x9b196e7b81c1aeed1c2bbe3d65c411a6eaecc21ddf5bd7c34141e88577384d4d\",\n\"transactionIndex\": \"0x3\",\n\"blockHash\": \"0xa48f22823710329ad512e3ffc0378a2cc15abda153af23dd6361d58ab190cdb1\",\n\"logIndex\": \"0x22\",\n\"removed\": false\n}\n]\n}\n}","ankr_gettransactionsbyhash#ankr_getTransactionsByHash":"Returns transaction details for a transaction specified by hash.","request-4#Request":"","parameters-4#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\ntransactionHash (string): a hash of the transactions you'd like to request the details for.\ndecodeLogs (boolean): set to true to decode logs, or to false if you don't need this kind of info.\ndecodeTxData (boolean): set to true to decode transaction data, or to false if not interested in it.\nincludeLogs (boolean): set to true to include logs, or to false to exclude them.\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getTransactionsByHash\",\n\"params\": {\n\"transactionHash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"decodeLogs\": true,\n\"decodeTxData\": true\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json","response-4#Response":"Returns all transactions' metadata for the hash specified in request body.","parameters-5#Parameters":"See the response parameters' data model in Swagger.","code-examples-2#Code Examples":"","request-5#Request":"curl --location -g --request POST '{{URL}}' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getTransactionsByHash\",\n\"params\": {\n\"transactionHash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"decodeLogs\": true,\n\"decodeTxData\": true\n},\n\"id\": 1\n}'","response-5#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"transactions\": [\n{\n\"blockHash\": \"string\",\n\"blockNumber\": \"string\",\n\"blockchain\": \"string\",\n\"contractAddress\": \"string\",\n\"cumulativeGasUsed\": \"string\",\n\"from\": \"string\",\n\"gas\": \"string\",\n\"gasPrice\": \"string\",\n\"gasUsed\": \"string\",\n\"hash\": \"string\",\n\"input\": \"string\",\n\"logs\": [\n{\n\"address\": \"string\",\n\"blockHash\": \"string\",\n\"blockNumber\": \"string\",\n\"data\": \"string\",\n\"event\": {\n\"anonymous\": true,\n\"id\": \"string\",\n\"inputs\": [\n{\n\"indexed\": true,\n\"name\": \"string\",\n\"size\": 0,\n\"type\": \"string\",\n\"valueDecoded\": \"string\"\n}\n],\n\"name\": \"string\",\n\"signature\": \"string\",\n\"string\": \"string\",\n\"verified\": true\n},\n\"logIndex\": \"string\",\n\"removed\": true,\n\"topics\": [\n\"string\"\n],\n\"transactionHash\": \"string\",\n\"transactionIndex\": \"string\"\n}\n],\n\"logsBloom\": \"string\",\n\"method\": {\n\"id\": \"string\",\n\"inputs\": [\n{\n\"name\": \"string\",\n\"size\": 0,\n\"type\": \"string\",\n\"valueDecoded\": \"string\"\n}\n],\n\"name\": \"string\",\n\"signature\": \"string\",\n\"string\": \"string\",\n\"verified\": true\n},\n\"nonce\": \"string\",\n\"r\": \"string\",\n\"s\": \"string\",\n\"status\": \"string\",\n\"timestamp\": \"string\",\n\"to\": \"string\",\n\"transactionHash\": \"string\",\n\"transactionIndex\": \"string\",\n\"type\": \"string\",\n\"v\": \"string\",\n\"value\": \"string\"\n}\n]\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"transactions\": [\n{\n\"v\": \"0x94\",\n\"r\": \"0xc3adcd90cbf2ef2870c0b7b5497e3c8a5757aadcc152ec1156804082c3269451\",\n\"s\": \"0x1c12681bee4a75a7514f4251bcb4a0243bfc70de998f5c77d87aedc56bce85fc\",\n\"nonce\": \"0x1615d\",\n\"from\": \"0x64aa6f93e0e1f49ff4958990c40d4bf17dafc0eb\",\n\"gas\": \"0x5cc60\",\n\"gasPrice\": \"0x1c3802ec80\",\n\"input\": \"0x1d3ec0d600000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000052b2e13cc84f2c000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000052b7ce5e6080a4eaee3fd000000000000000000000000000000000000000000052aed9671d3df9df54b80000000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000002043c3f900000000000000000000000000000000000000000000000000000000310ff2d6\",\n\"blockNumber\": \"0xd02cf7\",\n\"to\": \"0x98767abab06e45a181ab73ae4cd0fecd0fbd0cd0\",\n\"transactionIndex\": \"0x0\",\n\"blockHash\": \"0x7c4b9b19b521795a0a99c925d4a03079aca26f14cb7bc1400d0183a5adf56ac1\",\n\"value\": \"0x0\",\n\"type\": \"0x0\",\n\"contractAddress\": null,\n\"cumulativeGasUsed\": \"0x176b2\",\n\"gasUsed\": \"0x176b2\",\n\"logs\": [\n{\n\"address\": \"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\",\n\"topics\": [\n\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n\"0x00000000000000000000000098767abab06e45a181ab73ae4cd0fecd0fbd0cd0\",\n\"0x00000000000000000000000058f876857a02d6762e0101bb5c46a8c1ed44dc16\"\n],\n\"data\": \"0x0000000000000000000000000000000000000000000000047e678c2df911bc30\",\n\"blockNumber\": \"0xd02cf7\",\n\"transactionHash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"transactionIndex\": \"0x0\",\n\"blockHash\": \"0x7c4b9b19b521795a0a99c925d4a03079aca26f14cb7bc1400d0183a5adf56ac1\",\n\"logIndex\": \"0x0\",\n\"removed\": false,\n\"event\": {\n\"name\": \"Transfer\",\n\"inputs\": [\n{\n\"name\": \"_from\",\n\"type\": \"address\",\n\"indexed\": true,\n\"size\": 20,\n\"valueDecoded\": \"0x98767abab06e45a181Ab73AE4cD0FeCd0FBD0cD0\"\n},\n{\n\"name\": \"_to\",\n\"type\": \"address\",\n\"indexed\": true,\n\"size\": 20,\n\"valueDecoded\": \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\"\n},\n{\n\"name\": \"_value\",\n\"type\": \"uint256\",\n\"indexed\": false,\n\"size\": 256,\n\"valueDecoded\": \"82895379195298430000\"\n}\n],\n\"anonymous\": false,\n\"string\": \"event Transfer(address indexed _from, address indexed _to, uint256 _value)\",\n\"signature\": \"Transfer(address,address,uint256)\",\n\"id\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n\"verified\": false\n}\n},\n{\n\"address\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\n\"topics\": [\n\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n\"0x00000000000000000000000058f876857a02d6762e0101bb5c46a8c1ed44dc16\",\n\"0x00000000000000000000000098767abab06e45a181ab73ae4cd0fecd0fbd0cd0\"\n],\n\"data\": \"0x0000000000000000000000000000000000000000000008fc40ca5d0026461ddc\",\n\"blockNumber\": \"0xd02cf7\",\n\"transactionHash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"transactionIndex\": \"0x0\",\n\"blockHash\": \"0x7c4b9b19b521795a0a99c925d4a03079aca26f14cb7bc1400d0183a5adf56ac1\",\n\"logIndex\": \"0x1\",\n\"removed\": false,\n\"event\": {\n\"name\": \"Transfer\",\n\"inputs\": [\n{\n\"name\": \"_from\",\n\"type\": \"address\",\n\"indexed\": true,\n\"size\": 20,\n\"valueDecoded\": \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\"\n},\n{\n\"name\": \"_to\",\n\"type\": \"address\",\n\"indexed\": true,\n\"size\": 20,\n\"valueDecoded\": \"0x98767abab06e45a181Ab73AE4cD0FeCd0FBD0cD0\"\n},\n{\n\"name\": \"_value\",\n\"type\": \"uint256\",\n\"indexed\": false,\n\"size\": 256,\n\"valueDecoded\": \"42432180015750915169756\"\n}\n],\n\"anonymous\": false,\n\"string\": \"event Transfer(address indexed _from, address indexed _to, uint256 _value)\",\n\"signature\": \"Transfer(address,address,uint256)\",\n\"id\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n\"verified\": false\n}\n},\n{\n\"address\": \"0x58f876857a02d6762e0101bb5c46a8c1ed44dc16\",\n\"topics\": [\n\"0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\"\n],\n\"data\": \"0x000000000000000000000000000000000000000000005f4272d9c342f8340191000000000000000000000000000000000000000000beea5069c8a189501d6059\",\n\"blockNumber\": \"0xd02cf7\",\n\"transactionHash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"transactionIndex\": \"0x0\",\n\"blockHash\": \"0x7c4b9b19b521795a0a99c925d4a03079aca26f14cb7bc1400d0183a5adf56ac1\",\n\"logIndex\": \"0x2\",\n\"removed\": false,\n\"event\": {\n\"name\": \"\",\n\"inputs\": [],\n\"anonymous\": false,\n\"string\": \"\",\n\"signature\": \"\",\n\"id\": \"\",\n\"verified\": false\n}\n},\n{\n\"address\": \"0x58f876857a02d6762e0101bb5c46a8c1ed44dc16\",\n\"topics\": [\n\"0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\",\n\"0x00000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e\",\n\"0x00000000000000000000000098767abab06e45a181ab73ae4cd0fecd0fbd0cd0\"\n],\n\"data\": \"0x0000000000000000000000000000000000000000000000047e678c2df911bc30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008fc40ca5d0026461ddc\",\n\"blockNumber\": \"0xd02cf7\",\n\"transactionHash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"transactionIndex\": \"0x0\",\n\"blockHash\": \"0x7c4b9b19b521795a0a99c925d4a03079aca26f14cb7bc1400d0183a5adf56ac1\",\n\"logIndex\": \"0x3\",\n\"removed\": false,\n\"event\": {\n\"name\": \"\",\n\"inputs\": [],\n\"anonymous\": false,\n\"string\": \"\",\n\"signature\": \"\",\n\"id\": \"\",\n\"verified\": false\n}\n},\n{\n\"address\": \"0x0000000000004946c0e9f43f4dee607b0ef1fa1c\",\n\"topics\": [\n\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n\"0x00000000000000000000000098767abab06e45a181ab73ae4cd0fecd0fbd0cd0\",\n\"0x0000000000000000000000000000000000000000000000000000000000000000\"\n],\n\"data\": \"0x0000000000000000000000000000000000000000000000000000000000000003\",\n\"blockNumber\": \"0xd02cf7\",\n\"transactionHash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"transactionIndex\": \"0x0\",\n\"blockHash\": \"0x7c4b9b19b521795a0a99c925d4a03079aca26f14cb7bc1400d0183a5adf56ac1\",\n\"logIndex\": \"0x4\",\n\"removed\": false,\n\"event\": {\n\"name\": \"Transfer\",\n\"inputs\": [\n{\n\"name\": \"_from\",\n\"type\": \"address\",\n\"indexed\": true,\n\"size\": 20,\n\"valueDecoded\": \"0x98767abab06e45a181Ab73AE4cD0FeCd0FBD0cD0\"\n},\n{\n\"name\": \"_to\",\n\"type\": \"address\",\n\"indexed\": true,\n\"size\": 20,\n\"valueDecoded\": \"0x0000000000000000000000000000000000000000\"\n},\n{\n\"name\": \"_value\",\n\"type\": \"uint256\",\n\"indexed\": false,\n\"size\": 256,\n\"valueDecoded\": \"3\"\n}\n],\n\"anonymous\": false,\n\"string\": \"event Transfer(address indexed _from, address indexed _to, uint256 _value)\",\n\"signature\": \"Transfer(address,address,uint256)\",\n\"id\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n\"verified\": false\n}\n}\n],\n\"logsBloom\": \"0x0\",\n\"transactionHash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"hash\": \"0x82c13aaac6f0b6471afb94a3a64ae89d45baa3608ad397621dbb0d847f51196f\",\n\"status\": \"0x1\",\n\"blockchain\": \"bsc\",\n\"timestamp\": \"0x61c09887\",\n\"method\": {\n\"name\": \"\",\n\"inputs\": [],\n\"string\": \"\",\n\"signature\": \"\",\n\"id\": \"\",\n\"verified\": false\n}\n}\n]\n}\n}"}},"/build/products/advanced-api-sdk/advanced-api-sdk-nft-methods":{"title":"NFT Methods","data":{"":"NFT API Methods serve to request NFT-related data across multiple chains.","ankr_getnftsbyowner#ankr_getNFTsByOwner":"Gets a list of NFTs (ERC721/ERC1155/ENS/POAP) associated with an account specified. A request could be further narrowed and filtered using the corresponding request body parameters.","request#Request":"","parameters#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters:\nwalletAddress (string; required): an account address to query for NFTs.\nblockchain (string): a chain or a combination of chains to query:\nSingle chain: eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism.\nChains combination: [eth, polygon, bsc].\nAll chains: leave the value empty to query all the chains available.\n\n\npageSize (integer): a number of results you'd like to get (default=10, max=50).\npageToken (string): a token is provided at the end of the response body and can be referenced in the request to fetch the next page.\nfilter (key-value): Filters your request by either of the following:\nSmart contract address (\"0xd8682bfa6918b0174f287b888e765b9a1b4dc9c3\": [] ) — retrieves all NFTs from the address.\nSmart contract address and NFT ID (\"0xd8682bfa6918b0174f287b888e765b9a1b4dc9c3\": [\"8937\"]) — retrieves a particular NFT specified.\n\n\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getNFTsByOwner\",\n\"params\": {\n\"blockchain\": \"eth\",\n\"walletAddress\": \"0x40a8396b83f84e8380f5fee85cd746fe14cb7330\",\n\"pageSize\": 1,\n\"pageToken\": \"\"\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json","response#Response":"The response contains all the NFTs that belong to the account address specified by request parameters.","parameters-1#Parameters":"A successful response contains the following parameters:\nid (int64; required):\njsonrpc (string; required):\nresult (object): the data object containing a list of NFT assets and their metadata:\nblockchain (string; required): one of the supported chains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\ncollectionName (string): a collection name the NFT asset belongs to.\ncontractAddress (string): an NFT collection's EVM-compatible contract address.\ncontractType (int32): a type of the contract — either ERC721 or ERC1155.\nname (string): a name of the NFT asset.\ntokenId (string): an ID of the NFT asset.\nimageUrl (string): a URL that points to the actual digital file, usually an IPFS link.\nsymbol (string): a symbol of the NFT asset.\ntraits (array): an attribute of the NFT asset.\ntrait_type (string): a trait's descriptive name.\nvalue (string): a value description.","code-examples#Code Examples":"","request-1#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getNFTsByOwner\",\n\"params\": {\n\"blockchain\": [\"eth\"],\n\"walletAddress\": \"0x0E11A192d574b342C51be9e306694C41547185DD\",\n\"pageSize\": 2,\n\"pageToken\": \"\",\n\"filter\": [\n{\n\"0x700b4b9f39bb1faf5d0d16a20488f2733550bff4\": []\n},\n{\n\"0xd8682bfa6918b0174f287b888e765b9a1b4dc9c3\": [\"8937\"]\n}\n]\n},\n\"id\": 1\n}'","response-1#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"assets\": [\n{\n\"blockchain\": \"string\",\n\"collectionName\": \"string\",\n\"contractAddress\": \"string\",\n\"contractType\": 0,\n\"imageUrl\": \"string\",\n\"name\": \"string\",\n\"quantity\": \"string\",\n\"symbol\": \"string\",\n\"tokenId\": \"string\",\n\"tokenUrl\": \"string\",\n\"traits\": [\n{\n\"bunny_id\": \"string\",\n\"count\": 0,\n\"display_type\": \"string\",\n\"frequency\": \"string\",\n\"mp_score\": \"string\",\n\"rarity\": \"string\",\n\"trait_type\": \"string\",\n\"value\": \"string\"\n}\n]\n}\n],\n\"nextPageToken\": \"string\",\n\"owner\": \"string\"\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"owner\": \"0x0e11a192d574b342c51be9e306694c41547185dd\",\n\"assets\": [\n{\n\"blockchain\": \"eth\",\n\"name\": \"Happy Bunny #555\",\n\"tokenId\": \"555\",\n\"imageUrl\": \"https://ipfs.io/ipfs/QmSRkmEDKWUeHi5FiNpQUBAcCq7rKinhf5Pbu8ZPZNkP8r/555\",\n\"collectionName\": \"Happy Bunnies\",\n\"symbol\": \"BUNNY\",\n\"contractType\": \"ERC721\",\n\"contractAddress\": \"0x700b4b9f39bb1faf5d0d16a20488f2733550bff4\",\n\"traits\": [\n{\n\"trait_type\": \"Background\",\n\"value\": \"Green Background\"\n},\n{\n\"trait_type\": \"Body\",\n\"value\": \"Black Pearl Necklace\"\n},\n{\n\"trait_type\": \"Eyes\",\n\"value\": \"Sad Eyes\"\n},\n{\n\"trait_type\": \"Face\",\n\"value\": \"Right Ear Band\"\n},\n{\n\"trait_type\": \"Mouth\",\n\"value\": \"Small Smile\"\n},\n{\n\"trait_type\": \"Skin\",\n\"value\": \"Pink\"\n}\n]\n},\n{\n\"blockchain\": \"eth\",\n\"name\": \"Happy Bunny #6907\",\n\"tokenId\": \"6907\",\n\"imageUrl\": \"https://ipfs.io/ipfs/QmSRkmEDKWUeHi5FiNpQUBAcCq7rKinhf5Pbu8ZPZNkP8r/6907\",\n\"collectionName\": \"Happy Bunnies\",\n\"symbol\": \"BUNNY\",\n\"contractType\": \"ERC721\",\n\"contractAddress\": \"0x700b4b9f39bb1faf5d0d16a20488f2733550bff4\",\n\"traits\": [\n{\n\"trait_type\": \"Background\",\n\"value\": \"Light Blue Background\"\n},\n{\n\"trait_type\": \"Body\",\n\"value\": \"Pirate Tanktop\"\n},\n{\n\"trait_type\": \"Eyes\",\n\"value\": \"Small Point Eyes\"\n},\n{\n\"trait_type\": \"Face\",\n\"value\": \"Light Blue Cap\"\n},\n{\n\"trait_type\": \"Mouth\",\n\"value\": \"Annoyed Mouth\"\n},\n{\n\"trait_type\": \"Skin\",\n\"value\": \"Yellow\"\n}\n]\n},\n{\n\"blockchain\": \"eth\",\n\"name\": \"Moon Boyz #8937\",\n\"tokenId\": \"8937\",\n\"imageUrl\": \"https://moon-boyz-api-do.com/metadata/8937\",\n\"collectionName\": \"The Moon Boyz\",\n\"symbol\": \"MOONBOYZ\",\n\"contractType\": \"ERC721\",\n\"contractAddress\": \"0xd8682bfa6918b0174f287b888e765b9a1b4dc9c3\",\n\"traits\": [\n{\n\"trait_type\": \"Background\",\n\"value\": \"Graphic Moon\"\n},\n{\n\"trait_type\": \"Suits\",\n\"value\": \"Body Suit Iridescent Purple\"\n},\n{\n\"trait_type\": \"Lines\",\n\"value\": \"Lines Suit Blue\"\n},\n{\n\"trait_type\": \"Pocket\",\n\"value\": \"Pocket Silver\"\n},\n{\n\"trait_type\": \"Helmet Close\",\n\"value\": \"Rare Irdiescent Dark Blue\"\n},\n{\n\"trait_type\": \"Ear\",\n\"value\": \"Lightning Red\"\n},\n{\n\"trait_type\": \"Visor\",\n\"value\": \"Black\"\n},\n{\n\"trait_type\": \"Hologram\",\n\"value\": \"Original Heart\"\n}\n]\n}\n],\n\"nextPageToken\": \"BjxaEQyvWry96Z7VXNrffspsVkXZ8PXkMEc8epttW3Jn8JvEx2mF25WLU2cndjitQE4iDiECmMpVBwfPQ8b9hVabmBXipuN6y3gqzgWUbCCWAR2Lv99dF4QgbcANVeaqs7hGDAo\"\n}\n}","ankr_getnftmetadata#ankr_getNFTMetadata":"Gets NFT metadata (ERC721/ERC1155/ENS/POAP) associated with a specific NFT. A request could be further narrowed using the corresponding request body parameters.","request-2#Request":"","parameters-2#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters.\nblockchain (string; required): one of the supported chains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\ncontractAddress (string): a contract address of the NFT the metadata belongs to.\ntokenId (integer): a token ID of the NFT the metadata belongs to.\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getNFTMetadata\",\n\"params\": {\n\"blockchain\": \"avalanche\",\n\"contractAddress\": \"0x8d01c8ee82e581e55c02117a676b5bbd4734fabb\",\n\"tokenId\": \"23240\"\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json","response-2#Response":"A successful request returns, along with the general parameters, the result object containing metadata info on the NFT specified by request parameters.","parameters-3#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nresult (object): the data object containing the NFT metadata and NFT attributes:\nmetadata (object): the data object containing the NFT metadata:\nblockchain (string; required): one of the supported chains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\ncontractAddress (string): a contract address of the NFT Collection.\ncontractType (string): a contract type of the NFT the metadata belongs to (example: ERC721, ERC1155).\ntokenId (string): a token ID of the NFT the metadata belongs to (example: 7822).\n\n\nattributes: an object containing additional information on the NFT:\ncontractType (string): a contract type of the NFT the metadata belongs to (example: ERC721, ERC1155).\ntokenUrl (string): a URL that points to the place storing an NFT's metadata (example: https://live---metadata-5covpqijaa-uc.a.run.app/metadata/7822)\nimageUrl (string): a URL that points to the actual digital file, usually an IPFS link (example: https://live---metadata-5covpqijaa-uc.a.run.app/images/7822)\nname (string): a name of the token (example: Rock 23240).\ndescription (string): a description of the NFT (example: A very angry NFT bird).\ntraits: an array of pre-defined NFT traits:\ntrait_type (string): a specific type of traits (example: Eyes).\nvalue (string): a specific value of traits (example: Angry).","code-examples-1#Code Examples":"","request-3#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getNFTMetadata\",\n\"params\": {\n\"blockchain\": \"avalanche\",\n\"contractAddress\": \"0x8d01c8ee82e581e55c02117a676b5bbd4734fabb\",\n\"tokenId\": \"23240\"\n},\n\"id\": 1\n}'","response-3#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"attributes\": {\n\"contractType\": 0,\n\"description\": \"string\",\n\"imageUrl\": \"string\",\n\"name\": \"string\",\n\"tokenUrl\": \"string\",\n\"traits\": [\n{\n\"bunny_id\": \"string\",\n\"count\": 0,\n\"display_type\": \"string\",\n\"frequency\": \"string\",\n\"mp_score\": \"string\",\n\"rarity\": \"string\",\n\"trait_type\": \"string\",\n\"value\": \"string\"\n}\n]\n},\n\"metadata\": {\n\"blockchain\": \"string\",\n\"collectionName\": \"string\",\n\"collectionSymbol\": \"string\",\n\"contractAddress\": \"string\",\n\"contractType\": 0,\n\"tokenId\": \"string\"\n}\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"metadata\": {\n\"blockchain\": \"avalanche\",\n\"contractAddress\": \"0x8d01c8ee82e581e55c02117a676b5bbd4734fabb\",\n\"tokenId\": \"23240\",\n\"contractType\": \"ERC721\"\n},\n\"attributes\": {\n\"tokenUrl\": \"https://ipfs.io/ipfs/QmYen4cGUc3gF9UQnCycq2AADYLYzoM6mvVzoajAXTr7vH/rock23240.json\",\n\"imageUrl\": \"https://ipfs.io/ipfs/QmPktcEDiRD9qNwc497mwQkJ3zYFQtHwFooPLkgDdRqU4R/23240.png\",\n\"name\": \"Rock 23240\",\n\"description\": \"Rock #23240, can be used to play Rock Game\",\n\"traits\": [\n{\n\"trait_type\": \"face\",\n\"value\": \"Brown\"\n},\n{\n\"trait_type\": \"nose\",\n\"value\": \"Regular Nose\"\n},\n{\n\"trait_type\": \"mouth\",\n\"value\": \"Chinstrap\"\n},\n{\n\"trait_type\": \"eyes\",\n\"value\": \"Big Shades\"\n},\n{\n\"trait_type\": \"hair\",\n\"value\": \"Stringy Hair\"\n},\n{\n\"trait_type\": \"accessories\",\n\"value\": \"Earring\"\n}\n],\n\"contractType\": \"ERC721\"\n}\n}\n}","ankr_getnftholders#ankr_getNFTHolders":"Gets holders of the NFT specified by request body parameters.","parameters-4#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nmethod (string; required): a method used for the request.\nparams (object): the data object containing request body parameters.\nblockchain (string; required): either of the supported blockchains (eth, bsc, fantom, avalanche, polygon, arbitrum, syscoin, optimism).\ncontractAddress (string): a contract address of the NFT Collection.\npageSize (integer): a number of results you'd like to get.\npageToken (string): a token is provided at the end of the response body and can be referenced in the request to fetch the next page.\n\n\n\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getNFTHolders\",\n\"params\": {\n\"blockchain\": \"arbitrum\",\n\"contractAddress\": \"0xc36442b4a4522e871399cd717abdd847ab11fe88\",\n\"pageSize\": 10000,\n\"pageToken\": \"\"\n},\n\"id\": 1\n}\n\n\n\nContent-Type: application/json\nX-API-KEY: {{KEY}}","response-4#Response":"A successful request returns a list of holders for the NFT specified.","parameters-5#Parameters":"id (int64; required): a request ID (example: 1).\njsonrpc (string; required): a JSON RPC spec used (example: 2.0).\nresult (object): the data object containing a holder of the NFT specified by request parameters:\nholder (string): a list of holders.\nnextPageToken (string): ???","code-examples-2#Code Examples":"","request-4#Request":"curl --location --request POST 'https://rpc.ankr.com/multichain' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: {{KEY}} \\\n--data-raw '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"ankr_getNFTHolders\",\n\"params\": {\n\"blockchain\": \"arbitrum\",\n\"contractAddress\": \"0xc36442b4a4522e871399cd717abdd847ab11fe88\",\n\"pageSize\": 10,\n\"pageToken\": \"\"\n},\n\"id\": 1\n}'","response-5#Response":"Code: 200 OK\n\n\n{\n\"error\": {},\n\"id\": 1,\n\"jsonrpc\": \"2.0\",\n\"result\": {\n\"holders\": [\n\"string\"\n],\n\"nextPageToken\": \"string\"\n}\n}\n\n\n\n{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": {\n\"holders\": [\n\"0x000000000000000000000000000000000000dEaD\",\n\"0x00000000000a29A0800f6F557ddbbe8249397dE7\",\n\"0x00000000005dbcB0d0513FcDa746382Fe8a53468\",\n\"0x0000000000F485A774ee60343AD3aC6D05d95Fba\",\n\"0x0000000813B34008A225De08a6a61835508C71f9\",\n\"0x00000010cfed5b9e642901Be70FE7f5C8104411e\",\n\"0x0000006D14cE3CF81449c3BA1f26108DF0A4de8b\",\n\"0x00000744009F1240f4218D6Ad4112AD257A28888\",\n\"0x00002B503a75998C97508916A74Fdb41934Fa030\",\n\"0x00005A06017eB8931b7FDAe82Bce8EB6852282b3\"\n],\n\"nextPageToken\": \"CA9QXqcwG5vQJxibSKdvTFikDeCznM8nzB5PCHNdGjaG1cajS9XdDh2nGALCfcyNqTspvpqPPEtVV4s\"\n}\n}"}},"/stake/extra/ankr-staking-switch-aethc-binance":{"title":"Switching aETHc on BNB Chain","data":{"":"We are decommissioning an older version of the aETHc Liquid Staking token on the BNB Chain and switching to a new aETHc token that is compatible with Ankr Bridge.The reason is Binance stopped supporting an older ETH bridged version and part of our users got their older aETHc locked because of that.To switch to the new aETHc:\nIn your wallet, switch the account with the locked aETHc and change the network option to Binance Smart Chain.\nVisit Ankr Staking Dashboard. Ankr will ask you to connect your wallet if you haven't done it before.\n\n\nLocate the \"unsupported old version\" of aETHc and click Switch to new.\n\n\nIf you forgot to change to Binance Smart Chain at Step 1, you may need to reconnect your wallet after changing to it.\n\nConfirm the switching transaction in your wallet.\n\n\nAfter confirming the transaction, wait for it to finalize.\n\n\nWhen the transaction is finalized and switching is successful, click Go to dashboard to see the new aETHc.\nYou can also  add it to your wallet clicking Add aETHCc to wallet."}},"/game/unity-sdk/how-to/unity-sdk-switch-to-webgl":{"title":"Switch to WebGL","data":{"":"To build a WebGL project you need to switch platforms:\nOpen File > Build Settings…\nSelect WebGL and click Switch Platform.\n\n\nClick Player Settings…\nGo to Player > WebGL tab > Resolution and Presentation.\n\n\nChose a template, based on your Unity version.","add-sdk-support-to-custom-template#Add SDK support to custom template":"If you want to build your WebGL project using a custom template to be compatible with the SDK features, you need to add the ankr-web3.js JavaScript library to it:\nLoad latest release of our WebGL library (lib.zip).\nUnpack it.\nCopy ankr-web3.js to directory with JavaScript sources.\nImport the script to your template page somewhere before the closing body tag:\n\n\n<body>\n...\n<script src=\"your-js-dir/ankr-web3.js\"></script>\n\n</ body>"}},"/game/unity-sdk/unity-sdk-setting-up":{"title":"Setting Up","data":{"":"","installation#Installation":"Download AnkrSDK.unitypackage from the latest release.\nIn your Unity project, locate the Assets folder.\nDrag the AnkrSDK.unitypackage into this folder.\nSelect 'Import all' to have access to all SDK capabilities.","whats-inside#What's inside":"The SDK is designed to make it super easy to get started with game development by enabling connection and interaction across different blockchains.• Contains a huge range of examples, scripts and plugins for a variety of use cases.• Nethereum libraries provide support for web requests using RPC over Http.• Ankr RPC network infrastructure provides fast and easy connection to multiple chains."}},"/game/unreal-sdk/setting-up/unreal-sdk-5":{"title":"Unreal Engine v5","data":{"":"Let's get started!The following instructions are based on Monterey v12.3.1.","get-ready#Get Ready":"Ensure you have the latest version of Xcode.\nDownload the Epic Games Launcher to access the Unreal Engine. Download\nInstall Unreal Engine v5. Download","step-one---add-v5-unreal-engine#STEP ONE - Add v5 Unreal Engine":"Open Epic Games Launcher and view all versions of the Unreal Engine you have.\nClick Library and the + button to add the v5 version\n\n:::warning greyed out + button\nIf you find that the + button is greyed out, then do the following:a. Sign outb. Then from the login box, scroll to the bottom and click Sign in Later.\n\nc. Inside Epic Games Launcher, select Library > + > v5d. Now Sign in as usual:::\nYou can now click to install v5. (This takes some time)\nLaunch v5 (Be patient, this can take a little while):::noteIf a pop up appears:\n\"Do you want the app UnrealEditor.app to accept incoming network connections\"\nSelect Allow\n\n:::","step-two---create-a-new-project#STEP TWO - Create a new project":"Inside the Unreal Project Browser, select the Games tab and Blank\n\n\nUnder Project Defaults, select C++\nDeselect Starter Content\nGive your project a memorable name e.g. BlockchainGame and then click Create\nCheck if your project is successfully created and opens. Then close it. Now we can do the next important step of adding the SDK.","step-three---download-ankr-sdk#STEP THREE - Download Ankr SDK":"Download the latest release of AnkrSDK.zip package.\nCreate a new folder (if it doesn't already exist) inside the project you just created and call it Plugins.\nExtract the downloaded AnkrSDK.zip contents into the Plugins folder you just created.\nDelete the AnkrSDK.zip file (if it is inside the Plugins folder).","step-four---generate-the-xcode-project#STEP FOUR - Generate the Xcode project":":::infoThese docs are written using Xcode 13.1:::\nOpen Unreal Editor\nIf you get a notice saying \"Missing BlockchainGame Modules Ankr SDK\". Select Yes to rebuild.\nIt should now compile the project.\nOnce the project is compiled, select Tools > Generate Xcode project\nWhen this is done, select Tools > Open Xcode","step-five---build-project#STEP FIVE - Build project":"Inside Xcode, you should be able to see the AnkrSDK included in the Plugins folder.\nExpand Games > your_unreal_project__name > Source > your_unreal_project_name > your_unreal_project_name.Build.cs\n\n\n\n\nAdd \"AnkrSDK\" at the end of the string array as shown below:\n\n\nPublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\", \"AnkrSDK\" });\n\nNow from the top menu, select Product > Build For > running\nYou can view the Build status in the top right.\nYou know everything has worked out when a message appears stating 'Build Succeeded'.","step-six---project-opens-in-unreal-editor#STEP SIX - Project opens in Unreal Editor":"Locate GameInstance.h if already created. If not Add C++ class from Content Browser, check Show All Classes and select GameInstance. Name your class 'MyGameInstance'.\nOpen MyGameInstance.h and include the following code:\n#include \"AnkrClient.h\"\n\nUPROPERTY()\nUAnkrClient* ankrClient;\n\nUFUNCTION(BlueprintCallable, Category = \"ANKR SDK\")\nUAnkrClient* GetAnkrClient();\n\nOpen MyGameInstance.cpp and include the following code:\nUAnkrClient* UMyGameInstance::GetAnkrClient()\n{\nif (ankrClient == nullptr)\n{\nankrClient = NewObject<UAnkrClient>();\n}\n\nreturn ankrClient;\n}\n\nYou can now add and use all the functions from the Ankr SDK in your game.:::tip","-nice-work-youre-all-set-to-go#✅ Nice work!! You're all set to go":":::\n\nThe following instructions are based on Windows 10.","get-ready-1#Get Ready":"Ensure you have the latest version of Visual Studio\nDownload the Epic Games Launcher to access the Unreal Engine. Download\nInstall Unreal Engine v5 Download","step-one---add-v5-unreal-engine-1#STEP ONE - Add v5 Unreal Engine":"Open Epic Games Launcher and view all versions of the Unreal Engine you have.\nClick Library and the + button to add the v5 version:::warning greyed out + button\nIf you find that the + button is greyed out, then do the following:a. Sign out\nb. Then from the login box, scroll to the bottom and click 'Sign in Later'.\nc. Inside Epic Games Launcher > Library > + > v5\nd. Now Sign in as usual:::\nYou can now click to install v5 (This takes some time)\nLaunch v5 (Be patient, this can take a little while):::noteIf a pop up appears:\n\"Do you want the app UnrealEditor.app to accept incoming network connections\"\nSelect Allow:::","step-two---create-a-new-project-1#STEP TWO - Create a new project":"Inside the Unreal Project Browser, select the Games tab and Blank\nUnder Project Defaults, select C++\nDeselect Starter Content\nGive your project a memorable name e.g. BlockchainGame and then click Create\nCheck your project opens and then close it. So we can do the next important step of adding the SDK.","step-three---download-ankr-sdk-1#STEP THREE - Download Ankr SDK":"Download the latest release of AnkrSDK.zip package.\nCreate a new folder inside the project you just created and call it Plugins.\nExtract the downloaded AnkrSDK.zip contents into the Plugins folder you just created.\nDelete the AnkrSDK.zip file if is inside the Plugins folder.","step-four---generate-a-visual-studio-project#STEP FOUR - Generate a Visual Studio Project":"Open Unreal Editor\nIf you get a notice saying \"Missing your_unreal_project_name Modules Ankr SDK\". Select Yes to rebuild.\nIt should now compile the project.\nFrom the top menu, select Tools > Generate Visual Studio Project\nWhen this is done, select Tools > Open Visual Studio Project","step-five---build-project-1#STEP FIVE - Build project":"Inside Visual Studio project\nAdd AnkrSDK to your_unreal_project_name > Source > your_unreal_project_name > your_unreal_project_name.Build.cs as shown below:\nPublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\", \"AnkrSDK\" });\n\nGenerate a Visual Studio Project by right-clicking Your_unreal_project_name.uproject' and selecting Generate Visual Studio project files\nOpen the generated Visual Studio solution file (.sln) and check if the plugin is included in the solution explorer.","step-six---project-opens-in-unreal-editor-1#STEP SIX - Project opens in Unreal Editor":"Locate GameInstance.h if already created. If not Add C++ class from Content Browser, check Show All Classes and select GameInstance. Name your class 'MyGameInstance'.\nOpen MyGameInstance.h and include the following code:\n#include \"AnkrClient.h\"\n\nUPROPERTY()\nUAnkrClient* ankrClient;\n\nUFUNCTION(BlueprintCallable, Category = \"ANKR SDK\")\nUAnkrClient* GetAnkrClient();\n\nOpen MyGameInstance.cpp and include the following code:\nUAnkrClient* UMyGameInstance::GetAnkrClient()\n{\nif (ankrClient == nullptr)\n{\nankrClient = NewObject<UAnkrClient>();\n}\n\nreturn ankrClient;\n}\n\nYou can now add and use all the functions from the Ankr SDK in your game.:::tip","-nice-work-youre-all-set-to-go-1#✅ Nice work!! You're all set to go":":::"}},"/game/unreal-sdk/setting-up/unreal-sdk-4":{"title":"Unreal Engine v4","data":{"":"Let's get started!","#":"The following instructions are based on Monterey v12.3.1.","get-ready#Get Ready":"Ensure you have the latest version of Xcode.\nDownload the Epic Games Launcher to access the Unreal Engine. Download\nInstall Unreal Engine v5. Download","step-one---add-unreal-engine-v4#STEP ONE - Add Unreal Engine v4":"Watch how to install Unreal Engine v4:\n\nYou can also read through this list:\nOpen Epic Games Launcher and view all versions of the Unreal Engine you have.\nClick Library and the + button to add the v4 version\n\n\nYou can now click to install v4. (This takes some time)\nLaunch v4 (Be patient, this can take a little while):::noteIf a pop up appears:\n\"Do you want the app UnrealEditor.app to accept incoming network connections\"\nSelect Allow\n\n:::","step-two---create-a-new-project#STEP TWO - Create a new project":"Inside the Unreal Project Browser, select Games and click Next\n\n\nOn the Template screen, select Blank and click Next:::noteIf you can't see any templates, you should reinstall v4:::\n\n\nIn Project Settings\n\n\nFrom the Blueprint and C++ options, select C++.\nFrom the Starter Content and No Starter Content options, select No Starter Content\nFrom the Desktop/Console or Mobile options, select your preference.\n\n\n\n\nGive your project a memorable name e.g. BlockchainGame and then click Create Project\nCheck your project is successfully created and opens. Then close it. So we can do the next important step of adding the SDK.","step-three---download-ankr-sdk#STEP THREE - Download Ankr SDK":"Download the latest release of AnkrSDK.zip package.\nCreate a new folder (if it doesn't exist) inside the project you just created and call it Plugins.\nExtract the downloaded AnkrSDK.zip contents into the Plugins folder you just created.\nDelete the AnkrSDK.zip file if it is inside the Plugins folder as well.","step-four---generate-the-xcode-project#STEP FOUR - Generate the Xcode project":":::infoThese docs are written using Xcode 13.1:::\nOpen Unreal Editor\nIf you get a notice saying \"Missing BlockchainGame Modules Ankr SDK\". Select Yes to rebuild.\nIt should now compile the project.\nOnce the project is compiled, select Tools > Generate Xcode project\nWhen this is done, select Tools > Open Xcode","step-five---build-project#STEP FIVE - Build project":"Inside Xcode, you should be able to see the AnkrSDK included in the Plugins folder.\nExpand Games > your_unreal_project__name > Source > your_unreal_project_name > your_unreal_project_name.Build.cs\n\nAdd \"AnkrSDK\" at the end of the string array as shown below:\nPublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\", \"AnkrSDK\" });\n\nNow from the top menu, select Product > Build For > running\nYou can view the Build status in the top right.\nYou know everything has worked out when a message appears stating 'Build Succeeded'.","step-six---open-project-in-unreal-editor#STEP SIX - Open project in Unreal Editor":"Locate GameInstance.h if already created. If not Add C++ class from Content Browser, check Show All Classes and select GameInstance. Name your class 'MyGameInstance'.\nOpen MyGameInstance.h and include the following code:\n#include \"AnkrClient.h\"\n\nUPROPERTY()\nUAnkrClient* ankrClient;\n\nUFUNCTION(BlueprintCallable, Category = \"ANKR SDK\")\nUAnkrClient* GetAnkrClient();\n\nOpen MyGameInstance.cpp and include the following code:\nUAnkrClient* UMyGameInstance::GetAnkrClient()\n{\nif (ankrClient == nullptr)\n{\nankrClient = NewObject<UAnkrClient>();\n}\n\nreturn ankrClient;\n}\n\nYou can now add and use all the functions from the Ankr SDK in your game.:::tip","-nice-work-youre-all-set-to-go#✅ Nice work!! You're all set to go":":::\n\nThe following instructions are based on Windows 10.","get-ready-1#Get Ready":"Ensure you have the latest version of Visual Studio\nDownload the Epic Games Launcher to access the Unreal Engine. Download\nInstall Unreal Engine v5 Download","step-one---add-v5-unreal-engine#STEP ONE - Add v5 Unreal Engine":"Open Epic Games Launcher and view all versions of the Unreal Engine you have.\nClick Library and the + button to add the v5 version:::warning greyed out + button\nIf you find that the + button is greyed out, then do the following:a. Sign out\nb. Then from the login box, scroll to the bottom and click 'Sign in Later'.\nc. Inside Epic Games Launcher > Library > + > v5\nd. Now Sign in as usual:::\nYou can now click to install v5 (This takes some time)\nLaunch v5 (Be patient, this can take a little while):::noteIf a pop up appears:\n\"Do you want the app UnrealEditor.app to accept incoming network connections\"\nSelect Allow:::","step-two---create-a-new-project-1#STEP TWO - Create a new project":"Inside the Unreal Project Browser, select the Games tab and Blank\nUnder Project Defaults, select C++\nDeselect Starter Content\nGive your project a memorable name e.g. BlockchainGame and then click Create\nCheck your project opens and then close it. So we can do the next important step of adding the SDK.","step-three---download-ankr-sdk-1#STEP THREE - Download Ankr SDK":"Download the latest release of AnkrSDK.zip package.\nCreate a new folder inside the project you just created and call it Plugins.\nExtract the downloaded AnkrSDK.zip contents into the Plugins folder you just created.\nDelete the AnkrSDK.zip file if it is inside the Plugins folder.","step-four---generate-a-visual-studio-project#STEP FOUR - Generate a Visual Studio Project":"Open Unreal Editor\nIf you get a notice saying \"Missing your_unreal_project_name Modules Ankr SDK\". Select Yes to rebuild.\nIt should now compile the project.\nFrom the top menu, select Tools > Generate Visual Studio Project\nWhen this is done, select Tools > Open Visual Studio Project","step-five---build-project-1#STEP FIVE - Build project":"Inside Visual Studio project\nAdd AnkrSDK to your_unreal_project_name > Source > your_unreal_project_name > your_unreal_project_name.Build.cs as shown below:\nPublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\", \"AnkrSDK\" });\n\nGenerate a Visual Studio Project by right-clicking Your_unreal_project_name.uproject' and selecting Generate Visual Studio project files\nOpen the generated Visual Studio solution file (.sln) and check if the plugin is included in the solution explorer.","step-six---open-project-in-unreal-editor-1#STEP SIX - Open Project in Unreal Editor":"Locate GameInstance.h if already created. If not Add C++ class from Content Browser, check Show All Classes and select GameInstance. Name your class 'MyGameInstance'.\nOpen MyGameInstance.h and include the following code:\n#include \"AnkrClient.h\"\n\nUPROPERTY()\nUAnkrClient* ankrClient;\n\nUFUNCTION(BlueprintCallable, Category = \"ANKR SDK\")\nUAnkrClient* GetAnkrClient();\n\nOpen MyGameInstance.cpp and include the following code:\nUAnkrClient* UMyGameInstance::GetAnkrClient()\n{\nif (ankrClient == nullptr)\n{\nankrClient = NewObject<UAnkrClient>();\n}\n\nreturn ankrClient;\n}\n\nYou can now add and use all the functions from the Ankr SDK in your game.:::tip","-nice-work-youre-all-set-to-go-1#✅ Nice work!! You're all set to go":":::"}},"/build/chains/ethereum/chains-v2-ethereum":{"title":"Overview","data":{"":"Ethereum is a decentralized, open-source blockchain with smart contract functionality. Ether (ETH) is the native cryptocurrency of the platform.The Ethereum network is one of the most popular platforms for building dApps and blockchain solutions. A series of upgrades are currently taking place as part of the transition from Proof-of-Work to a Proof-of-Stake consensus model. This shift allows network participants to stake ETH and earn rewards for supporting the network.To connect to an Ethereum node, every Ethereum Client e.g. Geth or Erigon implements a JSON-RPC specification. The Ethereum JSON-RPC Specification is a collection of methods that all clients implement.The following networks are supported by Ankr.\nEthereum Mainnet\nRinkeby Testnet\nRopsten Testnet\nGoerli Testnet","quick-links#Quick links":"​EthereumDocsGithub","connect-wallet#Connect wallet":"You can set up your MetaMask wallet to connect to Ethereum RPC. You can then perform transactions and interact with the network.","example-request---web3_clientversion#Example request - web3_clientVersion":"This request gets the Client version being used.\ncurl https://rpc.ankr.com/eth \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":67}'","example-response---geth-client-version#Example response - Geth Client version":"The response shows Geth Client v1.1.7-74 is used.\n{\"jsonrpc\":\"2.0\",\"id\":1,\"result\":\"Geth/v1.1.7-74f6b613/linux-amd64/go1.16.10\"}","example-request---net_version#Example request - net_version":"This request returns the current network id.\n\ncurl https://rpc.ankr.com/eth \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}'","example-response---ethereum-mainnet-id-is-returned#Example response - Ethereum Mainnet ID is returned":"{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"1\"}\n\"1\": Ethereum Mainnet\"2\": Morden Testnet (deprecated)\"3\": Ropsten Testnet\"4\": Rinkeby Testnet\"42\": Kovan Testnet","example-request---uses-eth_-to-request-the-latest-block-number#Example request - Uses eth_ to request the latest block number":"curl https://rpc.ankr.com/eth \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":67}'","example-response#Example response":"The latest block number is returned in hex\n{\"jsonrpc\":\"2.0\",\"id\":67,\"result\":\"0xdb85e4\"}"}},"/build/chains/ethereum/how-to/chains-v2-ethereum-connect-metamask":{"title":"Connect Wallet","data":{"":"This section walks you through how to connect a MetaMask wallet to Ethereum Mainnet and Testnets.","how-to-add-ethereum-mainnet-to-your-wallet#How to add Ethereum Mainnet to your wallet":"This is the primary Ethereum production blockchain. Transactions on the Ethereum Mainnet occur on the blockchain and incur costs (ETH).\nhttps://rpc.ankr.com/eth\nThere are default settings in MetaMask for connecting a wallet to Ethereum Mainnet. However, it is possible to add additional RPC networks. It is generally better to have multiple networks to choose from for redundancy.\nIn MetaMask, select Add Network and add the details below.Make sure you include backslashes and don't add any whitespace.\n\n\nChain\tCustom RPC Category\tDetails\tEthereum\tNETWORK NAME:\tAnkr Ethereum RPC\t\tNEW RPC URL:\thttps://rpc.ankr.com/eth/\t\tCHAIN ID:\t1\t\tSYMBOL:\tETH\t\tBLOCK EXPLORER URL:\thttps://etherscan.io/\n\nIgnore the Chain ID warning and click Save.","about-ethereum-testnets#About Ethereum Testnets":"For building dapps, it is important to validate contract code on a Testnet before deploying to Mainnet. Most testnets use a proof-of-authority consensus mechanism. Using Test ETH incurs no real value.The following RPC Testnets are available:\nRinkeby\nRopsten\nGoerli\n\n:::info🚰Be aware that Testnet faucets vary in their reliability and Testnet ETH may take a while to arrive!:::","rinkeby-and-faucets#Rinkeby and faucets":"Rinkeby is for Geth Client users only. It uses proof-of-authority consensus.\nhttps://rpc.ankr.com/eth_rinkeby\nRinkeby Faucetshttps://faucets.chain.link/rinkebyhttps://www.rinkebyfaucet.comhttps://fauceth.komputing.org/https://faucet.paradigm.xyz/ (Requires Social media posting)https://faucet.rinkeby.io/ (Requires Social media posting)","how-to-add-ankr-rinkeby-rpc-to-your-wallet#How to add Ankr Rinkeby RPC to your wallet":"There are default settings in MetaMask for connecting a wallet to Ethereum Rinkeby but it is possible to add additional RPC networks. It is generally better to have multiple networks to choose from for redundancy.\nIn MetaMask, select Add Network and add the details below.\n\nMake sure you include backslashes and don't add any whitespace.\nChain\tCustom RPC Category\tDetails\tEthereum\tNETWORK NAME:\tAnkr Rinkeby RPC\t\tNEW RPC URL:\thttps://rpc.ankr.com/eth_rinkeby/\t\tCHAIN ID:\t4\t\tSYMBOL:\tRIN\t\tBLOCK EXPLORER URL:\thttps://rinkeby.etherscan.io/\n\nIgnore the Chain ID warning and click Save","ropsten-and-faucets#Ropsten and faucets":"Ropsten is for Geth, Parity, Nethermind and Hyperledger Besu Client users. It is the only proof-of-work Testnet. It most closely resembles the current Ethereum network. It can have unpredictable block times.\nhttps://rpc.ankr.com/eth_ropsten\nRopsten Faucetshttps://faucet.paradigm.xyz/ (Requires Social media posting)https://faucet.dimensions.network/","how-to-add-ankr-ropsten-rpc-to-your-wallet#How to add Ankr Ropsten RPC to your wallet":"There are default settings in MetaMask for connecting a wallet to Ropsten Testnet but it is possible to add additional RPC networks. It is generally better to have multiple networks to choose from for redundancy.\nIn MetaMask, select Add Network and add the details below.Make sure to not add any whitespace and to include backslashes\n\n\nChain\tCustom RPC Category\tDetails\tEthereum\tNETWORK NAME:\tAnkr Ropsten RPC\t\tNEW RPC URL:\thttps://rpc.ankr.com/eth_ropsten/\t\tCHAIN ID:\t3\t\tSYMBOL:\tROP\t\tBLOCK EXPLORER URL:\thttps://ropsten.etherscan.io/\n\nIgnore the Chain ID warning and click Save","goerli-and-faucets#Goerli and faucets":"Goerli can be used with any client. It uses proof-of-authority consensus.\nhttps://rpc.ankr.com/eth_goerli\nGoerli Faucetshttps://goerlifaucet.com/","how-to-add-ankr-goerli-rpc-to-your-wallet#How to add Ankr Goerli RPC to your wallet":"There are default settings in MetaMask for connecting a wallet to Goerli Testnet but it is possible to add additional RPC networks. It is generally better to have multiple networks to choose from for redundancy.\nIn MetaMask, select Add Network and add the details below.Make sure to not add any whitespace and to include backslashes\n\n\nChain\tCustom RPC Category\tDetails\tEthereum\tNETWORK NAME:\tAnkr Goerli RPC\t\tNEW RPC URL:\thttps://rpc.ankr.com/eth_goerli/\t\tCHAIN ID:\t5\t\tSYMBOL:\tGOR\t\tBLOCK EXPLORER URL:\thttps://goerli.etherscan.io/\n\nIgnore the Chain ID warning and click Save"}},"/app-chain/components/app-chain-rpc-endpoints":{"title":"RPC Endpoints","data":{"":"Full nodes with RPC endpoints enable developers to communicate with your App Chain using “remote procedure calls.”","why-do-i-need-full-nodes#Why do I need full nodes?":"Validator nodes process transactions and add new blocks to the chain, keeping record of the newest data.\nFull nodes keep record of the entire ledger.Need to know what happened in block #4317? Need to interact with the blockchain to check an address’ token balance? Need to build a dApp? You’ll need full nodes.","why-do-i-need-an-rpc-endpoint#Why do I need an RPC endpoint?":"Most developers read and write data to and from the blockchain remotely, sending and receiving data via “remote procedure calls,” or RPCs.\nThese requests can be efficiently filtered through an endpoint (or multiple endpoints).\nYou’ll need an RPC endpoint to facilitate the devs building on your App Chain.","determine-your-rpc-needs#Determine your RPC needs":"Option 1 (experienced Web3 developers)Ankr launches and hosts three RPC nodes for one year. This option does not include SLA support, and is intended for developers who have the expertise to keep their own nodes up and running.Option 2 (new to Web3, or want SLA support)Ankr launches, hosts, and provides full engineering support for six RPC nodes for one year — including strategic network updates to maintain 100% uptime.\nConnect to your App Chain using these nodes, but know they’ll also receive public-facing network traffic from Ankr Protocol.Option 3 (new Web3 users and special high-traffic use cases)Ankr provides a fully customizable and private experience with the setup, hosting, and maintenance of 6 RPC nodes with private RPC engineering so that these nodes are exclusively reachable via your App Chain.\nThis option includes full SLA for Ankr engineering support.","set-up-your-rpc-endpoint-start-testing-your-app-chain#Set up your RPC endpoint, start testing your App Chain":"Depending on your particular use case and usage metrics, your RPC node needs may vary.\nIf you have a lot of users and traffic, you may opt for private RPC nodes.\nIf you’re just getting off the ground, maybe you can get away with using public RPC nodes.\nIn any case, Ankr is here to set up, host, and provide optimal node services for your App Chain."}},"/app-chain/components/app-chain-testnet-faucet":{"title":"TestNet Faucet","data":{"":"Provide free testnet tokens for developers building on your App Chain.","what-is-a-testnet#What is a testnet?":"Testnets act like a sandbox where developers can test out features before they go live.\nThey are a proving ground for your blockchain and application where you can discover bugs and any unforeseen glitches by testing and experimenting without risk to real funds or the mainnet.","why-do-i-need-a-testnet-for-my-app-chain#Why do I need a testnet for my App Chain?":"It's essential to run plenty of demos to test for bugs before launching your project.\nTo do this, dApps need a testnet (and testnet tokens) readily available for users to interact with and send to and from wallet addresses.","what-is-a-testnet-token-faucet#What is a testnet token faucet?":"Faucet tools allow users to provide their public addresses and receive tokens to interact with your testnet.\nA testnet token faucet is necessary for developers to build (and test) on an App Chain.","how-does-the-testnet-faucet-work#How does the testnet faucet work?":"Anyone with access to your testnet will be able to visit the faucet and provide their wallet address to receive testnet tokens.\nSpending these tokens on transactions and gas, they can interact with your App Chain testnet — making sure things work as intended.\nThis helps bring your projects one step closer to mainnet launch.","how-does-ankr-build-your-testnet-token-faucet#How does Ankr build your testnet token faucet?":"Each testnet token faucet needs to be built from scratch.\nAnkr creates the testnet token faucet for you — the fastest and easiest way — so developers can start deploying smart contracts and testing the network.\nIt includes full SLA and support from Ankr’s engineering team.Ankr creates your testnet token faucet early in the App Chain process so you can start deploying smart contracts and tooling with the customization of your blockchain features ASAP."}},"/app-chain/components/app-chain-block-explorer":{"title":"Block Explorer","data":{"":"Track and analyze addresses, transactions, and blocks on your App Chain.","why-do-i-need-a-block-explorer#Why do I need a block explorer?":"Block explorers are crucial for development, making it possible to test transactions, and see their results in real time.\nEven in the early testnet phase, you’ll need a block explorer to build.","pick-a-chain#Pick a chain":"Block explorers function roughly the same way, though each is tailored for the specific blockchain that it tracks (think \"Etherscan for your blockchain\").","determine-your-block-explorer-needs#Determine your block explorer needs":"Option 1 (experienced Web3 developers)Ankr gives you access to our block explorer codebase and so you can create your own DIY version to your exact specifications. This option does not include SLA support.Option 2 (new Web3 users)Ankr builds you a block explorer that’s integrated with our multi-chain block explorer, Ankr Scan.\nInteract with your own App Chain, as well as with other Ankr Scan-supported networks.\nThis option includes full SLA support from Ankr engineering.Option 3 (new Web3 users and special high-traffic use cases)Ankr builds a custom block explorer from scratch specifically for your App Chain.\nUsing the Blockscout codebase, your dedicated block explorer will serve only your App Chain, and comes with full SLA support from Ankr’s engineering team.","set-up-your-block-explorer-start-testing-your-app-chain#Set up your block explorer, start testing your App Chain":"Whichever option you choose, Ankr is ready to give you the right block explorer to suit your particular App Chain use case — so you can get to work testing and launching your network."}},"/app-chain/components/app-chain-staking-ui":{"title":"Staking UI","data":{"":"Enable users to stake your token to your App Chain through a simple, elegant UI interface.","what-is-ankrs-staking-ui-interface#What is Ankr’s staking UI interface?":"Ankr offers a dedicated pathway for your token holders to stake their assets with validators on your App Chain with an easy-to-use interface.","why-does-my-app-chain-need-a-staking-ui#Why does my App Chain need a staking UI?":"Like any Proof-of-Stake blockchain, App Chains need validators to stake native tokens in order to participate in securing the network and adding new blocks.\nWith a simple staking interface, it’s easy for your token holders to delegate their stake to validators of your App Chain network.The more assets are staked, the more secure your App Chain becomes, and the more attractive it is to CEXs that are interested in potentially listing your token for trading.","how-does-staking-ui-work#How does staking UI work?":"Ankr either provides integration with our existing staking platform, or our engineers can build a custom staking platform from scratch for your App Chain, depending on your needs.Option 1Ankr offers integration with the Ankr Staking platform so that App Chain users can easily stake tokens from the App Chain using our smart contract.Option 2Ankr creates a new delegated staking platform so that App Chain users can easily stake tokens through a dedicated interface.\nChoose from three different locations for the staking UI:\nOn your App Chain website.\nOn a shared website for App Chain staking built by Ankr.\nHave staking built into your App Chain’s dedicated block explorer."}},"/learn/advanced-web3/build-Donation-Based-Crowdfunding-dApp-on-Polygon-with-ankr":{"title":"How to build an End-to-End Donation-Based Crowdfunding dApp on Polygon with Ankr","data":{"":""}},"/app-chain/use-cases/app-chain-web3-gaming":{"title":"Web3 Gaming","data":{"":"","introduction#Introduction":"These use case has been developed specifically for gaming studios looking to launch Web3 games using Ankr App Chains.\nThe information contained here is not intended to provide strict rules, but rather loose guidelines to help game developers think about where to start constructing their ideal App Chain.","gaming-sdks#Gaming SDKs":"Many App Chains that host Web3 games have utilized Ankr’s gaming SDKs that have been designed for the Unity and Unreal gaming engines.\nThese SDKs make it easy for your game developers to integrate the following capabilities into your App Chain:\nSupport Web3 wallets for in-game transactions\nIntegrate NFT capabilities like minting, renting, and trading\nLaunch and distribute in-game currency as tokens\nOptimize games for Web3 on mobile\nAnd more!","dedicated-throughput-for-gaming-transactions#Dedicated throughput for gaming transactions":"Web3 games — depending on their user base of players and popularity — typically require extremely high throughput in order to process a high volume of transactions.\nWith thousands of players interacting with all kinds of tokenized in-game content, it’s not unfeasible for a Web3 game to need to process many millions of transactions per day.Depending on the level of tokenization you integrate into your game, you may have players performing transactions on your App Chain to customize their avatars, equip new items, purchase in-game assets, trade assets to other players, earn rewards for completing in-game objectives, and so much more.Of course, some games may not process quite as many transactions until they rise in popularity, it’s best to be prepared for the potential traffic that a successful Web3 game might eventually experience.","validator-nodes-speed-vs-decentralization#Validator nodes: speed vs. decentralization":"When it comes to the structure of your App Chain, the main thing to consider with validator nodes is the delicate balance between speed and decentralization.\nThe more validator nodes you have, and the more assets that are staked to them, the more secure your Proof-of-Stake App Chain will become to bad actors and potential attacks. But, conversely, the smaller the pool of validators is, the less overhead you’ll have with the block propagation process and the more quickly and efficiently you’ll be able to process new transactions.This setup will of course vary depending on your particular needs, including the popularity of your game, but Ankr App Chains have typically launched with at least 5 validator nodes, and the ability to expand the validator node set as time goes on to as many as 20 validator nodes.","node-ownership#Node ownership":"Again, this is a topic that will require attention to your individual situation. You can either host your own validator nodes, have Ankr host validator nodes for you, or open up validator node hosting to independent parties in your community — or, realistically, maybe even a mixture of all three of these options.This will likely depend on your level of Web3 knowledge and experience hosting blockchain nodes. Ankr can provide you with the tools to host your own validator nodes, or can help you with hosting validator nodes to support your App Chain.","community-engagement-governance--staking#Community engagement: governance & staking":"We’ve typically seen community governance be really successful with gaming App Chains as a force for driving participation, engagement, and activity toward your game.\nAnd, by integrating community governance with your native token, you can also drive trading volume for your token — thereby boosting your chances of successfully getting the token listed on major crypto exchanges.\nPlayers who feel like they have a real say in the direction of a game are more likely to actively participate and play it more often.Similarly, you’ll need to integrate a staking interface for your players and token holders to stake native tokens with validators of your App Chain.\nNot only does this help improve the security of your chain, but it also drives token holders and trading volume by enabling stakers to earn rewards."}},"/stake/liquid-staking/ftm/ftm-liquid-staking-unstake":{"title":"Unstake","data":{"":"","overview#Overview":"If you decide to unstake, it can take up to 35 days before you can claim your funds.\nBefore you start, ensure you have a small amount of FTM for the gas fee.Unstaknig also applies an unstake fee that depends on the current liquidity and amount to unstake. The fee is deducted from the unstaked amount.Unstaking FTM tokens is a multi-step process involving sending several transactions to the FTM smart-contracts deployed in Binance chain and BNB Chain.FTM tokens are transferred to your wallet automatically when the unstaking process completes. There is no additional cost for this.","unstake-ftm#Unstake FTM":"Binance gas fee applied when unstaking\n\nOpen Ankr Staking Dashboard.\nLocate the aFTMb box and click the '-' icon to unstake.\nEnter the amount to unstake and click 'Unstake'.\n\nYou will need to make the following interactions in your wallet:👍 Grant access to grant access to your wallet.👍 Confirm the unstaking transaction.\nOnce transaction is confirmed, Ankr Ear Dashboard updates to show 'Unstaking in progress'"}}}